Version 3.2 HI-TECH Software Intermediate Code
"214 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f73.h
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"2008
[v _RC6 `Vb ~T0 @X0 0 e@62 ]
"2010
[v _RC7 `Vb ~T0 @X0 0 e@63 ]
[v F826 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic.h
[v __delay `JF826 ~T0 @X0 0 e ]
[p i __delay ]
"282 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f73.h
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"281
[u S9 `S10 1 ]
[n S9 . . ]
"293
[v _PORTCbits `VS9 ~T0 @X0 0 e@7 ]
"9 lcd.h
[v _LCD_SetPos `(v ~T0 @X0 0 ef2`uc`uc ]
[p mainexit ]
"1202 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f73.h
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"164
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"1314
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1252
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1850
[v _ADCS0 `Vb ~T0 @X0 0 e@254 ]
"1852
[v _ADCS1 `Vb ~T0 @X0 0 e@255 ]
"57
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"1952
[v _PCFG2 `Vb ~T0 @X0 0 e@1274 ]
"1950
[v _PCFG1 `Vb ~T0 @X0 0 e@1273 ]
"1948
[v _PCFG0 `Vb ~T0 @X0 0 e@1272 ]
"1858
[v _ADON `Vb ~T0 @X0 0 e@248 ]
"7 lcd.h
[v _LCD_Init `(v ~T0 @X0 0 ef ]
"1924 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f73.h
[v _GO `Vb ~T0 @X0 0 e@250 ]
"1016
[v _ADRES `Vuc ~T0 @X0 0 e@30 ]
"1898
[v _CHS0 `Vb ~T0 @X0 0 e@251 ]
"1900
[v _CHS1 `Vb ~T0 @X0 0 e@252 ]
"1902
[v _CHS2 `Vb ~T0 @X0 0 e@253 ]
"8 lcd.h
[v _LCD_String `(v ~T0 @X0 0 ef1`*uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f73.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f73.h
[; ;pic16f73.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f73.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f73.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f73.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f73.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f73.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f73.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f73.h: 76: typedef union {
[; ;pic16f73.h: 77: struct {
[; ;pic16f73.h: 78: unsigned C :1;
[; ;pic16f73.h: 79: unsigned DC :1;
[; ;pic16f73.h: 80: unsigned Z :1;
[; ;pic16f73.h: 81: unsigned nPD :1;
[; ;pic16f73.h: 82: unsigned nTO :1;
[; ;pic16f73.h: 83: unsigned RP :2;
[; ;pic16f73.h: 84: unsigned IRP :1;
[; ;pic16f73.h: 85: };
[; ;pic16f73.h: 86: struct {
[; ;pic16f73.h: 87: unsigned :5;
[; ;pic16f73.h: 88: unsigned RP0 :1;
[; ;pic16f73.h: 89: unsigned RP1 :1;
[; ;pic16f73.h: 90: };
[; ;pic16f73.h: 91: struct {
[; ;pic16f73.h: 92: unsigned CARRY :1;
[; ;pic16f73.h: 93: unsigned :1;
[; ;pic16f73.h: 94: unsigned ZERO :1;
[; ;pic16f73.h: 95: };
[; ;pic16f73.h: 96: } STATUSbits_t;
[; ;pic16f73.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f73.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f73.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f73.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f73.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f73.h: 169: typedef union {
[; ;pic16f73.h: 170: struct {
[; ;pic16f73.h: 171: unsigned RA0 :1;
[; ;pic16f73.h: 172: unsigned RA1 :1;
[; ;pic16f73.h: 173: unsigned RA2 :1;
[; ;pic16f73.h: 174: unsigned RA3 :1;
[; ;pic16f73.h: 175: unsigned RA4 :1;
[; ;pic16f73.h: 176: unsigned RA5 :1;
[; ;pic16f73.h: 177: };
[; ;pic16f73.h: 178: } PORTAbits_t;
[; ;pic16f73.h: 179: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f73.h: 214: extern volatile unsigned char PORTB @ 0x006;
"216
[; ;pic16f73.h: 216: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f73.h: 219: typedef union {
[; ;pic16f73.h: 220: struct {
[; ;pic16f73.h: 221: unsigned RB0 :1;
[; ;pic16f73.h: 222: unsigned RB1 :1;
[; ;pic16f73.h: 223: unsigned RB2 :1;
[; ;pic16f73.h: 224: unsigned RB3 :1;
[; ;pic16f73.h: 225: unsigned RB4 :1;
[; ;pic16f73.h: 226: unsigned RB5 :1;
[; ;pic16f73.h: 227: unsigned RB6 :1;
[; ;pic16f73.h: 228: unsigned RB7 :1;
[; ;pic16f73.h: 229: };
[; ;pic16f73.h: 230: } PORTBbits_t;
[; ;pic16f73.h: 231: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f73.h: 276: extern volatile unsigned char PORTC @ 0x007;
"278
[; ;pic16f73.h: 278: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f73.h: 281: typedef union {
[; ;pic16f73.h: 282: struct {
[; ;pic16f73.h: 283: unsigned RC0 :1;
[; ;pic16f73.h: 284: unsigned RC1 :1;
[; ;pic16f73.h: 285: unsigned RC2 :1;
[; ;pic16f73.h: 286: unsigned RC3 :1;
[; ;pic16f73.h: 287: unsigned RC4 :1;
[; ;pic16f73.h: 288: unsigned RC5 :1;
[; ;pic16f73.h: 289: unsigned RC6 :1;
[; ;pic16f73.h: 290: unsigned RC7 :1;
[; ;pic16f73.h: 291: };
[; ;pic16f73.h: 292: } PORTCbits_t;
[; ;pic16f73.h: 293: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f73.h: 338: extern volatile unsigned char PCLATH @ 0x00A;
"340
[; ;pic16f73.h: 340: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f73.h: 343: typedef union {
[; ;pic16f73.h: 344: struct {
[; ;pic16f73.h: 345: unsigned PCLATH :5;
[; ;pic16f73.h: 346: };
[; ;pic16f73.h: 347: } PCLATHbits_t;
[; ;pic16f73.h: 348: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f73.h: 358: extern volatile unsigned char INTCON @ 0x00B;
"360
[; ;pic16f73.h: 360: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f73.h: 363: typedef union {
[; ;pic16f73.h: 364: struct {
[; ;pic16f73.h: 365: unsigned RBIF :1;
[; ;pic16f73.h: 366: unsigned INTF :1;
[; ;pic16f73.h: 367: unsigned TMR0IF :1;
[; ;pic16f73.h: 368: unsigned RBIE :1;
[; ;pic16f73.h: 369: unsigned INTE :1;
[; ;pic16f73.h: 370: unsigned TMR0IE :1;
[; ;pic16f73.h: 371: unsigned PEIE :1;
[; ;pic16f73.h: 372: unsigned GIE :1;
[; ;pic16f73.h: 373: };
[; ;pic16f73.h: 374: struct {
[; ;pic16f73.h: 375: unsigned :2;
[; ;pic16f73.h: 376: unsigned T0IF :1;
[; ;pic16f73.h: 377: unsigned :2;
[; ;pic16f73.h: 378: unsigned T0IE :1;
[; ;pic16f73.h: 379: };
[; ;pic16f73.h: 380: } INTCONbits_t;
[; ;pic16f73.h: 381: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f73.h: 436: extern volatile unsigned char PIR1 @ 0x00C;
"438
[; ;pic16f73.h: 438: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f73.h: 441: typedef union {
[; ;pic16f73.h: 442: struct {
[; ;pic16f73.h: 443: unsigned TMR1IF :1;
[; ;pic16f73.h: 444: unsigned TMR2IF :1;
[; ;pic16f73.h: 445: unsigned CCP1IF :1;
[; ;pic16f73.h: 446: unsigned SSPIF :1;
[; ;pic16f73.h: 447: unsigned TXIF :1;
[; ;pic16f73.h: 448: unsigned RCIF :1;
[; ;pic16f73.h: 449: unsigned ADIF :1;
[; ;pic16f73.h: 450: };
[; ;pic16f73.h: 451: } PIR1bits_t;
[; ;pic16f73.h: 452: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f73.h: 492: extern volatile unsigned char PIR2 @ 0x00D;
"494
[; ;pic16f73.h: 494: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f73.h: 497: typedef union {
[; ;pic16f73.h: 498: struct {
[; ;pic16f73.h: 499: unsigned CCP2IF :1;
[; ;pic16f73.h: 500: };
[; ;pic16f73.h: 501: } PIR2bits_t;
[; ;pic16f73.h: 502: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f73.h: 512: extern volatile unsigned short TMR1 @ 0x00E;
"514
[; ;pic16f73.h: 514: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f73.h: 519: extern volatile unsigned char TMR1L @ 0x00E;
"521
[; ;pic16f73.h: 521: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f73.h: 526: extern volatile unsigned char TMR1H @ 0x00F;
"528
[; ;pic16f73.h: 528: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f73.h: 533: extern volatile unsigned char T1CON @ 0x010;
"535
[; ;pic16f73.h: 535: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f73.h: 538: typedef union {
[; ;pic16f73.h: 539: struct {
[; ;pic16f73.h: 540: unsigned TMR1ON :1;
[; ;pic16f73.h: 541: unsigned TMR1CS :1;
[; ;pic16f73.h: 542: unsigned nT1SYNC :1;
[; ;pic16f73.h: 543: unsigned T1OSCEN :1;
[; ;pic16f73.h: 544: unsigned T1CKPS :2;
[; ;pic16f73.h: 545: };
[; ;pic16f73.h: 546: struct {
[; ;pic16f73.h: 547: unsigned :2;
[; ;pic16f73.h: 548: unsigned T1INSYNC :1;
[; ;pic16f73.h: 549: unsigned :1;
[; ;pic16f73.h: 550: unsigned T1CKPS0 :1;
[; ;pic16f73.h: 551: unsigned T1CKPS1 :1;
[; ;pic16f73.h: 552: };
[; ;pic16f73.h: 553: } T1CONbits_t;
[; ;pic16f73.h: 554: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f73.h: 599: extern volatile unsigned char TMR2 @ 0x011;
"601
[; ;pic16f73.h: 601: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f73.h: 606: extern volatile unsigned char T2CON @ 0x012;
"608
[; ;pic16f73.h: 608: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f73.h: 611: typedef union {
[; ;pic16f73.h: 612: struct {
[; ;pic16f73.h: 613: unsigned T2CKPS :2;
[; ;pic16f73.h: 614: unsigned TMR2ON :1;
[; ;pic16f73.h: 615: unsigned TOUTPS :4;
[; ;pic16f73.h: 616: };
[; ;pic16f73.h: 617: struct {
[; ;pic16f73.h: 618: unsigned T2CKPS0 :1;
[; ;pic16f73.h: 619: unsigned T2CKPS1 :1;
[; ;pic16f73.h: 620: unsigned :1;
[; ;pic16f73.h: 621: unsigned TOUTPS0 :1;
[; ;pic16f73.h: 622: unsigned TOUTPS1 :1;
[; ;pic16f73.h: 623: unsigned TOUTPS2 :1;
[; ;pic16f73.h: 624: unsigned TOUTPS3 :1;
[; ;pic16f73.h: 625: };
[; ;pic16f73.h: 626: } T2CONbits_t;
[; ;pic16f73.h: 627: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f73.h: 677: extern volatile unsigned char SSPBUF @ 0x013;
"679
[; ;pic16f73.h: 679: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f73.h: 684: extern volatile unsigned char SSPCON @ 0x014;
"686
[; ;pic16f73.h: 686: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f73.h: 689: typedef union {
[; ;pic16f73.h: 690: struct {
[; ;pic16f73.h: 691: unsigned SSPM :4;
[; ;pic16f73.h: 692: unsigned CKP :1;
[; ;pic16f73.h: 693: unsigned SSPEN :1;
[; ;pic16f73.h: 694: unsigned SSPOV :1;
[; ;pic16f73.h: 695: unsigned WCOL :1;
[; ;pic16f73.h: 696: };
[; ;pic16f73.h: 697: struct {
[; ;pic16f73.h: 698: unsigned SSPM0 :1;
[; ;pic16f73.h: 699: unsigned SSPM1 :1;
[; ;pic16f73.h: 700: unsigned SSPM2 :1;
[; ;pic16f73.h: 701: unsigned SSPM3 :1;
[; ;pic16f73.h: 702: };
[; ;pic16f73.h: 703: } SSPCONbits_t;
[; ;pic16f73.h: 704: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f73.h: 754: extern volatile unsigned short CCPR1 @ 0x015;
"756
[; ;pic16f73.h: 756: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f73.h: 761: extern volatile unsigned char CCPR1L @ 0x015;
"763
[; ;pic16f73.h: 763: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f73.h: 768: extern volatile unsigned char CCPR1H @ 0x016;
"770
[; ;pic16f73.h: 770: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f73.h: 775: extern volatile unsigned char CCP1CON @ 0x017;
"777
[; ;pic16f73.h: 777: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f73.h: 780: typedef union {
[; ;pic16f73.h: 781: struct {
[; ;pic16f73.h: 782: unsigned CCP1M :4;
[; ;pic16f73.h: 783: unsigned CCP1Y :1;
[; ;pic16f73.h: 784: unsigned CCP1X :1;
[; ;pic16f73.h: 785: };
[; ;pic16f73.h: 786: struct {
[; ;pic16f73.h: 787: unsigned CCP1M0 :1;
[; ;pic16f73.h: 788: unsigned CCP1M1 :1;
[; ;pic16f73.h: 789: unsigned CCP1M2 :1;
[; ;pic16f73.h: 790: unsigned CCP1M3 :1;
[; ;pic16f73.h: 791: };
[; ;pic16f73.h: 792: } CCP1CONbits_t;
[; ;pic16f73.h: 793: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f73.h: 833: extern volatile unsigned char RCSTA @ 0x018;
"835
[; ;pic16f73.h: 835: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f73.h: 838: typedef union {
[; ;pic16f73.h: 839: struct {
[; ;pic16f73.h: 840: unsigned RX9D :1;
[; ;pic16f73.h: 841: unsigned OERR :1;
[; ;pic16f73.h: 842: unsigned FERR :1;
[; ;pic16f73.h: 843: unsigned :1;
[; ;pic16f73.h: 844: unsigned CREN :1;
[; ;pic16f73.h: 845: unsigned SREN :1;
[; ;pic16f73.h: 846: unsigned RX9 :1;
[; ;pic16f73.h: 847: unsigned SPEN :1;
[; ;pic16f73.h: 848: };
[; ;pic16f73.h: 849: struct {
[; ;pic16f73.h: 850: unsigned RCD8 :1;
[; ;pic16f73.h: 851: unsigned :5;
[; ;pic16f73.h: 852: unsigned RC9 :1;
[; ;pic16f73.h: 853: };
[; ;pic16f73.h: 854: struct {
[; ;pic16f73.h: 855: unsigned :6;
[; ;pic16f73.h: 856: unsigned nRC8 :1;
[; ;pic16f73.h: 857: };
[; ;pic16f73.h: 858: struct {
[; ;pic16f73.h: 859: unsigned :6;
[; ;pic16f73.h: 860: unsigned RC8_9 :1;
[; ;pic16f73.h: 861: };
[; ;pic16f73.h: 862: } RCSTAbits_t;
[; ;pic16f73.h: 863: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f73.h: 923: extern volatile unsigned char TXREG @ 0x019;
"925
[; ;pic16f73.h: 925: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f73.h: 930: extern volatile unsigned char RCREG @ 0x01A;
"932
[; ;pic16f73.h: 932: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f73.h: 937: extern volatile unsigned short CCPR2 @ 0x01B;
"939
[; ;pic16f73.h: 939: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f73.h: 944: extern volatile unsigned char CCPR2L @ 0x01B;
"946
[; ;pic16f73.h: 946: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f73.h: 951: extern volatile unsigned char CCPR2H @ 0x01C;
"953
[; ;pic16f73.h: 953: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f73.h: 958: extern volatile unsigned char CCP2CON @ 0x01D;
"960
[; ;pic16f73.h: 960: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f73.h: 963: typedef union {
[; ;pic16f73.h: 964: struct {
[; ;pic16f73.h: 965: unsigned CCP2M :4;
[; ;pic16f73.h: 966: unsigned CCP2Y :1;
[; ;pic16f73.h: 967: unsigned CCP2X :1;
[; ;pic16f73.h: 968: };
[; ;pic16f73.h: 969: struct {
[; ;pic16f73.h: 970: unsigned CCP2M0 :1;
[; ;pic16f73.h: 971: unsigned CCP2M1 :1;
[; ;pic16f73.h: 972: unsigned CCP2M2 :1;
[; ;pic16f73.h: 973: unsigned CCP2M3 :1;
[; ;pic16f73.h: 974: };
[; ;pic16f73.h: 975: } CCP2CONbits_t;
[; ;pic16f73.h: 976: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f73.h: 1016: extern volatile unsigned char ADRES @ 0x01E;
"1018
[; ;pic16f73.h: 1018: asm("ADRES equ 01Eh");
[; <" ADRES equ 01Eh ;# ">
[; ;pic16f73.h: 1021: typedef union {
[; ;pic16f73.h: 1022: struct {
[; ;pic16f73.h: 1023: unsigned ADRES :8;
[; ;pic16f73.h: 1024: };
[; ;pic16f73.h: 1025: } ADRESbits_t;
[; ;pic16f73.h: 1026: extern volatile ADRESbits_t ADRESbits @ 0x01E;
[; ;pic16f73.h: 1036: extern volatile unsigned char ADCON0 @ 0x01F;
"1038
[; ;pic16f73.h: 1038: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f73.h: 1041: typedef union {
[; ;pic16f73.h: 1042: struct {
[; ;pic16f73.h: 1043: unsigned ADON :1;
[; ;pic16f73.h: 1044: unsigned :1;
[; ;pic16f73.h: 1045: unsigned GO_nDONE :1;
[; ;pic16f73.h: 1046: unsigned CHS :3;
[; ;pic16f73.h: 1047: unsigned ADCS :2;
[; ;pic16f73.h: 1048: };
[; ;pic16f73.h: 1049: struct {
[; ;pic16f73.h: 1050: unsigned :2;
[; ;pic16f73.h: 1051: unsigned GO :1;
[; ;pic16f73.h: 1052: unsigned CHS0 :1;
[; ;pic16f73.h: 1053: unsigned CHS1 :1;
[; ;pic16f73.h: 1054: unsigned CHS2 :1;
[; ;pic16f73.h: 1055: unsigned ADCS0 :1;
[; ;pic16f73.h: 1056: unsigned ADCS1 :1;
[; ;pic16f73.h: 1057: };
[; ;pic16f73.h: 1058: struct {
[; ;pic16f73.h: 1059: unsigned :2;
[; ;pic16f73.h: 1060: unsigned nDONE :1;
[; ;pic16f73.h: 1061: };
[; ;pic16f73.h: 1062: struct {
[; ;pic16f73.h: 1063: unsigned :2;
[; ;pic16f73.h: 1064: unsigned GO_DONE :1;
[; ;pic16f73.h: 1065: };
[; ;pic16f73.h: 1066: } ADCON0bits_t;
[; ;pic16f73.h: 1067: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f73.h: 1132: extern volatile unsigned char OPTION_REG @ 0x081;
"1134
[; ;pic16f73.h: 1134: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f73.h: 1137: typedef union {
[; ;pic16f73.h: 1138: struct {
[; ;pic16f73.h: 1139: unsigned PS :3;
[; ;pic16f73.h: 1140: unsigned PSA :1;
[; ;pic16f73.h: 1141: unsigned T0SE :1;
[; ;pic16f73.h: 1142: unsigned T0CS :1;
[; ;pic16f73.h: 1143: unsigned INTEDG :1;
[; ;pic16f73.h: 1144: unsigned nRBPU :1;
[; ;pic16f73.h: 1145: };
[; ;pic16f73.h: 1146: struct {
[; ;pic16f73.h: 1147: unsigned PS0 :1;
[; ;pic16f73.h: 1148: unsigned PS1 :1;
[; ;pic16f73.h: 1149: unsigned PS2 :1;
[; ;pic16f73.h: 1150: };
[; ;pic16f73.h: 1151: } OPTION_REGbits_t;
[; ;pic16f73.h: 1152: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f73.h: 1202: extern volatile unsigned char TRISA @ 0x085;
"1204
[; ;pic16f73.h: 1204: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f73.h: 1207: typedef union {
[; ;pic16f73.h: 1208: struct {
[; ;pic16f73.h: 1209: unsigned TRISA0 :1;
[; ;pic16f73.h: 1210: unsigned TRISA1 :1;
[; ;pic16f73.h: 1211: unsigned TRISA2 :1;
[; ;pic16f73.h: 1212: unsigned TRISA3 :1;
[; ;pic16f73.h: 1213: unsigned TRISA4 :1;
[; ;pic16f73.h: 1214: unsigned TRISA5 :1;
[; ;pic16f73.h: 1215: };
[; ;pic16f73.h: 1216: } TRISAbits_t;
[; ;pic16f73.h: 1217: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f73.h: 1252: extern volatile unsigned char TRISB @ 0x086;
"1254
[; ;pic16f73.h: 1254: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f73.h: 1257: typedef union {
[; ;pic16f73.h: 1258: struct {
[; ;pic16f73.h: 1259: unsigned TRISB0 :1;
[; ;pic16f73.h: 1260: unsigned TRISB1 :1;
[; ;pic16f73.h: 1261: unsigned TRISB2 :1;
[; ;pic16f73.h: 1262: unsigned TRISB3 :1;
[; ;pic16f73.h: 1263: unsigned TRISB4 :1;
[; ;pic16f73.h: 1264: unsigned TRISB5 :1;
[; ;pic16f73.h: 1265: unsigned TRISB6 :1;
[; ;pic16f73.h: 1266: unsigned TRISB7 :1;
[; ;pic16f73.h: 1267: };
[; ;pic16f73.h: 1268: } TRISBbits_t;
[; ;pic16f73.h: 1269: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f73.h: 1314: extern volatile unsigned char TRISC @ 0x087;
"1316
[; ;pic16f73.h: 1316: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f73.h: 1319: typedef union {
[; ;pic16f73.h: 1320: struct {
[; ;pic16f73.h: 1321: unsigned TRISC0 :1;
[; ;pic16f73.h: 1322: unsigned TRISC1 :1;
[; ;pic16f73.h: 1323: unsigned TRISC2 :1;
[; ;pic16f73.h: 1324: unsigned TRISC3 :1;
[; ;pic16f73.h: 1325: unsigned TRISC4 :1;
[; ;pic16f73.h: 1326: unsigned TRISC5 :1;
[; ;pic16f73.h: 1327: unsigned TRISC6 :1;
[; ;pic16f73.h: 1328: unsigned TRISC7 :1;
[; ;pic16f73.h: 1329: };
[; ;pic16f73.h: 1330: } TRISCbits_t;
[; ;pic16f73.h: 1331: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f73.h: 1376: extern volatile unsigned char PIE1 @ 0x08C;
"1378
[; ;pic16f73.h: 1378: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f73.h: 1381: typedef union {
[; ;pic16f73.h: 1382: struct {
[; ;pic16f73.h: 1383: unsigned TMR1IE :1;
[; ;pic16f73.h: 1384: unsigned TMR2IE :1;
[; ;pic16f73.h: 1385: unsigned CCP1IE :1;
[; ;pic16f73.h: 1386: unsigned SSPIE :1;
[; ;pic16f73.h: 1387: unsigned TXIE :1;
[; ;pic16f73.h: 1388: unsigned RCIE :1;
[; ;pic16f73.h: 1389: unsigned ADIE :1;
[; ;pic16f73.h: 1390: };
[; ;pic16f73.h: 1391: } PIE1bits_t;
[; ;pic16f73.h: 1392: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f73.h: 1432: extern volatile unsigned char PIE2 @ 0x08D;
"1434
[; ;pic16f73.h: 1434: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f73.h: 1437: typedef union {
[; ;pic16f73.h: 1438: struct {
[; ;pic16f73.h: 1439: unsigned CCP2IE :1;
[; ;pic16f73.h: 1440: };
[; ;pic16f73.h: 1441: } PIE2bits_t;
[; ;pic16f73.h: 1442: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f73.h: 1452: extern volatile unsigned char PCON @ 0x08E;
"1454
[; ;pic16f73.h: 1454: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f73.h: 1457: typedef union {
[; ;pic16f73.h: 1458: struct {
[; ;pic16f73.h: 1459: unsigned nBOR :1;
[; ;pic16f73.h: 1460: unsigned nPOR :1;
[; ;pic16f73.h: 1461: };
[; ;pic16f73.h: 1462: struct {
[; ;pic16f73.h: 1463: unsigned nBO :1;
[; ;pic16f73.h: 1464: };
[; ;pic16f73.h: 1465: } PCONbits_t;
[; ;pic16f73.h: 1466: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f73.h: 1486: extern volatile unsigned char PR2 @ 0x092;
"1488
[; ;pic16f73.h: 1488: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f73.h: 1493: extern volatile unsigned char SSPADD @ 0x093;
"1495
[; ;pic16f73.h: 1495: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f73.h: 1500: extern volatile unsigned char SSPSTAT @ 0x094;
"1502
[; ;pic16f73.h: 1502: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f73.h: 1505: typedef union {
[; ;pic16f73.h: 1506: struct {
[; ;pic16f73.h: 1507: unsigned BF :1;
[; ;pic16f73.h: 1508: unsigned UA :1;
[; ;pic16f73.h: 1509: unsigned R_nW :1;
[; ;pic16f73.h: 1510: unsigned S :1;
[; ;pic16f73.h: 1511: unsigned P :1;
[; ;pic16f73.h: 1512: unsigned D_nA :1;
[; ;pic16f73.h: 1513: unsigned CKE :1;
[; ;pic16f73.h: 1514: unsigned SMP :1;
[; ;pic16f73.h: 1515: };
[; ;pic16f73.h: 1516: struct {
[; ;pic16f73.h: 1517: unsigned :2;
[; ;pic16f73.h: 1518: unsigned R :1;
[; ;pic16f73.h: 1519: unsigned :2;
[; ;pic16f73.h: 1520: unsigned D :1;
[; ;pic16f73.h: 1521: };
[; ;pic16f73.h: 1522: struct {
[; ;pic16f73.h: 1523: unsigned :2;
[; ;pic16f73.h: 1524: unsigned I2C_READ :1;
[; ;pic16f73.h: 1525: unsigned I2C_START :1;
[; ;pic16f73.h: 1526: unsigned I2C_STOP :1;
[; ;pic16f73.h: 1527: unsigned I2C_DATA :1;
[; ;pic16f73.h: 1528: };
[; ;pic16f73.h: 1529: struct {
[; ;pic16f73.h: 1530: unsigned :2;
[; ;pic16f73.h: 1531: unsigned nW :1;
[; ;pic16f73.h: 1532: unsigned :2;
[; ;pic16f73.h: 1533: unsigned nA :1;
[; ;pic16f73.h: 1534: };
[; ;pic16f73.h: 1535: struct {
[; ;pic16f73.h: 1536: unsigned :2;
[; ;pic16f73.h: 1537: unsigned nWRITE :1;
[; ;pic16f73.h: 1538: unsigned :2;
[; ;pic16f73.h: 1539: unsigned nADDRESS :1;
[; ;pic16f73.h: 1540: };
[; ;pic16f73.h: 1541: struct {
[; ;pic16f73.h: 1542: unsigned :2;
[; ;pic16f73.h: 1543: unsigned R_W :1;
[; ;pic16f73.h: 1544: unsigned :2;
[; ;pic16f73.h: 1545: unsigned D_A :1;
[; ;pic16f73.h: 1546: };
[; ;pic16f73.h: 1547: struct {
[; ;pic16f73.h: 1548: unsigned :2;
[; ;pic16f73.h: 1549: unsigned READ_WRITE :1;
[; ;pic16f73.h: 1550: unsigned :2;
[; ;pic16f73.h: 1551: unsigned DATA_ADDRESS :1;
[; ;pic16f73.h: 1552: };
[; ;pic16f73.h: 1553: } SSPSTATbits_t;
[; ;pic16f73.h: 1554: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f73.h: 1669: extern volatile unsigned char TXSTA @ 0x098;
"1671
[; ;pic16f73.h: 1671: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f73.h: 1674: typedef union {
[; ;pic16f73.h: 1675: struct {
[; ;pic16f73.h: 1676: unsigned TX9D :1;
[; ;pic16f73.h: 1677: unsigned TRMT :1;
[; ;pic16f73.h: 1678: unsigned BRGH :1;
[; ;pic16f73.h: 1679: unsigned :1;
[; ;pic16f73.h: 1680: unsigned SYNC :1;
[; ;pic16f73.h: 1681: unsigned TXEN :1;
[; ;pic16f73.h: 1682: unsigned TX9 :1;
[; ;pic16f73.h: 1683: unsigned CSRC :1;
[; ;pic16f73.h: 1684: };
[; ;pic16f73.h: 1685: struct {
[; ;pic16f73.h: 1686: unsigned TXD8 :1;
[; ;pic16f73.h: 1687: unsigned :5;
[; ;pic16f73.h: 1688: unsigned nTX8 :1;
[; ;pic16f73.h: 1689: };
[; ;pic16f73.h: 1690: struct {
[; ;pic16f73.h: 1691: unsigned :6;
[; ;pic16f73.h: 1692: unsigned TX8_9 :1;
[; ;pic16f73.h: 1693: };
[; ;pic16f73.h: 1694: } TXSTAbits_t;
[; ;pic16f73.h: 1695: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f73.h: 1750: extern volatile unsigned char SPBRG @ 0x099;
"1752
[; ;pic16f73.h: 1752: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f73.h: 1757: extern volatile unsigned char ADCON1 @ 0x09F;
"1759
[; ;pic16f73.h: 1759: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f73.h: 1762: typedef union {
[; ;pic16f73.h: 1763: struct {
[; ;pic16f73.h: 1764: unsigned PCFG :3;
[; ;pic16f73.h: 1765: };
[; ;pic16f73.h: 1766: struct {
[; ;pic16f73.h: 1767: unsigned PCFG0 :1;
[; ;pic16f73.h: 1768: unsigned PCFG1 :1;
[; ;pic16f73.h: 1769: unsigned PCFG2 :1;
[; ;pic16f73.h: 1770: };
[; ;pic16f73.h: 1771: } ADCON1bits_t;
[; ;pic16f73.h: 1772: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f73.h: 1797: extern volatile unsigned char PMDATA @ 0x10C;
"1799
[; ;pic16f73.h: 1799: asm("PMDATA equ 010Ch");
[; <" PMDATA equ 010Ch ;# ">
[; ;pic16f73.h: 1804: extern volatile unsigned char PMADR @ 0x10D;
"1806
[; ;pic16f73.h: 1806: asm("PMADR equ 010Dh");
[; <" PMADR equ 010Dh ;# ">
[; ;pic16f73.h: 1811: extern volatile unsigned char PMDATH @ 0x10E;
"1813
[; ;pic16f73.h: 1813: asm("PMDATH equ 010Eh");
[; <" PMDATH equ 010Eh ;# ">
[; ;pic16f73.h: 1818: extern volatile unsigned char PMADRH @ 0x10F;
"1820
[; ;pic16f73.h: 1820: asm("PMADRH equ 010Fh");
[; <" PMADRH equ 010Fh ;# ">
[; ;pic16f73.h: 1825: extern volatile unsigned char PMCON1 @ 0x18C;
"1827
[; ;pic16f73.h: 1827: asm("PMCON1 equ 018Ch");
[; <" PMCON1 equ 018Ch ;# ">
[; ;pic16f73.h: 1830: typedef union {
[; ;pic16f73.h: 1831: struct {
[; ;pic16f73.h: 1832: unsigned RD :1;
[; ;pic16f73.h: 1833: };
[; ;pic16f73.h: 1834: } PMCON1bits_t;
[; ;pic16f73.h: 1835: extern volatile PMCON1bits_t PMCON1bits @ 0x18C;
[; ;pic16f73.h: 1850: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f73.h: 1852: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f73.h: 1854: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f73.h: 1856: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f73.h: 1858: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f73.h: 1860: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f73.h: 1862: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f73.h: 1864: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f73.h: 1866: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f73.h: 1868: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f73.h: 1870: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f73.h: 1872: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f73.h: 1874: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f73.h: 1876: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f73.h: 1878: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f73.h: 1880: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f73.h: 1882: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f73.h: 1884: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f73.h: 1886: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f73.h: 1888: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f73.h: 1890: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f73.h: 1892: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f73.h: 1894: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f73.h: 1896: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f73.h: 1898: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f73.h: 1900: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f73.h: 1902: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f73.h: 1904: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f73.h: 1906: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f73.h: 1908: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f73.h: 1910: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f73.h: 1912: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f73.h: 1914: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f73.h: 1916: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f73.h: 1918: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f73.h: 1920: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f73.h: 1922: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f73.h: 1924: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f73.h: 1926: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f73.h: 1928: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f73.h: 1930: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f73.h: 1932: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f73.h: 1934: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f73.h: 1936: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f73.h: 1938: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f73.h: 1940: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f73.h: 1942: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f73.h: 1944: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f73.h: 1946: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f73.h: 1948: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f73.h: 1950: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f73.h: 1952: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f73.h: 1954: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f73.h: 1956: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f73.h: 1958: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f73.h: 1960: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f73.h: 1962: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f73.h: 1964: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f73.h: 1966: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f73.h: 1968: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f73.h: 1970: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f73.h: 1972: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f73.h: 1974: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f73.h: 1976: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f73.h: 1978: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f73.h: 1980: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f73.h: 1982: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f73.h: 1984: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f73.h: 1986: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f73.h: 1988: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f73.h: 1990: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f73.h: 1992: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f73.h: 1994: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f73.h: 1996: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f73.h: 1998: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f73.h: 2000: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f73.h: 2002: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f73.h: 2004: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f73.h: 2006: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f73.h: 2008: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f73.h: 2010: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f73.h: 2012: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f73.h: 2014: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f73.h: 2016: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f73.h: 2018: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f73.h: 2020: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f73.h: 2022: extern volatile __bit RD @ (((unsigned) &PMCON1)*8) + 0;
[; ;pic16f73.h: 2024: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f73.h: 2026: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f73.h: 2028: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f73.h: 2030: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f73.h: 2032: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f73.h: 2034: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f73.h: 2036: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f73.h: 2038: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f73.h: 2040: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f73.h: 2042: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f73.h: 2044: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f73.h: 2046: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f73.h: 2048: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f73.h: 2050: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f73.h: 2052: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f73.h: 2054: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f73.h: 2056: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f73.h: 2058: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f73.h: 2060: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f73.h: 2062: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f73.h: 2064: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f73.h: 2066: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f73.h: 2068: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f73.h: 2070: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f73.h: 2072: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f73.h: 2074: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f73.h: 2076: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f73.h: 2078: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f73.h: 2080: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f73.h: 2082: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f73.h: 2084: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f73.h: 2086: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f73.h: 2088: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f73.h: 2090: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f73.h: 2092: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f73.h: 2094: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f73.h: 2096: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f73.h: 2098: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f73.h: 2100: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f73.h: 2102: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f73.h: 2104: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f73.h: 2106: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f73.h: 2108: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f73.h: 2110: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f73.h: 2112: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f73.h: 2114: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f73.h: 2116: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f73.h: 2118: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f73.h: 2120: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f73.h: 2122: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f73.h: 2124: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f73.h: 2126: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f73.h: 2128: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f73.h: 2130: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f73.h: 2132: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f73.h: 2134: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f73.h: 2136: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f73.h: 2138: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f73.h: 2140: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f73.h: 2142: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f73.h: 2144: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f73.h: 2146: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f73.h: 2148: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f73.h: 2150: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f73.h: 2152: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f73.h: 2154: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f73.h: 2156: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f73.h: 2158: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f73.h: 2160: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f73.h: 2162: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f73.h: 2164: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f73.h: 2166: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f73.h: 2168: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f73.h: 2170: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f73.h: 2172: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f73.h: 2174: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f73.h: 2176: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f73.h: 2178: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f73.h: 2180: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f73.h: 2182: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f73.h: 2184: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f73.h: 2186: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f73.h: 2188: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f73.h: 2190: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f73.h: 2192: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f73.h: 2194: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f73.h: 2196: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f73.h: 2198: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f73.h: 2200: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 142: extern void flash_erase(unsigned short addr);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"7 newmain.h
[p x FOSC=HS ]
"8
[p x WDTE=OFF ]
"9
[p x PWRTE=ON ]
"10
[p x CP=OFF ]
"11
[p x BOREN=OFF ]
[; ;lcd.h: 6: void LCD_PORT_init();
[; ;lcd.h: 7: void LCD_Init();
[; ;lcd.h: 8: void LCD_String(char* st);
[; ;lcd.h: 9: void LCD_SetPos(unsigned char x, unsigned char y);
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;ctype.h: 4: extern __bit isalpha(char);
[; ;ctype.h: 5: extern __bit isupper(char);
[; ;ctype.h: 6: extern __bit islower(char);
[; ;ctype.h: 7: extern __bit isdigit(char);
[; ;ctype.h: 8: extern __bit isxdigit(char);
[; ;ctype.h: 9: extern __bit isspace(char);
[; ;ctype.h: 10: extern __bit ispunct(char);
[; ;ctype.h: 11: extern __bit isalnum(char);
[; ;ctype.h: 12: extern __bit isprint(char);
[; ;ctype.h: 13: extern __bit isgraph(char);
[; ;ctype.h: 14: extern __bit iscntrl(char);
[; ;ctype.h: 17: extern char toupper(char);
[; ;ctype.h: 18: extern char tolower(char);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;sys.h: 22: extern int execl(char *, char *, ...);
[; ;sys.h: 23: extern int execv(char *, char **);
[; ;sys.h: 24: extern int execve(char *, char **, char **);
[; ;sys.h: 25: extern int execle(char *, char *, ...);
[; ;sys.h: 26: extern int execvp(char *, char **);
[; ;sys.h: 27: extern int execlp(char *, char *, ...);
[; ;sys.h: 28: extern int getpid(void);
[; ;sys.h: 29: extern char * mktemp(char *);
[; ;sys.h: 43: extern int spawnl(char *, char *, ...);
[; ;sys.h: 44: extern int spawnv(char *, char **);
[; ;sys.h: 45: extern int spawnle(char *, char *, ...);
[; ;sys.h: 46: extern int spawnve(char *, char **, char **);
[; ;sys.h: 47: extern int spawnlp(char *, char *, ...);
[; ;sys.h: 48: extern int spawnvp(char *, char **);
[; ;sys.h: 50: extern int chdir(char *);
[; ;sys.h: 51: extern int chdrv(char *);
[; ;sys.h: 52: extern int mkdir(char *);
[; ;sys.h: 53: extern int rmdir(char *);
[; ;sys.h: 54: extern char * getcwd(char *);
[; ;sys.h: 55: extern void persist_validate(void);
[; ;sys.h: 56: extern int persist_check(int);
[; ;sys.h: 57: extern char * getdrv(void);
[; ;sys.h: 58: extern char ** _getargs(char *, char *);
[; ;sys.h: 59: extern int _argc_;
[; ;sys.h: 70: extern void * sbrk(size_t);
[; ;sys.h: 71: extern void brk(void *);
[; ;sys.h: 77: extern int _pnum(unsigned long, signed char, signed char, unsigned char, unsigned char, struct __prbuf *, unsigned char);
[; ;sys.h: 78: extern int _fnum(double, short, short, short, struct __prbuf *, short);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
"13 main.c
[v _str01 `uc ~T0 @X0 -> 30 `i e ]
[i _str01
:U ..
-> -> 0 `ui `uc
..
]
[; ;main.c: 13: char str01[30]={'\0'};
"14
[v _str03 `uc ~T0 @X0 -> 7 `i e ]
[i _str03
:U ..
-> -> 0 `ui `uc
..
]
[; ;main.c: 14: char str03[7]={'\0'};
"17
[v _TIM0_count `ui ~T0 @X0 1 e ]
[i _TIM0_count
-> -> 0 `i `ui
]
[; ;main.c: 17: unsigned int TIM0_count=0;
"19
[v _a `uc ~T0 @X0 1 e ]
[; ;main.c: 19: unsigned char a;
"20
[v _y `uc ~T0 @X0 1 e ]
[; ;main.c: 20: unsigned char y;
"21
[v _t `uc ~T0 @X0 1 e ]
[; ;main.c: 21: unsigned char t;
"22
[v _ut `uc ~T0 @X0 1 e ]
[i _ut
-> -> 0 `i `uc
]
[; ;main.c: 22: unsigned char ut=0;
"26
[v _delay `(v ~T0 @X0 1 ef ]
"27
{
[; ;main.c: 26: void delay()
[; ;main.c: 27: {
[e :U _delay ]
[f ]
"28
[v _i `i ~T0 @X0 1 a ]
[; ;main.c: 28: int i;
[; ;main.c: 29: for(i=0;i<19;i++);
"29
{
[e = _i -> 0 `i ]
[e $ < _i -> 19 `i 86  ]
[e $U 87  ]
[e :U 86 ]
[e ++ _i -> 1 `i ]
[e $ < _i -> 19 `i 86  ]
[e :U 87 ]
}
[; ;main.c: 30: }
"30
[e :UE 85 ]
}
"32
[v _sendbytee `(v ~T0 @X0 1 ef2`uc`uc ]
"33
{
[; ;main.c: 32: void sendbytee(unsigned char c, unsigned char mode)
[; ;main.c: 33: {
[e :U _sendbytee ]
"32
[v _c `uc ~T0 @X0 1 r1 ]
[v _mode `uc ~T0 @X0 1 r2 ]
"33
[f ]
[; ;main.c: 34: PORTB=c;
"34
[e = _PORTB _c ]
[; ;main.c: 35: if(mode==0) RC6=1;
"35
[e $ ! == -> _mode `i -> 0 `i 90  ]
[e = _RC6 -> -> 1 `i `b ]
[e $U 91  ]
"36
[e :U 90 ]
[; ;main.c: 36: else RC6=0;
[e = _RC6 -> -> 0 `i `b ]
[e :U 91 ]
[; ;main.c: 37: RC7=0;
"37
[e = _RC7 -> -> 0 `i `b ]
[; ;main.c: 38: _delay((unsigned long)((5)*(4000000/4000.0)));;
"38
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;main.c: 39: RC7=1;
"39
[e = _RC7 -> -> 1 `i `b ]
[; ;main.c: 40: }
"40
[e :UE 89 ]
}
"42
[v _segchar `(v ~T0 @X0 1 ef1`ui ]
"43
{
[; ;main.c: 42: void segchar (unsigned int adc_data)
[; ;main.c: 43: {
[e :U _segchar ]
"42
[v _adc_data `ui ~T0 @X0 1 r1 ]
"43
[f ]
[; ;main.c: 44: switch (adc_data)
"44
[e $U 94  ]
[; ;main.c: 45: {ut=0;
"45
{
[e = _ut -> -> 0 `i `uc ]
[; ;main.c: 46: case 0:
"46
[e :U 95 ]
[; ;main.c: 47: if(ut==0){
"47
[e $ ! == -> _ut `i -> 0 `i 96  ]
{
[; ;main.c: 48: PORTCbits.RC4 = 1;
"48
[e = . . _PORTCbits 0 4 -> -> 1 `i `uc ]
"49
}
[; ;main.c: 49: }
[e $U 97  ]
"50
[e :U 96 ]
[; ;main.c: 50: else{
{
[; ;main.c: 51: PORTCbits.RC4 = 0;
"51
[e = . . _PORTCbits 0 4 -> -> 0 `i `uc ]
"52
}
[e :U 97 ]
[; ;main.c: 52: }
[; ;main.c: 53: for(y=0;y<15;y++)
"53
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 98  ]
[e $U 99  ]
"54
[e :U 98 ]
[; ;main.c: 54: {
{
[; ;main.c: 55: LCD_SetPos(0+y,1);
"55
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 56: sendbytee(0b00100000,0);
"56
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"57
}
"53
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 98  ]
[e :U 99 ]
"57
}
[; ;main.c: 57: }
[; ;main.c: 58: break;
"58
[e $U 93  ]
[; ;main.c: 59: case 1:
"59
[e :U 101 ]
[; ;main.c: 60: goto cas2;
"60
[e $U 102  ]
[; ;main.c: 61: break;
"61
[e $U 93  ]
[; ;main.c: 62: case 2:
"62
[e :U 103 ]
[; ;main.c: 63: cas2:
"63
[e :U 102 ]
[; ;main.c: 64: LCD_SetPos(0,1);
"64
[e ( _LCD_SetPos (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 65: sendbytee(0b11111111,0);
"65
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 66: for(y=0;y<15;y++)
"66
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 104  ]
[e $U 105  ]
"67
[e :U 104 ]
[; ;main.c: 67: {
{
[; ;main.c: 68: LCD_SetPos(1+y,1);
"68
[e ( _LCD_SetPos (2 , -> + -> 1 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 69: sendbytee(0b00100000,0);
"69
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"70
}
"66
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 104  ]
[e :U 105 ]
"70
}
[; ;main.c: 70: }
[; ;main.c: 71: break;
"71
[e $U 93  ]
[; ;main.c: 72: case 3:
"72
[e :U 107 ]
[; ;main.c: 73: goto cas4;
"73
[e $U 108  ]
[; ;main.c: 74: break;
"74
[e $U 93  ]
[; ;main.c: 75: case 4:
"75
[e :U 109 ]
[; ;main.c: 76: cas4:
"76
[e :U 108 ]
[; ;main.c: 77: for(t=0;t<2;t++)
"77
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 2 `i 110  ]
[e $U 111  ]
"78
[e :U 110 ]
[; ;main.c: 78: {
{
[; ;main.c: 79: LCD_SetPos(0+t,1);
"79
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 80: sendbytee(0b11111111,0);
"80
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"81
}
"77
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 2 `i 110  ]
[e :U 111 ]
"81
}
[; ;main.c: 81: }
[; ;main.c: 82: for(y=0;y<15;y++)
"82
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 113  ]
[e $U 114  ]
"83
[e :U 113 ]
[; ;main.c: 83: {
{
[; ;main.c: 84: LCD_SetPos(2+y,1);
"84
[e ( _LCD_SetPos (2 , -> + -> 2 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 85: sendbytee(0b00100000,0);
"85
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"86
}
"82
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 113  ]
[e :U 114 ]
"86
}
[; ;main.c: 86: }
[; ;main.c: 87: break;
"87
[e $U 93  ]
[; ;main.c: 88: case 5:
"88
[e :U 116 ]
[; ;main.c: 89: goto cas6;
"89
[e $U 117  ]
[; ;main.c: 90: break;
"90
[e $U 93  ]
[; ;main.c: 91: case 6:
"91
[e :U 118 ]
[; ;main.c: 92: cas6:
"92
[e :U 117 ]
[; ;main.c: 93: for(t=0;t<3;t++)
"93
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 3 `i 119  ]
[e $U 120  ]
"94
[e :U 119 ]
[; ;main.c: 94: {
{
[; ;main.c: 95: LCD_SetPos(0+t,1);
"95
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 96: sendbytee(0b11111111,0);
"96
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"97
}
"93
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 3 `i 119  ]
[e :U 120 ]
"97
}
[; ;main.c: 97: }
[; ;main.c: 98: for(y=0;y<15;y++)
"98
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 122  ]
[e $U 123  ]
"99
[e :U 122 ]
[; ;main.c: 99: {
{
[; ;main.c: 100: LCD_SetPos(3+y,1);
"100
[e ( _LCD_SetPos (2 , -> + -> 3 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 101: sendbytee(0b00100000,0);
"101
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"102
}
"98
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 122  ]
[e :U 123 ]
"102
}
[; ;main.c: 102: }
[; ;main.c: 103: break;
"103
[e $U 93  ]
[; ;main.c: 104: case 7:
"104
[e :U 125 ]
[; ;main.c: 105: goto cas8;
"105
[e $U 126  ]
[; ;main.c: 106: break;
"106
[e $U 93  ]
[; ;main.c: 107: case 8:
"107
[e :U 127 ]
[; ;main.c: 108: cas8:
"108
[e :U 126 ]
[; ;main.c: 109: for(t=0;t<4;t++)
"109
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 4 `i 128  ]
[e $U 129  ]
"110
[e :U 128 ]
[; ;main.c: 110: {
{
[; ;main.c: 111: LCD_SetPos(0+t,1);
"111
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 112: sendbytee(0b11111111,0);
"112
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"113
}
"109
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 4 `i 128  ]
[e :U 129 ]
"113
}
[; ;main.c: 113: }
[; ;main.c: 114: for(y=0;y<15;y++)
"114
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 131  ]
[e $U 132  ]
"115
[e :U 131 ]
[; ;main.c: 115: {
{
[; ;main.c: 116: LCD_SetPos(4+y,1);
"116
[e ( _LCD_SetPos (2 , -> + -> 4 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 117: sendbytee(0b00100000,0);
"117
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"118
}
"114
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 131  ]
[e :U 132 ]
"118
}
[; ;main.c: 118: }
[; ;main.c: 119: break;
"119
[e $U 93  ]
[; ;main.c: 120: case 9:
"120
[e :U 134 ]
[; ;main.c: 121: goto cas10;
"121
[e $U 135  ]
[; ;main.c: 122: break;
"122
[e $U 93  ]
[; ;main.c: 123: case 10:
"123
[e :U 136 ]
[; ;main.c: 124: cas10:
"124
[e :U 135 ]
[; ;main.c: 125: for(t=0;t<5;t++)
"125
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 5 `i 137  ]
[e $U 138  ]
"126
[e :U 137 ]
[; ;main.c: 126: {
{
[; ;main.c: 127: LCD_SetPos(0+t,1);
"127
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 128: sendbytee(0b11111111,0);
"128
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"129
}
"125
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 5 `i 137  ]
[e :U 138 ]
"129
}
[; ;main.c: 129: }
[; ;main.c: 130: for(y=0;y<15;y++)
"130
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 140  ]
[e $U 141  ]
"131
[e :U 140 ]
[; ;main.c: 131: {
{
[; ;main.c: 132: LCD_SetPos(5+y,1);
"132
[e ( _LCD_SetPos (2 , -> + -> 5 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 133: sendbytee(0b00100000,0);
"133
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"134
}
"130
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 140  ]
[e :U 141 ]
"134
}
[; ;main.c: 134: }
[; ;main.c: 135: break;
"135
[e $U 93  ]
[; ;main.c: 136: case 11:
"136
[e :U 143 ]
[; ;main.c: 137: goto cas12;
"137
[e $U 144  ]
[; ;main.c: 138: break;
"138
[e $U 93  ]
[; ;main.c: 139: case 12:
"139
[e :U 145 ]
[; ;main.c: 140: cas12:
"140
[e :U 144 ]
[; ;main.c: 141: for(t=0;t<6;t++)
"141
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 6 `i 146  ]
[e $U 147  ]
"142
[e :U 146 ]
[; ;main.c: 142: {
{
[; ;main.c: 143: LCD_SetPos(0+t,1);
"143
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 144: sendbytee(0b11111111,0);
"144
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"145
}
"141
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 6 `i 146  ]
[e :U 147 ]
"145
}
[; ;main.c: 145: }
[; ;main.c: 146: for(y=0;y<15;y++)
"146
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 149  ]
[e $U 150  ]
"147
[e :U 149 ]
[; ;main.c: 147: {
{
[; ;main.c: 148: LCD_SetPos(6+y,1);
"148
[e ( _LCD_SetPos (2 , -> + -> 6 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 149: sendbytee(0b00100000,0);
"149
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"150
}
"146
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 149  ]
[e :U 150 ]
"150
}
[; ;main.c: 150: }
[; ;main.c: 151: break;
"151
[e $U 93  ]
[; ;main.c: 152: case 13:
"152
[e :U 152 ]
[; ;main.c: 153: goto cas14;
"153
[e $U 153  ]
[; ;main.c: 154: break;
"154
[e $U 93  ]
[; ;main.c: 155: case 14:
"155
[e :U 154 ]
[; ;main.c: 156: cas14:
"156
[e :U 153 ]
[; ;main.c: 157: for(t=0;t<7;t++)
"157
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 7 `i 155  ]
[e $U 156  ]
"158
[e :U 155 ]
[; ;main.c: 158: {
{
[; ;main.c: 159: LCD_SetPos(0+t,1);
"159
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 160: sendbytee(0b11111111,0);
"160
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"161
}
"157
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 7 `i 155  ]
[e :U 156 ]
"161
}
[; ;main.c: 161: }
[; ;main.c: 162: for(y=0;y<15;y++)
"162
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 158  ]
[e $U 159  ]
"163
[e :U 158 ]
[; ;main.c: 163: {
{
[; ;main.c: 164: LCD_SetPos(7+y,1);
"164
[e ( _LCD_SetPos (2 , -> + -> 7 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 165: sendbytee(0b00100000,0);
"165
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"166
}
"162
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 158  ]
[e :U 159 ]
"166
}
[; ;main.c: 166: }
[; ;main.c: 167: break;
"167
[e $U 93  ]
[; ;main.c: 168: case 15:
"168
[e :U 161 ]
[; ;main.c: 169: goto cas16;
"169
[e $U 162  ]
[; ;main.c: 170: break;
"170
[e $U 93  ]
[; ;main.c: 171: case 16:
"171
[e :U 163 ]
[; ;main.c: 172: cas16:
"172
[e :U 162 ]
[; ;main.c: 173: for(t=0;t<8;t++)
"173
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 8 `i 164  ]
[e $U 165  ]
"174
[e :U 164 ]
[; ;main.c: 174: {
{
[; ;main.c: 175: LCD_SetPos(0+t,1);
"175
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 176: sendbytee(0b11111111,0);
"176
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"177
}
"173
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 8 `i 164  ]
[e :U 165 ]
"177
}
[; ;main.c: 177: }
[; ;main.c: 178: for(y=0;y<15;y++)
"178
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 167  ]
[e $U 168  ]
"179
[e :U 167 ]
[; ;main.c: 179: {
{
[; ;main.c: 180: LCD_SetPos(8+y,1);
"180
[e ( _LCD_SetPos (2 , -> + -> 8 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 181: sendbytee(0b00100000,0);
"181
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"182
}
"178
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 167  ]
[e :U 168 ]
"182
}
[; ;main.c: 182: }
[; ;main.c: 183: break;
"183
[e $U 93  ]
[; ;main.c: 184: case 17:
"184
[e :U 170 ]
[; ;main.c: 185: goto cas18;
"185
[e $U 171  ]
[; ;main.c: 186: break;
"186
[e $U 93  ]
[; ;main.c: 187: case 18:
"187
[e :U 172 ]
[; ;main.c: 188: cas18:
"188
[e :U 171 ]
[; ;main.c: 189: for(t=0;t<9;t++)
"189
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 9 `i 173  ]
[e $U 174  ]
"190
[e :U 173 ]
[; ;main.c: 190: {
{
[; ;main.c: 191: LCD_SetPos(0+t,1);
"191
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 192: sendbytee(0b11111111,0);
"192
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"193
}
"189
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 9 `i 173  ]
[e :U 174 ]
"193
}
[; ;main.c: 193: }
[; ;main.c: 194: for(y=0;y<15;y++)
"194
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 176  ]
[e $U 177  ]
"195
[e :U 176 ]
[; ;main.c: 195: {
{
[; ;main.c: 196: LCD_SetPos(9+y,1);
"196
[e ( _LCD_SetPos (2 , -> + -> 9 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 197: sendbytee(0b00100000,0);
"197
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"198
}
"194
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 176  ]
[e :U 177 ]
"198
}
[; ;main.c: 198: }
[; ;main.c: 199: break;
"199
[e $U 93  ]
[; ;main.c: 200: case 19:
"200
[e :U 179 ]
[; ;main.c: 201: goto cas20;
"201
[e $U 180  ]
[; ;main.c: 202: break;
"202
[e $U 93  ]
[; ;main.c: 203: case 20:
"203
[e :U 181 ]
[; ;main.c: 204: cas20:
"204
[e :U 180 ]
[; ;main.c: 205: for(t=0;t<10;t++)
"205
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 10 `i 182  ]
[e $U 183  ]
"206
[e :U 182 ]
[; ;main.c: 206: {
{
[; ;main.c: 207: LCD_SetPos(0+t,1);
"207
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 208: sendbytee(0b11111111,0);
"208
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"209
}
"205
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 10 `i 182  ]
[e :U 183 ]
"209
}
[; ;main.c: 209: }
[; ;main.c: 210: for(y=0;y<15;y++)
"210
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 185  ]
[e $U 186  ]
"211
[e :U 185 ]
[; ;main.c: 211: {
{
[; ;main.c: 212: LCD_SetPos(10+y,1);
"212
[e ( _LCD_SetPos (2 , -> + -> 10 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 213: sendbytee(0b00100000,0);
"213
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"214
}
"210
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 185  ]
[e :U 186 ]
"214
}
[; ;main.c: 214: }
[; ;main.c: 215: break;
"215
[e $U 93  ]
[; ;main.c: 216: case 21:
"216
[e :U 188 ]
[; ;main.c: 217: goto cas22;
"217
[e $U 189  ]
[; ;main.c: 218: break;
"218
[e $U 93  ]
[; ;main.c: 219: case 22:
"219
[e :U 190 ]
[; ;main.c: 220: cas22:
"220
[e :U 189 ]
[; ;main.c: 221: for(t=0;t<11;t++)
"221
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 11 `i 191  ]
[e $U 192  ]
"222
[e :U 191 ]
[; ;main.c: 222: {
{
[; ;main.c: 223: LCD_SetPos(0+t,1);
"223
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 224: sendbytee(0b11111111,0);
"224
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"225
}
"221
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 11 `i 191  ]
[e :U 192 ]
"225
}
[; ;main.c: 225: }
[; ;main.c: 226: for(y=0;y<15;y++)
"226
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 194  ]
[e $U 195  ]
"227
[e :U 194 ]
[; ;main.c: 227: {
{
[; ;main.c: 228: LCD_SetPos(11+y,1);
"228
[e ( _LCD_SetPos (2 , -> + -> 11 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 229: sendbytee(0b00100000,0);
"229
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"230
}
"226
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 194  ]
[e :U 195 ]
"230
}
[; ;main.c: 230: }
[; ;main.c: 231: break;
"231
[e $U 93  ]
[; ;main.c: 232: case 23:
"232
[e :U 197 ]
[; ;main.c: 233: goto cas24;
"233
[e $U 198  ]
[; ;main.c: 234: break;
"234
[e $U 93  ]
[; ;main.c: 235: case 24:
"235
[e :U 199 ]
[; ;main.c: 236: cas24:
"236
[e :U 198 ]
[; ;main.c: 237: for(t=0;t<12;t++)
"237
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 12 `i 200  ]
[e $U 201  ]
"238
[e :U 200 ]
[; ;main.c: 238: {
{
[; ;main.c: 239: LCD_SetPos(0+t,1);
"239
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 240: sendbytee(0b11111111,0);
"240
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"241
}
"237
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 12 `i 200  ]
[e :U 201 ]
"241
}
[; ;main.c: 241: }
[; ;main.c: 242: for(y=0;y<15;y++)
"242
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 203  ]
[e $U 204  ]
"243
[e :U 203 ]
[; ;main.c: 243: {
{
[; ;main.c: 244: LCD_SetPos(12+y,1);
"244
[e ( _LCD_SetPos (2 , -> + -> 12 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 245: sendbytee(0b00100000,0);
"245
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"246
}
"242
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 203  ]
[e :U 204 ]
"246
}
[; ;main.c: 246: }
[; ;main.c: 247: break;
"247
[e $U 93  ]
[; ;main.c: 248: case 25:
"248
[e :U 206 ]
[; ;main.c: 249: goto cas26;
"249
[e $U 207  ]
[; ;main.c: 250: break;
"250
[e $U 93  ]
[; ;main.c: 251: case 26:
"251
[e :U 208 ]
[; ;main.c: 252: cas26:
"252
[e :U 207 ]
[; ;main.c: 253: for(t=0;t<13;t++)
"253
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 13 `i 209  ]
[e $U 210  ]
"254
[e :U 209 ]
[; ;main.c: 254: {
{
[; ;main.c: 255: LCD_SetPos(0+t,1);
"255
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 256: sendbytee(0b11111111,0);
"256
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"257
}
"253
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 13 `i 209  ]
[e :U 210 ]
"257
}
[; ;main.c: 257: }
[; ;main.c: 258: for(y=0;y<15;y++)
"258
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 212  ]
[e $U 213  ]
"259
[e :U 212 ]
[; ;main.c: 259: {
{
[; ;main.c: 260: LCD_SetPos(13+y,1);
"260
[e ( _LCD_SetPos (2 , -> + -> 13 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 261: sendbytee(0b00100000,0);
"261
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"262
}
"258
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 212  ]
[e :U 213 ]
"262
}
[; ;main.c: 262: }
[; ;main.c: 263: break;
"263
[e $U 93  ]
[; ;main.c: 264: case 27:
"264
[e :U 215 ]
[; ;main.c: 265: goto cas28;
"265
[e $U 216  ]
[; ;main.c: 266: break;
"266
[e $U 93  ]
[; ;main.c: 267: case 28:
"267
[e :U 217 ]
[; ;main.c: 268: cas28:
"268
[e :U 216 ]
[; ;main.c: 269: for(t=0;t<14;t++)
"269
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 14 `i 218  ]
[e $U 219  ]
"270
[e :U 218 ]
[; ;main.c: 270: {
{
[; ;main.c: 271: LCD_SetPos(0+t,1);
"271
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 272: sendbytee(0b11111111,0);
"272
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"273
}
"269
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 14 `i 218  ]
[e :U 219 ]
"273
}
[; ;main.c: 273: }
[; ;main.c: 274: for(y=0;y<15;y++)
"274
{
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> 15 `i 221  ]
[e $U 222  ]
"275
[e :U 221 ]
[; ;main.c: 275: {
{
[; ;main.c: 276: LCD_SetPos(14+y,1);
"276
[e ( _LCD_SetPos (2 , -> + -> 14 `i -> _y `i `uc -> -> 1 `i `uc ]
[; ;main.c: 277: sendbytee(0b00100000,0);
"277
[e ( _sendbytee (2 , -> -> 32 `i `uc -> -> 0 `i `uc ]
"278
}
"274
[e ++ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> 15 `i 221  ]
[e :U 222 ]
"278
}
[; ;main.c: 278: }
[; ;main.c: 279: break;
"279
[e $U 93  ]
[; ;main.c: 280: case 29:
"280
[e :U 224 ]
[; ;main.c: 281: goto cas30;
"281
[e $U 225  ]
[; ;main.c: 282: break;
"282
[e $U 93  ]
[; ;main.c: 283: case 30:
"283
[e :U 226 ]
[; ;main.c: 284: cas30:
"284
[e :U 225 ]
[; ;main.c: 285: for(t=0;t<16;t++)
"285
{
[e = _t -> -> 0 `i `uc ]
[e $ < -> _t `i -> 16 `i 227  ]
[e $U 228  ]
"286
[e :U 227 ]
[; ;main.c: 286: {
{
[; ;main.c: 287: LCD_SetPos(0+t,1);
"287
[e ( _LCD_SetPos (2 , -> + -> 0 `i -> _t `i `uc -> -> 1 `i `uc ]
[; ;main.c: 288: sendbytee(0b11111111,0);
"288
[e ( _sendbytee (2 , -> -> 255 `i `uc -> -> 0 `i `uc ]
"289
}
"285
[e ++ _t -> -> 1 `i `uc ]
[e $ < -> _t `i -> 16 `i 227  ]
[e :U 228 ]
"289
}
[; ;main.c: 289: }
[; ;main.c: 290: break;
"290
[e $U 93  ]
"291
}
[; ;main.c: 291: }
[e $U 93  ]
"44
[e :U 94 ]
[e [\ _adc_data , $ -> -> 0 `i `ui 95
 , $ -> -> 1 `i `ui 101
 , $ -> -> 2 `i `ui 103
 , $ -> -> 3 `i `ui 107
 , $ -> -> 4 `i `ui 109
 , $ -> -> 5 `i `ui 116
 , $ -> -> 6 `i `ui 118
 , $ -> -> 7 `i `ui 125
 , $ -> -> 8 `i `ui 127
 , $ -> -> 9 `i `ui 134
 , $ -> -> 10 `i `ui 136
 , $ -> -> 11 `i `ui 143
 , $ -> -> 12 `i `ui 145
 , $ -> -> 13 `i `ui 152
 , $ -> -> 14 `i `ui 154
 , $ -> -> 15 `i `ui 161
 , $ -> -> 16 `i `ui 163
 , $ -> -> 17 `i `ui 170
 , $ -> -> 18 `i `ui 172
 , $ -> -> 19 `i `ui 179
 , $ -> -> 20 `i `ui 181
 , $ -> -> 21 `i `ui 188
 , $ -> -> 22 `i `ui 190
 , $ -> -> 23 `i `ui 197
 , $ -> -> 24 `i `ui 199
 , $ -> -> 25 `i `ui 206
 , $ -> -> 26 `i `ui 208
 , $ -> -> 27 `i `ui 215
 , $ -> -> 28 `i `ui 217
 , $ -> -> 29 `i `ui 224
 , $ -> -> 30 `i `ui 226
 93 ]
"291
[e :U 93 ]
[; ;main.c: 292: }
"292
[e :UE 92 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"294
[v _main `(v ~T0 @X0 1 ef ]
"295
{
[; ;main.c: 294: void main()
[; ;main.c: 295: {
[e :U _main ]
[f ]
"296
[v _adc_data_raw `i ~T0 @X0 1 a ]
[; ;main.c: 296: int adc_data_raw = 0;
[e = _adc_data_raw -> 0 `i ]
"298
[v _adc_data `i ~T0 @X0 1 a ]
[; ;main.c: 298: int adc_data = 0;
[e = _adc_data -> 0 `i ]
"299
[v _adc_data2 `i ~T0 @X0 1 a ]
[; ;main.c: 299: int adc_data2 = 0;
[e = _adc_data2 -> 0 `i ]
"300
[v _ch `uc ~T0 @X0 1 a ]
[; ;main.c: 300: unsigned char ch = 0;
[e = _ch -> -> 0 `i `uc ]
[; ;main.c: 301: TRISA = 0b00000111;
"301
[e = _TRISA -> -> 7 `i `uc ]
[; ;main.c: 302: PORTA = 0x00;
"302
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 303: TRISC=0X00;
"303
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 304: TRISB=0X00;
"304
[e = _TRISB -> -> 0 `i `uc ]
[; ;main.c: 305: ADCS0 = 1;
"305
[e = _ADCS0 -> -> 1 `i `b ]
[; ;main.c: 306: ADCS1 = 0;
"306
[e = _ADCS1 -> -> 0 `i `b ]
[; ;main.c: 309: TMR0=0;
"309
[e = _TMR0 -> -> 0 `i `uc ]
[; ;main.c: 310: PCFG2 = 1;
"310
[e = _PCFG2 -> -> 1 `i `b ]
[; ;main.c: 311: PCFG1 = 0;
"311
[e = _PCFG1 -> -> 0 `i `b ]
[; ;main.c: 312: PCFG0 = 0;
"312
[e = _PCFG0 -> -> 0 `i `b ]
[; ;main.c: 314: ADON = 1;
"314
[e = _ADON -> -> 1 `i `b ]
[; ;main.c: 315: LCD_Init();
"315
[e ( _LCD_Init ..  ]
[; ;main.c: 316: delay();
"316
[e ( _delay ..  ]
[; ;main.c: 333: while(1)
"333
[e :U 232 ]
[; ;main.c: 334: {
"334
{
[; ;main.c: 336: GO = 1;
"336
[e = _GO -> -> 1 `i `b ]
[; ;main.c: 337: while(GO);
"337
[e $U 234  ]
[e :U 235 ]
[e :U 234 ]
[e $ _GO 235  ]
[e :U 236 ]
[; ;main.c: 338: _delay((unsigned long)((10)*(4000000/4000000.0)));
"338
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;main.c: 340: adc_data_raw = (unsigned int)ADRES;
"340
[e = _adc_data_raw -> -> _ADRES `ui `i ]
[; ;main.c: 341: adc_data = ((float)adc_data_raw * 500 / 255);
"341
[e = _adc_data -> / * -> _adc_data_raw `f -> -> 500 `i `f -> -> 255 `i `f `i ]
[; ;main.c: 343: if (!ch)
"343
[e $ ! ! != -> _ch `i -> -> -> 0 `i `uc `i 237  ]
[; ;main.c: 344: {
"344
{
[; ;main.c: 345: ch=0;
"345
[e = _ch -> -> 0 `i `uc ]
[; ;main.c: 346: LCD_SetPos(0,0);
"346
[e ( _LCD_SetPos (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 347: CHS0 = 1;
"347
[e = _CHS0 -> -> 1 `i `b ]
[; ;main.c: 348: CHS1 = 0;
"348
[e = _CHS1 -> -> 0 `i `b ]
[; ;main.c: 349: CHS2 = 0;
"349
[e = _CHS2 -> -> 0 `i `b ]
[; ;main.c: 352: sendbytee((unsigned char) (adc_data/100)%10+0x30, 0);
"352
[e ( _sendbytee (2 , -> + % -> -> / _adc_data -> 100 `i `uc `i -> 10 `i -> 48 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 353: sendbytee((unsigned char) (adc_data*10)%10+0x30, 0);
"353
[e ( _sendbytee (2 , -> + % -> -> * _adc_data -> 10 `i `uc `i -> 10 `i -> 48 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 354: sendbytee((unsigned char)0b00101110 , 0);
"354
[e ( _sendbytee (2 , -> -> 46 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 355: sendbytee(((unsigned char) (adc_data*100)%10)+0x30, 0);
"355
[e ( _sendbytee (2 , -> + % -> -> * _adc_data -> 100 `i `uc `i -> 10 `i -> 48 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 358: sendbytee((unsigned char)0b01000010 , 0);
"358
[e ( _sendbytee (2 , -> -> 66 `i `uc -> -> 0 `i `uc ]
"374
}
[; ;main.c: 374: }
[e $U 238  ]
"375
[e :U 237 ]
[; ;main.c: 375: else
[; ;main.c: 376: {
"376
{
[; ;main.c: 377: ch=0;
"377
[e = _ch -> -> 0 `i `uc ]
[; ;main.c: 378: LCD_SetPos(7,0);
"378
[e ( _LCD_SetPos (2 , -> -> 7 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 379: CHS0 = 0;
"379
[e = _CHS0 -> -> 0 `i `b ]
[; ;main.c: 380: CHS1 = 0;
"380
[e = _CHS1 -> -> 0 `i `b ]
[; ;main.c: 381: CHS2 = 0;
"381
[e = _CHS2 -> -> 0 `i `b ]
[; ;main.c: 382: str03[0]= ( ((adc_data2)/10)+0x30 );
"382
[e = *U + &U _str03 * -> -> -> 0 `i `ui `ux -> -> # *U &U _str03 `ui `ux -> + / _adc_data2 -> 10 `i -> 48 `i `uc ]
[; ;main.c: 383: str03[1]= 0b00101110;
"383
[e = *U + &U _str03 * -> -> -> 1 `i `ui `ux -> -> # *U &U _str03 `ui `ux -> -> 46 `i `uc ]
[; ;main.c: 384: str03[2]= ( ((adc_data2)%10)+0x30 );
"384
[e = *U + &U _str03 * -> -> -> 2 `i `ui `ux -> -> # *U &U _str03 `ui `ux -> + % _adc_data2 -> 10 `i -> 48 `i `uc ]
[; ;main.c: 385: str03[3]= ((char) ((adc_data2)*100) %10+0x30 );
"385
[e = *U + &U _str03 * -> -> -> 3 `i `ui `ux -> -> # *U &U _str03 `ui `ux -> + % -> -> * _adc_data2 -> 100 `i `uc `i -> 10 `i -> 48 `i `uc ]
[; ;main.c: 386: str03[4]=((char) ((adc_data2)*1000)%10+0x30 );
"386
[e = *U + &U _str03 * -> -> -> 4 `i `ui `ux -> -> # *U &U _str03 `ui `ux -> + % -> -> * _adc_data2 -> 1000 `i `uc `i -> 10 `i -> 48 `i `uc ]
[; ;main.c: 387: str03[5]=0b01000001;
"387
[e = *U + &U _str03 * -> -> -> 5 `i `ui `ux -> -> # *U &U _str03 `ui `ux -> -> 65 `i `uc ]
[; ;main.c: 388: LCD_String(str03);
"388
[e ( _LCD_String (1 &U _str03 ]
"392
}
[e :U 238 ]
"394
}
[e :U 231 ]
"333
[e $U 232  ]
[e :U 233 ]
[; ;main.c: 392: }
[; ;main.c: 394: }
[; ;main.c: 395: }
"395
[e :UE 230 ]
}
