

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Oct 03 23:35:19 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F73
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 1.45
    32                           ; Generated 16/11/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F73 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167                           
   168                           	psect	idataBANK1
   169  0E3A                     __pidataBANK1:	
   170                           
   171                           ;initializer for _str02
   172  0E3A  344C               	retlw	76
   173  0E3B  3400               	retlw	0
   174  0E3C  344C               	retlw	76
   175  0E3D  3400               	retlw	0
   176  0E3E  344F               	retlw	79
   177  0E3F  3400               	retlw	0
   178  0E40  3441               	retlw	65
   179  0E41  3400               	retlw	0
   180  0E42  3444               	retlw	68
   181  0E43  3400               	retlw	0
   182  0E44  342E               	retlw	46
   183  0E45  3400               	retlw	0
   184  0E46  342E               	retlw	46
   185  0E47  3400               	retlw	0
   186  0E48  342E               	retlw	46
   187  0E49  3400               	retlw	0
   188  0E4A  342E               	retlw	46
   189  0E4B  3400               	retlw	0
   190  0E4C  342E               	retlw	46
   191  0E4D  3400               	retlw	0
   192  0E4E  342E               	retlw	46
   193  0E4F  3400               	retlw	0
   194  0E50  342E               	retlw	46
   195  0E51  3400               	retlw	0
   196  0E52  342E               	retlw	46
   197  0E53  3400               	retlw	0
   198  0E54  342E               	retlw	46
   199  0E55  3400               	retlw	0
   200  0E56  342E               	retlw	46
   201  0E57  3400               	retlw	0
   202  0E58  342E               	retlw	46
   203  0E59  3400               	retlw	0
   204  0E5A  342E               	retlw	46
   205  0E5B  3400               	retlw	0
   206  001E                     _ADRES	set	30
   207  0007                     _PORTCbits	set	7
   208  0005                     _PORTA	set	5
   209  0006                     _PORTB	set	6
   210  00FD                     _CHS2	set	253
   211  00FC                     _CHS1	set	252
   212  00FB                     _CHS0	set	251
   213  00FA                     _GO	set	250
   214  00F8                     _ADON	set	248
   215  00FF                     _ADCS1	set	255
   216  00FE                     _ADCS0	set	254
   217  003F                     _RC7	set	63
   218  003E                     _RC6	set	62
   219  0086                     _TRISB	set	134
   220  0087                     _TRISC	set	135
   221  0085                     _TRISA	set	133
   222  04F8                     _PCFG0	set	1272
   223  04F9                     _PCFG1	set	1273
   224  04FA                     _PCFG2	set	1274
   225                           
   226                           ; #config settings
   227  0000                     
   228                           	psect	cinit
   229  07E6                     start_initialization:	
   230  07E6                     __initialization:	
   231                           
   232                           ; Initialize objects allocated to BANK1
   233  07E6  1383               	bcf	3,7	;select IRP bank0
   234  07E7  30C2               	movlw	low (__pdataBANK1+34)
   235  07E8  00FD               	movwf	btemp+-1
   236  07E9  300E               	movlw	high __pidataBANK1
   237  07EA  00FE               	movwf	btemp
   238  07EB  303A               	movlw	low __pidataBANK1
   239  07EC  00FF               	movwf	btemp+1
   240  07ED  30A0               	movlw	low __pdataBANK1
   241  07EE  0084               	movwf	4
   242  07EF  158A  2581         	fcall	init_ram0
   243                           
   244                           ; Clear objects allocated to BANK0
   245  07F1  01E3               	clrf	__pbssBANK0& (0+127)
   246  07F2  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   247  07F3  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   248  07F4  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   249  07F5  01E7               	clrf	(__pbssBANK0+4)& (0+127)
   250  07F6  01E8               	clrf	(__pbssBANK0+5)& (0+127)
   251  07F7  01E9               	clrf	(__pbssBANK0+6)& (0+127)
   252  07F8  01EA               	clrf	(__pbssBANK0+7)& (0+127)
   253  07F9  01EB               	clrf	(__pbssBANK0+8)& (0+127)
   254  07FA  01EC               	clrf	(__pbssBANK0+9)& (0+127)
   255  07FB  01ED               	clrf	(__pbssBANK0+10)& (0+127)
   256  07FC  01EE               	clrf	(__pbssBANK0+11)& (0+127)
   257  07FD                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  07FD                     __end_of__initialization:	
   261  07FD  0183               	clrf	3
   262  07FE  118A  2A50         	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  0063                     __pbssBANK0:	
   266  0063                     _t:	
   267  0063                     	ds	1
   268  0064                     _y:	
   269  0064                     	ds	1
   270  0065                     _str01:	
   271  0065                     	ds	10
   272                           
   273                           	psect	dataBANK1
   274  00A0                     __pdataBANK1:	
   275  00A0                     _str02:	
   276  00A0                     	ds	34
   277                           
   278                           	psect	inittext
   279  0D7D                     init_fetch0:	
   280                           ;	Called with low address in FSR and high address in W
   281                           
   282  0D7D  087E               	movf	126,w
   283  0D7E  008A               	movwf	10
   284  0D7F  087F               	movf	127,w
   285  0D80  0082               	movwf	2
   286  0D81                     init_ram0:	
   287                           ;Called with:
   288                           ;	high address of idata address in btemp 
   289                           ;	low address of idata address in btemp+1 
   290                           ;	low address of data in FSR
   291                           ;	high address + 1 of data in btemp-1
   292                           
   293  0D81  257D  158A         	fcall	init_fetch0
   294  0D83  0080               	movwf	0
   295  0D84  0A84               	incf	4,f
   296  0D85  0804               	movf	4,w
   297  0D86  067D               	xorwf	125,w
   298  0D87  1903               	btfsc	3,2
   299  0D88  3400               	retlw	0
   300  0D89  0AFF               	incf	127,f
   301  0D8A  1903               	btfsc	3,2
   302  0D8B  0AFE               	incf	126,f
   303  0D8C  2D81               	goto	init_ram0
   304                           
   305                           	psect	cstackCOMMON
   306  0000                     __pcstackCOMMON:	
   307  0000                     ??_LCD_delay:	
   308  0000                     ??_sendbyte:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0000                     ??_LCD_SetPos:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0000                     ??_delay:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           	psect	cstackBANK0
   319  0020                     __pcstackBANK0:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0020                     ?_LCD_delay:	
   323  0020                     ?_LCD_Init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0020                     ?_LCD_String:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0020                     ?_delay:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0020                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0020                     ?___bmul:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0020                     ?___awdiv:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0020                     ?___ftpack:	
   342                           ; 2 bytes @ 0x0
   343                           
   344  0020                     ___bmul@multiplicand:	
   345                           ; 3 bytes @ 0x0
   346                           
   347  0020                     LCD_delay@i:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0020                     delay@i:	
   351                           ; 2 bytes @ 0x0
   352                           
   353  0020                     ___awdiv@divisor:	
   354                           ; 2 bytes @ 0x0
   355                           
   356  0020                     ___ftpack@arg:	
   357                           ; 2 bytes @ 0x0
   358                           
   359                           
   360                           ; 3 bytes @ 0x0
   361  0020                     	ds	1
   362  0021                     ??___bmul:	
   363                           
   364                           ; 1 bytes @ 0x1
   365  0021                     	ds	1
   366  0022                     ?_sendbyte:	
   367  0022                     sendbyte@mode:	
   368                           ; 1 bytes @ 0x2
   369                           
   370  0022                     ___bmul@product:	
   371                           ; 1 bytes @ 0x2
   372                           
   373  0022                     ___awdiv@dividend:	
   374                           ; 1 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378  0022                     	ds	1
   379  0023                     sendbyte@c:	
   380  0023                     ___bmul@multiplier:	
   381                           ; 1 bytes @ 0x3
   382                           
   383  0023                     ___ftpack@exp:	
   384                           ; 1 bytes @ 0x3
   385                           
   386                           
   387                           ; 1 bytes @ 0x3
   388  0023                     	ds	1
   389  0024                     ??_LCD_Init:	
   390  0024                     ?_LCD_SetPos:	
   391                           ; 1 bytes @ 0x4
   392                           
   393  0024                     ??_LCD_String:	
   394                           ; 1 bytes @ 0x4
   395                           
   396  0024                     ??___awdiv:	
   397                           ; 1 bytes @ 0x4
   398                           
   399  0024                     ?___awmod:	
   400                           ; 1 bytes @ 0x4
   401                           
   402  0024                     LCD_SetPos@y:	
   403                           ; 2 bytes @ 0x4
   404                           
   405  0024                     ___ftpack@sign:	
   406                           ; 1 bytes @ 0x4
   407                           
   408  0024                     ___awmod@divisor:	
   409                           ; 1 bytes @ 0x4
   410                           
   411                           
   412                           ; 2 bytes @ 0x4
   413  0024                     	ds	1
   414  0025                     ??___ftpack:	
   415  0025                     LCD_SetPos@x:	
   416                           ; 1 bytes @ 0x5
   417                           
   418  0025                     LCD_String@st:	
   419                           ; 1 bytes @ 0x5
   420                           
   421  0025                     ___awdiv@counter:	
   422                           ; 1 bytes @ 0x5
   423                           
   424                           
   425                           ; 1 bytes @ 0x5
   426  0025                     	ds	1
   427  0026                     LCD_String@i:	
   428  0026                     ___awdiv@sign:	
   429                           ; 1 bytes @ 0x6
   430                           
   431  0026                     ___awmod@dividend:	
   432                           ; 1 bytes @ 0x6
   433                           
   434                           
   435                           ; 2 bytes @ 0x6
   436  0026                     	ds	1
   437  0027                     ___awdiv@quotient:	
   438                           
   439                           ; 2 bytes @ 0x7
   440  0027                     	ds	1
   441  0028                     ??___awmod:	
   442  0028                     ?___ftmul:	
   443                           ; 1 bytes @ 0x8
   444                           
   445  0028                     ?___lwtoft:	
   446                           ; 3 bytes @ 0x8
   447                           
   448  0028                     ___lwtoft@c:	
   449                           ; 3 bytes @ 0x8
   450                           
   451  0028                     ___ftmul@f1:	
   452                           ; 2 bytes @ 0x8
   453                           
   454                           
   455                           ; 3 bytes @ 0x8
   456  0028                     	ds	1
   457  0029                     ___awmod@counter:	
   458                           
   459                           ; 1 bytes @ 0x9
   460  0029                     	ds	1
   461  002A                     ___awmod@sign:	
   462                           
   463                           ; 1 bytes @ 0xA
   464  002A                     	ds	1
   465  002B                     ?_sendbytee:	
   466  002B                     ??___lwtoft:	
   467                           ; 1 bytes @ 0xB
   468                           
   469  002B                     sendbytee@mode:	
   470                           ; 1 bytes @ 0xB
   471                           
   472  002B                     ___ftmul@f2:	
   473                           ; 1 bytes @ 0xB
   474                           
   475                           
   476                           ; 3 bytes @ 0xB
   477  002B                     	ds	1
   478  002C                     ??_sendbytee:	
   479                           
   480                           ; 1 bytes @ 0xC
   481  002C                     	ds	2
   482  002E                     ??___ftmul:	
   483  002E                     sendbytee@c:	
   484                           ; 1 bytes @ 0xE
   485                           
   486                           
   487                           ; 1 bytes @ 0xE
   488  002E                     	ds	1
   489  002F                     ?_segchar:	
   490  002F                     segchar@adc_data:	
   491                           ; 1 bytes @ 0xF
   492                           
   493                           
   494                           ; 2 bytes @ 0xF
   495  002F                     	ds	2
   496  0031                     ??_segchar:	
   497                           
   498                           ; 1 bytes @ 0x11
   499  0031                     	ds	1
   500  0032                     ___ftmul@exp:	
   501                           
   502                           ; 1 bytes @ 0x12
   503  0032                     	ds	1
   504  0033                     ___ftmul@f3_as_product:	
   505                           
   506                           ; 3 bytes @ 0x13
   507  0033                     	ds	3
   508  0036                     ___ftmul@cntr:	
   509                           
   510                           ; 1 bytes @ 0x16
   511  0036                     	ds	1
   512  0037                     ___ftmul@sign:	
   513                           
   514                           ; 1 bytes @ 0x17
   515  0037                     	ds	1
   516  0038                     ?___ftdiv:	
   517  0038                     ___ftdiv@f2:	
   518                           ; 3 bytes @ 0x18
   519                           
   520                           
   521                           ; 3 bytes @ 0x18
   522  0038                     	ds	3
   523  003B                     ___ftdiv@f1:	
   524                           
   525                           ; 3 bytes @ 0x1B
   526  003B                     	ds	3
   527  003E                     ??___ftdiv:	
   528                           
   529                           ; 1 bytes @ 0x1E
   530  003E                     	ds	4
   531  0042                     ___ftdiv@cntr:	
   532                           
   533                           ; 1 bytes @ 0x22
   534  0042                     	ds	1
   535  0043                     ___ftdiv@f3:	
   536                           
   537                           ; 3 bytes @ 0x23
   538  0043                     	ds	3
   539  0046                     ___ftdiv@exp:	
   540                           
   541                           ; 1 bytes @ 0x26
   542  0046                     	ds	1
   543  0047                     ___ftdiv@sign:	
   544                           
   545                           ; 1 bytes @ 0x27
   546  0047                     	ds	1
   547  0048                     ?___fttol:	
   548  0048                     ___fttol@f1:	
   549                           ; 4 bytes @ 0x28
   550                           
   551                           
   552                           ; 3 bytes @ 0x28
   553  0048                     	ds	4
   554  004C                     ??___fttol:	
   555                           
   556                           ; 1 bytes @ 0x2C
   557  004C                     	ds	4
   558  0050                     ___fttol@sign1:	
   559                           
   560                           ; 1 bytes @ 0x30
   561  0050                     	ds	1
   562  0051                     ___fttol@lval:	
   563                           
   564                           ; 4 bytes @ 0x31
   565  0051                     	ds	4
   566  0055                     ___fttol@exp1:	
   567                           
   568                           ; 1 bytes @ 0x35
   569  0055                     	ds	1
   570  0056                     ??_main:	
   571                           
   572                           ; 1 bytes @ 0x36
   573  0056                     	ds	4
   574  005A                     main@ch:	
   575                           
   576                           ; 2 bytes @ 0x3A
   577  005A                     	ds	2
   578  005C                     main@adc_data_raw:	
   579                           
   580                           ; 3 bytes @ 0x3C
   581  005C                     	ds	3
   582  005F                     main@adc_data2:	
   583                           
   584                           ; 1 bytes @ 0x3F
   585  005F                     	ds	1
   586  0060                     main@adc_data:	
   587                           
   588                           ; 1 bytes @ 0x40
   589  0060                     	ds	1
   590  0061                     main@l:	
   591                           
   592                           ; 2 bytes @ 0x41
   593  0061                     	ds	2
   594                           
   595                           	psect	maintext
   596  0250                     __pmaintext:	
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 287 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  ch              2   58[BANK0 ] unsigned int 
   607 ;;  adc_data_raw    3   60[BANK0 ] float 
   608 ;;  l               2   65[BANK0 ] unsigned int 
   609 ;;  adc_data        1   64[BANK0 ] unsigned char 
   610 ;;  adc_data2       1   63[BANK0 ] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : B00/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1
   620 ;;      Params:         0       0       0
   621 ;;      Locals:         0       9       0
   622 ;;      Temps:          0       4       0
   623 ;;      Totals:         0      13       0
   624 ;;Total ram usage:       13 bytes
   625 ;; Hardware stack levels required when called:    4
   626 ;; This function calls:
   627 ;;		_LCD_Init
   628 ;;		_LCD_SetPos
   629 ;;		_LCD_String
   630 ;;		___awdiv
   631 ;;		___awmod
   632 ;;		___bmul
   633 ;;		___ftdiv
   634 ;;		___ftmul
   635 ;;		___fttol
   636 ;;		___lwtoft
   637 ;;		_delay
   638 ;;		_segchar
   639 ;;		_sendbytee
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _main
   647  0250                     _main:	
   648                           
   649                           ;main.c: 289: float adc_data_raw = .0f;
   650                           
   651                           ;incstack = 0
   652                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   653  0250  3000               	movlw	0
   654  0251  1283               	bcf	3,5	;RP0=0, select bank0
   655  0252  1303               	bcf	3,6	;RP1=0, select bank0
   656  0253  00DC               	movwf	main@adc_data_raw
   657  0254  3000               	movlw	0
   658  0255  00DD               	movwf	main@adc_data_raw+1
   659  0256  3000               	movlw	0
   660  0257  00DE               	movwf	main@adc_data_raw+2
   661                           
   662                           ;main.c: 291: char adc_data = 0;
   663  0258  01E0               	clrf	main@adc_data
   664                           
   665                           ;main.c: 292: unsigned char adc_data2 = 0;
   666  0259  01DF               	clrf	main@adc_data2
   667                           
   668                           ;main.c: 293: TRISA = 0b00001111;
   669  025A  300F               	movlw	15
   670  025B  1683               	bsf	3,5	;RP0=1, select bank1
   671  025C  1303               	bcf	3,6	;RP1=0, select bank1
   672  025D  0085               	movwf	5	;volatile
   673                           
   674                           ;main.c: 294: PORTA = 0x00;
   675  025E  1283               	bcf	3,5	;RP0=0, select bank0
   676  025F  1303               	bcf	3,6	;RP1=0, select bank0
   677  0260  0185               	clrf	5	;volatile
   678                           
   679                           ;main.c: 295: TRISC=0X00;
   680  0261  1683               	bsf	3,5	;RP0=1, select bank1
   681  0262  1303               	bcf	3,6	;RP1=0, select bank1
   682  0263  0187               	clrf	7	;volatile
   683                           
   684                           ;main.c: 296: TRISB=0X00;
   685  0264  0186               	clrf	6	;volatile
   686                           
   687                           ;main.c: 297: PCFG2 = 0;
   688  0265  111F               	bcf	31,2	;volatile
   689                           
   690                           ;main.c: 298: PCFG1 = 0;
   691  0266  109F               	bcf	31,1	;volatile
   692                           
   693                           ;main.c: 299: PCFG0 = 1;
   694  0267  141F               	bsf	31,0	;volatile
   695                           
   696                           ;main.c: 300: ADCS0 = 1;
   697  0268  1283               	bcf	3,5	;RP0=0, select bank0
   698  0269  1303               	bcf	3,6	;RP1=0, select bank0
   699  026A  171F               	bsf	31,6	;volatile
   700                           
   701                           ;main.c: 301: ADCS1 = 0;
   702  026B  139F               	bcf	31,7	;volatile
   703                           
   704                           ;main.c: 302: ADON = 1;
   705  026C  141F               	bsf	31,0	;volatile
   706                           
   707                           ;main.c: 303: LCD_Init();
   708  026D  118A  201C  118A   	fcall	_LCD_Init
   709                           
   710                           ;main.c: 304: delay();
   711  0270  118A  2004  118A   	fcall	_delay
   712                           
   713                           ;main.c: 306: unsigned int l;
   714                           ;main.c: 307: for(l=0;l<4;l++)
   715  0273  1283               	bcf	3,5	;RP0=0, select bank0
   716  0274  1303               	bcf	3,6	;RP1=0, select bank0
   717  0275  01E1               	clrf	main@l
   718  0276  01E2               	clrf	main@l+1
   719  0277  3000               	movlw	0
   720  0278  0262               	subwf	main@l+1,w
   721  0279  3004               	movlw	4
   722  027A  1903               	skipnz
   723  027B  0261               	subwf	main@l,w
   724  027C  1803               	btfsc	3,0
   725  027D  2AA1               	goto	l2428
   726  027E                     l2420:	
   727                           
   728                           ;main.c: 308: {
   729                           ;main.c: 309: sendbytee(str02[l],0);
   730  027E  01AB               	clrf	sendbytee@mode
   731  027F  0861               	movf	main@l,w
   732  0280  00D6               	movwf	??_main
   733  0281  0756               	addwf	??_main,w
   734  0282  3EA0               	addlw	(low (_str02| 0))& (0+255)
   735  0283  0084               	movwf	4
   736  0284  1383               	bcf	3,7	;select IRP bank1
   737  0285  0800               	movf	0,w
   738  0286  158A  25E1  118A   	fcall	_sendbytee
   739                           
   740                           ;main.c: 310: _delay((unsigned long)((1)*(4000000/4000.0)));
   741  0289  30C7               	movlw	199
   742  028A  1283               	bcf	3,5	;RP0=0, select bank0
   743  028B  1303               	bcf	3,6	;RP1=0, select bank0
   744  028C  00D6               	movwf	??_main
   745  028D                     u2737:	
   746  028D  2A8E               	nop2
   747  028E  0BD6               	decfsz	??_main,f
   748  028F  2A8D               	goto	u2737
   749  0290  2A91               	nop2
   750  0291  0000               	nop
   751  0292  3001               	movlw	1
   752  0293  1283               	bcf	3,5	;RP0=0, select bank0
   753  0294  1303               	bcf	3,6	;RP1=0, select bank0
   754  0295  07E1               	addwf	main@l,f
   755  0296  1803               	skipnc
   756  0297  0AE2               	incf	main@l+1,f
   757  0298  3000               	movlw	0
   758  0299  07E2               	addwf	main@l+1,f
   759  029A  3000               	movlw	0
   760  029B  0262               	subwf	main@l+1,w
   761  029C  3004               	movlw	4
   762  029D  1903               	skipnz
   763  029E  0261               	subwf	main@l,w
   764  029F  1C03               	skipc
   765  02A0  2A7E               	goto	l2420
   766  02A1                     l2428:	
   767                           
   768                           ;main.c: 311: }
   769                           ;main.c: 312: for(l=4;l<17;l++)
   770  02A1  3004               	movlw	4
   771  02A2  00E1               	movwf	main@l
   772  02A3  3000               	movlw	0
   773  02A4  00E2               	movwf	main@l+1
   774  02A5  3000               	movlw	0
   775  02A6  0262               	subwf	main@l+1,w
   776  02A7  3011               	movlw	17
   777  02A8  1903               	skipnz
   778  02A9  0261               	subwf	main@l,w
   779  02AA  1803               	btfsc	3,0
   780  02AB  2AD5               	goto	l2440
   781  02AC                     l2432:	
   782                           
   783                           ;main.c: 313: {
   784                           ;main.c: 314: sendbytee(str02[l],0);
   785  02AC  01AB               	clrf	sendbytee@mode
   786  02AD  0861               	movf	main@l,w
   787  02AE  00D6               	movwf	??_main
   788  02AF  0756               	addwf	??_main,w
   789  02B0  3EA0               	addlw	(low (_str02| 0))& (0+255)
   790  02B1  0084               	movwf	4
   791  02B2  1383               	bcf	3,7	;select IRP bank1
   792  02B3  0800               	movf	0,w
   793  02B4  158A  25E1  118A   	fcall	_sendbytee
   794                           
   795                           ;main.c: 315: _delay((unsigned long)((1000)*(4000000/4000.0)));
   796  02B7  3006               	movlw	6
   797  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   798  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   799  02BA  00D8               	movwf	??_main+2
   800  02BB  3013               	movlw	19
   801  02BC  00D7               	movwf	??_main+1
   802  02BD  30AD               	movlw	173
   803  02BE  00D6               	movwf	??_main
   804  02BF                     u2747:	
   805  02BF  0BD6               	decfsz	??_main,f
   806  02C0  2ABF               	goto	u2747
   807  02C1  0BD7               	decfsz	??_main+1,f
   808  02C2  2ABF               	goto	u2747
   809  02C3  0BD8               	decfsz	??_main+2,f
   810  02C4  2ABF               	goto	u2747
   811  02C5  0000               	nop
   812  02C6  3001               	movlw	1
   813  02C7  1283               	bcf	3,5	;RP0=0, select bank0
   814  02C8  1303               	bcf	3,6	;RP1=0, select bank0
   815  02C9  07E1               	addwf	main@l,f
   816  02CA  1803               	skipnc
   817  02CB  0AE2               	incf	main@l+1,f
   818  02CC  3000               	movlw	0
   819  02CD  07E2               	addwf	main@l+1,f
   820  02CE  3000               	movlw	0
   821  02CF  0262               	subwf	main@l+1,w
   822  02D0  3011               	movlw	17
   823  02D1  1903               	skipnz
   824  02D2  0261               	subwf	main@l,w
   825  02D3  1C03               	skipc
   826  02D4  2AAC               	goto	l2432
   827  02D5                     l2440:	
   828                           
   829                           ;main.c: 316: }
   830                           ;main.c: 317: sendbytee(0b00000001,1);
   831  02D5  01AB               	clrf	sendbytee@mode
   832  02D6  0AAB               	incf	sendbytee@mode,f
   833  02D7  3001               	movlw	1
   834  02D8  158A  25E1  118A   	fcall	_sendbytee
   835  02DB                     l2442:	
   836                           ;main.c: 319: while(1)
   837                           
   838                           
   839                           ;main.c: 320: {
   840                           ;main.c: 321: unsigned int ch;
   841                           ;main.c: 322: GO = 1;
   842  02DB  1283               	bcf	3,5	;RP0=0, select bank0
   843  02DC  1303               	bcf	3,6	;RP1=0, select bank0
   844  02DD  151F               	bsf	31,2	;volatile
   845  02DE                     l217:	
   846                           ;main.c: 323: while(GO);
   847                           
   848  02DE  191F               	btfsc	31,2	;volatile
   849  02DF  2ADE               	goto	l217
   850                           
   851                           ;main.c: 324: _delay((unsigned long)((100)*(4000000/4000000.0)));
   852  02E0  3020               	movlw	32
   853  02E1  1283               	bcf	3,5	;RP0=0, select bank0
   854  02E2  1303               	bcf	3,6	;RP1=0, select bank0
   855  02E3  00D6               	movwf	??_main
   856  02E4                     u2757:	
   857  02E4  0BD6               	decfsz	??_main,f
   858  02E5  2AE4               	goto	u2757
   859  02E6  2AE7               	nop2
   860                           
   861                           ;main.c: 325: PORTCbits.RC4 = 1;
   862  02E7  1283               	bcf	3,5	;RP0=0, select bank0
   863  02E8  1303               	bcf	3,6	;RP1=0, select bank0
   864  02E9  1607               	bsf	7,4	;volatile
   865                           
   866                           ;main.c: 326: PORTCbits.RC5 = 0;
   867  02EA  1287               	bcf	7,5	;volatile
   868                           
   869                           ;main.c: 327: _delay((unsigned long)((100)*(4000000/4000.0)));
   870  02EB  3082               	movlw	130
   871  02EC  1283               	bcf	3,5	;RP0=0, select bank0
   872  02ED  1303               	bcf	3,6	;RP1=0, select bank0
   873  02EE  00D7               	movwf	??_main+1
   874  02EF  30DD               	movlw	221
   875  02F0  00D6               	movwf	??_main
   876  02F1                     u2767:	
   877  02F1  0BD6               	decfsz	??_main,f
   878  02F2  2AF1               	goto	u2767
   879  02F3  0BD7               	decfsz	??_main+1,f
   880  02F4  2AF1               	goto	u2767
   881  02F5  0000               	nop
   882                           
   883                           ;main.c: 328: PORTCbits.RC4 = 0;
   884  02F6  1283               	bcf	3,5	;RP0=0, select bank0
   885  02F7  1303               	bcf	3,6	;RP1=0, select bank0
   886  02F8  1207               	bcf	7,4	;volatile
   887                           
   888                           ;main.c: 329: PORTCbits.RC5 = 1;
   889  02F9  1687               	bsf	7,5	;volatile
   890                           
   891                           ;main.c: 330: _delay((unsigned long)((10)*(4000000/4000.0)));
   892  02FA  300D               	movlw	13
   893  02FB  1283               	bcf	3,5	;RP0=0, select bank0
   894  02FC  1303               	bcf	3,6	;RP1=0, select bank0
   895  02FD  00D7               	movwf	??_main+1
   896  02FE  30FB               	movlw	251
   897  02FF  00D6               	movwf	??_main
   898  0300                     u2777:	
   899  0300  0BD6               	decfsz	??_main,f
   900  0301  2B00               	goto	u2777
   901  0302  0BD7               	decfsz	??_main+1,f
   902  0303  2B00               	goto	u2777
   903  0304  0000               	nop
   904                           
   905                           ;main.c: 331: adc_data_raw = (unsigned int)ADRES;
   906  0305  1283               	bcf	3,5	;RP0=0, select bank0
   907  0306  1303               	bcf	3,6	;RP1=0, select bank0
   908  0307  081E               	movf	30,w	;volatile
   909  0308  00D6               	movwf	??_main
   910  0309  01D7               	clrf	??_main+1
   911  030A  0856               	movf	??_main,w
   912  030B  00A8               	movwf	___lwtoft@c
   913  030C  0857               	movf	??_main+1,w
   914  030D  00A9               	movwf	___lwtoft@c+1
   915  030E  158A  25B2  118A   	fcall	___lwtoft
   916  0311  1283               	bcf	3,5	;RP0=0, select bank0
   917  0312  1303               	bcf	3,6	;RP1=0, select bank0
   918  0313  0828               	movf	?___lwtoft,w
   919  0314  00DC               	movwf	main@adc_data_raw
   920  0315  0829               	movf	?___lwtoft+1,w
   921  0316  00DD               	movwf	main@adc_data_raw+1
   922  0317  082A               	movf	?___lwtoft+2,w
   923  0318  00DE               	movwf	main@adc_data_raw+2
   924                           
   925                           ;main.c: 332: adc_data = (float)adc_data_raw * 29 / 255 ;
   926  0319  085C               	movf	main@adc_data_raw,w
   927  031A  00AB               	movwf	___ftmul@f2
   928  031B  085D               	movf	main@adc_data_raw+1,w
   929  031C  00AC               	movwf	___ftmul@f2+1
   930  031D  085E               	movf	main@adc_data_raw+2,w
   931  031E  00AD               	movwf	___ftmul@f2+2
   932  031F  3000               	movlw	0
   933  0320  00A8               	movwf	___ftmul@f1
   934  0321  30E8               	movlw	232
   935  0322  00A9               	movwf	___ftmul@f1+1
   936  0323  3041               	movlw	65
   937  0324  00AA               	movwf	___ftmul@f1+2
   938  0325  118A  217E  118A   	fcall	___ftmul
   939  0328  1283               	bcf	3,5	;RP0=0, select bank0
   940  0329  1303               	bcf	3,6	;RP1=0, select bank0
   941  032A  0828               	movf	?___ftmul,w
   942  032B  00BB               	movwf	___ftdiv@f1
   943  032C  0829               	movf	?___ftmul+1,w
   944  032D  00BC               	movwf	___ftdiv@f1+1
   945  032E  082A               	movf	?___ftmul+2,w
   946  032F  00BD               	movwf	___ftdiv@f1+2
   947  0330  3000               	movlw	0
   948  0331  00B8               	movwf	___ftdiv@f2
   949  0332  307F               	movlw	127
   950  0333  00B9               	movwf	___ftdiv@f2+1
   951  0334  3043               	movlw	67
   952  0335  00BA               	movwf	___ftdiv@f2+2
   953  0336  118A  20C7  118A   	fcall	___ftdiv
   954  0339  1283               	bcf	3,5	;RP0=0, select bank0
   955  033A  1303               	bcf	3,6	;RP1=0, select bank0
   956  033B  0838               	movf	?___ftdiv,w
   957  033C  00C8               	movwf	___fttol@f1
   958  033D  0839               	movf	?___ftdiv+1,w
   959  033E  00C9               	movwf	___fttol@f1+1
   960  033F  083A               	movf	?___ftdiv+2,w
   961  0340  00CA               	movwf	___fttol@f1+2
   962  0341  158A  2772  118A   	fcall	___fttol
   963  0344  1283               	bcf	3,5	;RP0=0, select bank0
   964  0345  1303               	bcf	3,6	;RP1=0, select bank0
   965  0346  0848               	movf	?___fttol,w
   966  0347  00D6               	movwf	??_main
   967  0348  0856               	movf	??_main,w
   968  0349  00E0               	movwf	main@adc_data
   969                           
   970                           ;main.c: 333: adc_data2 =((float)adc_data_raw * 25 / 255) ;
   971  034A  085C               	movf	main@adc_data_raw,w
   972  034B  00AB               	movwf	___ftmul@f2
   973  034C  085D               	movf	main@adc_data_raw+1,w
   974  034D  00AC               	movwf	___ftmul@f2+1
   975  034E  085E               	movf	main@adc_data_raw+2,w
   976  034F  00AD               	movwf	___ftmul@f2+2
   977  0350  3000               	movlw	0
   978  0351  00A8               	movwf	___ftmul@f1
   979  0352  30C8               	movlw	200
   980  0353  00A9               	movwf	___ftmul@f1+1
   981  0354  3041               	movlw	65
   982  0355  00AA               	movwf	___ftmul@f1+2
   983  0356  118A  217E  118A   	fcall	___ftmul
   984  0359  1283               	bcf	3,5	;RP0=0, select bank0
   985  035A  1303               	bcf	3,6	;RP1=0, select bank0
   986  035B  0828               	movf	?___ftmul,w
   987  035C  00BB               	movwf	___ftdiv@f1
   988  035D  0829               	movf	?___ftmul+1,w
   989  035E  00BC               	movwf	___ftdiv@f1+1
   990  035F  082A               	movf	?___ftmul+2,w
   991  0360  00BD               	movwf	___ftdiv@f1+2
   992  0361  3000               	movlw	0
   993  0362  00B8               	movwf	___ftdiv@f2
   994  0363  307F               	movlw	127
   995  0364  00B9               	movwf	___ftdiv@f2+1
   996  0365  3043               	movlw	67
   997  0366  00BA               	movwf	___ftdiv@f2+2
   998  0367  118A  20C7  118A   	fcall	___ftdiv
   999  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1000  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1001  036C  0838               	movf	?___ftdiv,w
  1002  036D  00C8               	movwf	___fttol@f1
  1003  036E  0839               	movf	?___ftdiv+1,w
  1004  036F  00C9               	movwf	___fttol@f1+1
  1005  0370  083A               	movf	?___ftdiv+2,w
  1006  0371  00CA               	movwf	___fttol@f1+2
  1007  0372  158A  2772  118A   	fcall	___fttol
  1008  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0377  0848               	movf	?___fttol,w
  1011  0378  00D6               	movwf	??_main
  1012  0379  0856               	movf	??_main,w
  1013  037A  00DF               	movwf	main@adc_data2
  1014                           
  1015                           ;main.c: 334: if (!ch)
  1016  037B  085A               	movf	main@ch,w
  1017  037C  045B               	iorwf	main@ch+1,w
  1018  037D  1D03               	btfss	3,2
  1019  037E  2C17               	goto	l2490
  1020                           
  1021                           ;main.c: 335: {
  1022                           ;main.c: 338: ch=1;
  1023  037F  3001               	movlw	1
  1024  0380  00DA               	movwf	main@ch
  1025  0381  3000               	movlw	0
  1026  0382  00DB               	movwf	main@ch+1
  1027                           
  1028                           ;main.c: 339: LCD_SetPos(0,0);
  1029  0383  01A4               	clrf	LCD_SetPos@y
  1030  0384  3000               	movlw	0
  1031  0385  158A  25FC  118A   	fcall	_LCD_SetPos
  1032                           
  1033                           ;main.c: 340: CHS0 = 1;
  1034  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1036  038A  159F               	bsf	31,3	;volatile
  1037                           
  1038                           ;main.c: 341: CHS1 = 0;
  1039  038B  121F               	bcf	31,4	;volatile
  1040                           
  1041                           ;main.c: 342: CHS2 = 0;
  1042  038C  129F               	bcf	31,5	;volatile
  1043                           
  1044                           ;main.c: 344: str01[0]= ((adc_data/10)+0x30);
  1045  038D  300A               	movlw	10
  1046  038E  00A0               	movwf	___awdiv@divisor
  1047  038F  3000               	movlw	0
  1048  0390  00A1               	movwf	___awdiv@divisor+1
  1049  0391  0860               	movf	main@adc_data,w
  1050  0392  00D6               	movwf	??_main
  1051  0393  01D7               	clrf	??_main+1
  1052  0394  0856               	movf	??_main,w
  1053  0395  00A2               	movwf	___awdiv@dividend
  1054  0396  0857               	movf	??_main+1,w
  1055  0397  00A3               	movwf	___awdiv@dividend+1
  1056  0398  158A  26A9  118A   	fcall	___awdiv
  1057  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1058  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1059  039D  0820               	movf	?___awdiv,w
  1060  039E  3E30               	addlw	48
  1061  039F  00D8               	movwf	??_main+2
  1062  03A0  0858               	movf	??_main+2,w
  1063  03A1  00E5               	movwf	_str01
  1064                           
  1065                           ;main.c: 345: str01[1]= ((adc_data%10)+0x30);
  1066  03A2  300A               	movlw	10
  1067  03A3  00A4               	movwf	___awmod@divisor
  1068  03A4  3000               	movlw	0
  1069  03A5  00A5               	movwf	___awmod@divisor+1
  1070  03A6  0860               	movf	main@adc_data,w
  1071  03A7  00D6               	movwf	??_main
  1072  03A8  01D7               	clrf	??_main+1
  1073  03A9  0856               	movf	??_main,w
  1074  03AA  00A6               	movwf	___awmod@dividend
  1075  03AB  0857               	movf	??_main+1,w
  1076  03AC  00A7               	movwf	___awmod@dividend+1
  1077  03AD  158A  265C  118A   	fcall	___awmod
  1078  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1079  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1080  03B2  0824               	movf	?___awmod,w
  1081  03B3  3E30               	addlw	48
  1082  03B4  00D8               	movwf	??_main+2
  1083  03B5  0858               	movf	??_main+2,w
  1084  03B6  00E6               	movwf	_str01+1
  1085                           
  1086                           ;main.c: 346: str01[2]= 0b00101110;
  1087  03B7  302E               	movlw	46
  1088  03B8  00D6               	movwf	??_main
  1089  03B9  0856               	movf	??_main,w
  1090  03BA  00E7               	movwf	_str01+2
  1091                           
  1092                           ;main.c: 347: str01[3]= ((char)(adc_data*100)%10+0x30);
  1093  03BB  300A               	movlw	10
  1094  03BC  00A4               	movwf	___awmod@divisor
  1095  03BD  3000               	movlw	0
  1096  03BE  00A5               	movwf	___awmod@divisor+1
  1097  03BF  3064               	movlw	100
  1098  03C0  00D6               	movwf	??_main
  1099  03C1  0856               	movf	??_main,w
  1100  03C2  00A0               	movwf	___bmul@multiplicand
  1101  03C3  0860               	movf	main@adc_data,w
  1102  03C4  158A  259F  118A   	fcall	___bmul
  1103  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1104  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1105  03C9  00D7               	movwf	??_main+1
  1106  03CA  01D8               	clrf	??_main+2
  1107  03CB  0857               	movf	??_main+1,w
  1108  03CC  00A6               	movwf	___awmod@dividend
  1109  03CD  0858               	movf	??_main+2,w
  1110  03CE  00A7               	movwf	___awmod@dividend+1
  1111  03CF  158A  265C  118A   	fcall	___awmod
  1112  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1113  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1114  03D4  0824               	movf	?___awmod,w
  1115  03D5  3E30               	addlw	48
  1116  03D6  00D9               	movwf	??_main+3
  1117  03D7  0859               	movf	??_main+3,w
  1118  03D8  00E8               	movwf	_str01+3
  1119                           
  1120                           ;main.c: 348: str01[4]= ((char)(adc_data*1000)%10+0x30);
  1121  03D9  300A               	movlw	10
  1122  03DA  00A4               	movwf	___awmod@divisor
  1123  03DB  3000               	movlw	0
  1124  03DC  00A5               	movwf	___awmod@divisor+1
  1125  03DD  30E8               	movlw	232
  1126  03DE  00D6               	movwf	??_main
  1127  03DF  0856               	movf	??_main,w
  1128  03E0  00A0               	movwf	___bmul@multiplicand
  1129  03E1  0860               	movf	main@adc_data,w
  1130  03E2  158A  259F  118A   	fcall	___bmul
  1131  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1132  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1133  03E7  00D7               	movwf	??_main+1
  1134  03E8  01D8               	clrf	??_main+2
  1135  03E9  0857               	movf	??_main+1,w
  1136  03EA  00A6               	movwf	___awmod@dividend
  1137  03EB  0858               	movf	??_main+2,w
  1138  03EC  00A7               	movwf	___awmod@dividend+1
  1139  03ED  158A  265C  118A   	fcall	___awmod
  1140  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1141  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1142  03F2  0824               	movf	?___awmod,w
  1143  03F3  3E30               	addlw	48
  1144  03F4  00D9               	movwf	??_main+3
  1145  03F5  0859               	movf	??_main+3,w
  1146  03F6  00E9               	movwf	_str01+4
  1147                           
  1148                           ;main.c: 350: str01[5]=0b01000010;
  1149  03F7  3042               	movlw	66
  1150  03F8  00D6               	movwf	??_main
  1151  03F9  0856               	movf	??_main,w
  1152  03FA  00EA               	movwf	_str01+5
  1153                           
  1154                           ;main.c: 358: LCD_String(str01);
  1155  03FB  3065               	movlw	(low (_str01| 0))& (0+255)
  1156  03FC  158A  261A  118A   	fcall	_LCD_String
  1157                           
  1158                           ;main.c: 375: segchar(adc_data);
  1159  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0401  0860               	movf	main@adc_data,w
  1162  0402  00D6               	movwf	??_main
  1163  0403  01D7               	clrf	??_main+1
  1164  0404  0856               	movf	??_main,w
  1165  0405  00AF               	movwf	segchar@adc_data
  1166  0406  0857               	movf	??_main+1,w
  1167  0407  00B0               	movwf	segchar@adc_data+1
  1168  0408  118A  24B6  118A   	fcall	_segchar
  1169                           
  1170                           ;main.c: 376: _delay((unsigned long)((100)*(4000000/4000.0)));
  1171  040B  3082               	movlw	130
  1172  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1173  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1174  040E  00D7               	movwf	??_main+1
  1175  040F  30DD               	movlw	221
  1176  0410  00D6               	movwf	??_main
  1177  0411                     u2787:	
  1178  0411  0BD6               	decfsz	??_main,f
  1179  0412  2C11               	goto	u2787
  1180  0413  0BD7               	decfsz	??_main+1,f
  1181  0414  2C11               	goto	u2787
  1182  0415  0000               	nop
  1183                           
  1184                           ;main.c: 387: }
  1185  0416  2ADB               	goto	l2442
  1186  0417                     l2490:	
  1187                           
  1188                           ;main.c: 388: else
  1189                           ;main.c: 389: {
  1190                           ;main.c: 391: ch=0;
  1191  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0419  01DA               	clrf	main@ch
  1194  041A  01DB               	clrf	main@ch+1
  1195                           
  1196                           ;main.c: 392: LCD_SetPos(7,0);
  1197  041B  01A4               	clrf	LCD_SetPos@y
  1198  041C  3007               	movlw	7
  1199  041D  158A  25FC  118A   	fcall	_LCD_SetPos
  1200                           
  1201                           ;main.c: 393: CHS0 = 0;
  1202  0420  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0421  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0422  119F               	bcf	31,3	;volatile
  1205                           
  1206                           ;main.c: 394: CHS1 = 1;
  1207  0423  161F               	bsf	31,4	;volatile
  1208                           
  1209                           ;main.c: 395: CHS2 = 0;
  1210  0424  129F               	bcf	31,5	;volatile
  1211                           
  1212                           ;main.c: 396: sendbytee((unsigned char) ((adc_data2)/10)+0x30, 0);
  1213  0425  01AB               	clrf	sendbytee@mode
  1214  0426  300A               	movlw	10
  1215  0427  00A0               	movwf	___awdiv@divisor
  1216  0428  3000               	movlw	0
  1217  0429  00A1               	movwf	___awdiv@divisor+1
  1218  042A  085F               	movf	main@adc_data2,w
  1219  042B  00D6               	movwf	??_main
  1220  042C  01D7               	clrf	??_main+1
  1221  042D  0856               	movf	??_main,w
  1222  042E  00A2               	movwf	___awdiv@dividend
  1223  042F  0857               	movf	??_main+1,w
  1224  0430  00A3               	movwf	___awdiv@dividend+1
  1225  0431  158A  26A9  118A   	fcall	___awdiv
  1226  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0436  0820               	movf	?___awdiv,w
  1229  0437  3E30               	addlw	48
  1230  0438  158A  25E1  118A   	fcall	_sendbytee
  1231                           
  1232                           ;main.c: 397: sendbytee((unsigned char)0b00101110 , 0);
  1233  043B  1283               	bcf	3,5	;RP0=0, select bank0
  1234  043C  1303               	bcf	3,6	;RP1=0, select bank0
  1235  043D  01AB               	clrf	sendbytee@mode
  1236  043E  302E               	movlw	46
  1237  043F  158A  25E1  118A   	fcall	_sendbytee
  1238                           
  1239                           ;main.c: 398: sendbytee((unsigned char) ((adc_data2)%10)+0x30, 0);
  1240  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0444  01AB               	clrf	sendbytee@mode
  1243  0445  300A               	movlw	10
  1244  0446  00A4               	movwf	___awmod@divisor
  1245  0447  3000               	movlw	0
  1246  0448  00A5               	movwf	___awmod@divisor+1
  1247  0449  085F               	movf	main@adc_data2,w
  1248  044A  00D6               	movwf	??_main
  1249  044B  01D7               	clrf	??_main+1
  1250  044C  0856               	movf	??_main,w
  1251  044D  00A6               	movwf	___awmod@dividend
  1252  044E  0857               	movf	??_main+1,w
  1253  044F  00A7               	movwf	___awmod@dividend+1
  1254  0450  158A  265C  118A   	fcall	___awmod
  1255  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0455  0824               	movf	?___awmod,w
  1258  0456  3E30               	addlw	48
  1259  0457  158A  25E1  118A   	fcall	_sendbytee
  1260                           
  1261                           ;main.c: 399: sendbytee(((unsigned char) ((adc_data2)*100)%10)+0x30, 0);
  1262  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1263  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1264  045C  01AB               	clrf	sendbytee@mode
  1265  045D  300A               	movlw	10
  1266  045E  00A4               	movwf	___awmod@divisor
  1267  045F  3000               	movlw	0
  1268  0460  00A5               	movwf	___awmod@divisor+1
  1269  0461  3064               	movlw	100
  1270  0462  00D6               	movwf	??_main
  1271  0463  0856               	movf	??_main,w
  1272  0464  00A0               	movwf	___bmul@multiplicand
  1273  0465  085F               	movf	main@adc_data2,w
  1274  0466  158A  259F  118A   	fcall	___bmul
  1275  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1276  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1277  046B  00D7               	movwf	??_main+1
  1278  046C  01D8               	clrf	??_main+2
  1279  046D  0857               	movf	??_main+1,w
  1280  046E  00A6               	movwf	___awmod@dividend
  1281  046F  0858               	movf	??_main+2,w
  1282  0470  00A7               	movwf	___awmod@dividend+1
  1283  0471  158A  265C  118A   	fcall	___awmod
  1284  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0476  0824               	movf	?___awmod,w
  1287  0477  3E30               	addlw	48
  1288  0478  158A  25E1  118A   	fcall	_sendbytee
  1289                           
  1290                           ;main.c: 400: sendbytee(((unsigned char) ((adc_data2)*1000)%10)+0x30, 0);
  1291  047B  1283               	bcf	3,5	;RP0=0, select bank0
  1292  047C  1303               	bcf	3,6	;RP1=0, select bank0
  1293  047D  01AB               	clrf	sendbytee@mode
  1294  047E  300A               	movlw	10
  1295  047F  00A4               	movwf	___awmod@divisor
  1296  0480  3000               	movlw	0
  1297  0481  00A5               	movwf	___awmod@divisor+1
  1298  0482  30E8               	movlw	232
  1299  0483  00D6               	movwf	??_main
  1300  0484  0856               	movf	??_main,w
  1301  0485  00A0               	movwf	___bmul@multiplicand
  1302  0486  085F               	movf	main@adc_data2,w
  1303  0487  158A  259F  118A   	fcall	___bmul
  1304  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1305  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1306  048C  00D7               	movwf	??_main+1
  1307  048D  01D8               	clrf	??_main+2
  1308  048E  0857               	movf	??_main+1,w
  1309  048F  00A6               	movwf	___awmod@dividend
  1310  0490  0858               	movf	??_main+2,w
  1311  0491  00A7               	movwf	___awmod@dividend+1
  1312  0492  158A  265C  118A   	fcall	___awmod
  1313  0495  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0496  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0497  0824               	movf	?___awmod,w
  1316  0498  3E30               	addlw	48
  1317  0499  158A  25E1  118A   	fcall	_sendbytee
  1318                           
  1319                           ;main.c: 401: LCD_SetPos(12,0);
  1320  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1321  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1322  049E  01A4               	clrf	LCD_SetPos@y
  1323  049F  300C               	movlw	12
  1324  04A0  158A  25FC  118A   	fcall	_LCD_SetPos
  1325                           
  1326                           ;main.c: 402: sendbytee((unsigned char)0b01000001 , 0);
  1327  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1328  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1329  04A5  01AB               	clrf	sendbytee@mode
  1330  04A6  3041               	movlw	65
  1331  04A7  158A  25E1  118A   	fcall	_sendbytee
  1332                           
  1333                           ;main.c: 403: _delay((unsigned long)((100)*(4000000/4000.0)));
  1334  04AA  3082               	movlw	130
  1335  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1336  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1337  04AD  00D7               	movwf	??_main+1
  1338  04AE  30DD               	movlw	221
  1339  04AF  00D6               	movwf	??_main
  1340  04B0                     u2797:	
  1341  04B0  0BD6               	decfsz	??_main,f
  1342  04B1  2CB0               	goto	u2797
  1343  04B2  0BD7               	decfsz	??_main+1,f
  1344  04B3  2CB0               	goto	u2797
  1345  04B4  0000               	nop
  1346  04B5  2ADB               	goto	l2442
  1347  04B6                     __end_of_main:	
  1348                           
  1349                           	psect	text1
  1350  04B6                     __ptext1:	
  1351 ;; *************** function _segchar *****************
  1352 ;; Defined at:
  1353 ;;		line 40 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  adc_data        2   15[BANK0 ] unsigned int 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1
  1367 ;;      Params:         0       2       0
  1368 ;;      Locals:         0       0       0
  1369 ;;      Temps:          0       1       0
  1370 ;;      Totals:         0       3       0
  1371 ;;Total ram usage:        3 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    3
  1374 ;; This function calls:
  1375 ;;		_LCD_SetPos
  1376 ;;		_sendbytee
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _segchar
  1384  04B6                     _segchar:	
  1385                           
  1386                           ;main.c: 42: switch (adc_data)
  1387                           
  1388                           ;incstack = 0
  1389                           ; Regs used in _segchar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1390  04B6  2FD2               	goto	l2144
  1391  04B7                     l1702:	
  1392                           ;main.c: 43: {
  1393                           ;main.c: 44: case 0:
  1394                           
  1395                           
  1396                           ;main.c: 46: for(y=0;y<15;y++)
  1397  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1398  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1399  04B9  01E4               	clrf	_y
  1400  04BA                     L1:	
  1401  04BA  300F               	movlw	15
  1402  04BB  0264               	subwf	_y,w
  1403  04BC  1803               	btfsc	3,0
  1404  04BD  0008               	return
  1405                           
  1406                           ;main.c: 47: {
  1407                           ;main.c: 48: LCD_SetPos(0+y,1);
  1408  04BE  01A4               	clrf	LCD_SetPos@y
  1409  04BF  0AA4               	incf	LCD_SetPos@y,f
  1410  04C0  0864               	movf	_y,w
  1411  04C1  158A  25FC  118A   	fcall	_LCD_SetPos
  1412                           
  1413                           ;main.c: 49: sendbytee(0b00100000,0);
  1414  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1415  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1416  04C6  01AB               	clrf	sendbytee@mode
  1417  04C7  3020               	movlw	32
  1418  04C8  158A  25E1  118A   	fcall	_sendbytee
  1419  04CB  3001               	movlw	1
  1420  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1421  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1422  04CE  00B1               	movwf	??_segchar
  1423  04CF  0831               	movf	??_segchar,w
  1424  04D0  07E4               	addwf	_y,f
  1425  04D1  2CBA               	goto	L1
  1426  04D2                     l1718:	
  1427                           ;main.c: 56: cas2:
  1428                           
  1429                           ;main.c: 55: case 2:
  1430                           
  1431                           ;main.c: 54: break;
  1432                           
  1433                           ;main.c: 53: goto cas2;
  1434                           
  1435                           ;main.c: 52: case 1:
  1436                           
  1437                           ;main.c: 50: }
  1438                           ;main.c: 51: break;
  1439                           
  1440                           
  1441                           ;main.c: 57: LCD_SetPos(0,1);
  1442  04D2  01A4               	clrf	LCD_SetPos@y
  1443  04D3  0AA4               	incf	LCD_SetPos@y,f
  1444  04D4  3000               	movlw	0
  1445  04D5  158A  25FC  118A   	fcall	_LCD_SetPos
  1446                           
  1447                           ;main.c: 58: sendbytee(0b11111111,0);
  1448  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1449  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1450  04DA  01AB               	clrf	sendbytee@mode
  1451  04DB  30FF               	movlw	255
  1452  04DC  158A  25E1  118A   	fcall	_sendbytee
  1453                           
  1454                           ;main.c: 59: for(y=0;y<15;y++)
  1455  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1456  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1457  04E1  01E4               	clrf	_y
  1458  04E2                     L2:	
  1459  04E2  300F               	movlw	15
  1460  04E3  0264               	subwf	_y,w
  1461  04E4  1803               	btfsc	3,0
  1462  04E5  0008               	return
  1463                           
  1464                           ;main.c: 60: {
  1465                           ;main.c: 61: LCD_SetPos(1+y,1);
  1466  04E6  01A4               	clrf	LCD_SetPos@y
  1467  04E7  0AA4               	incf	LCD_SetPos@y,f
  1468  04E8  0864               	movf	_y,w
  1469  04E9  3E01               	addlw	1
  1470  04EA  158A  25FC  118A   	fcall	_LCD_SetPos
  1471                           
  1472                           ;main.c: 62: sendbytee(0b00100000,0);
  1473  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1474  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1475  04EF  01AB               	clrf	sendbytee@mode
  1476  04F0  3020               	movlw	32
  1477  04F1  158A  25E1  118A   	fcall	_sendbytee
  1478  04F4  3001               	movlw	1
  1479  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  1480  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  1481  04F7  00B1               	movwf	??_segchar
  1482  04F8  0831               	movf	??_segchar,w
  1483  04F9  07E4               	addwf	_y,f
  1484  04FA  2CE2               	goto	L2
  1485  04FB                     l1738:	
  1486                           ;main.c: 69: cas4:
  1487                           
  1488                           ;main.c: 68: case 4:
  1489                           
  1490                           ;main.c: 67: break;
  1491                           
  1492                           ;main.c: 66: goto cas4;
  1493                           
  1494                           ;main.c: 65: case 3:
  1495                           
  1496                           ;main.c: 63: }
  1497                           ;main.c: 64: break;
  1498                           
  1499                           
  1500                           ;main.c: 70: for(t=0;t<2;t++)
  1501  04FB  01E3               	clrf	_t
  1502  04FC  3002               	movlw	2
  1503  04FD  0263               	subwf	_t,w
  1504  04FE  1803               	btfsc	3,0
  1505  04FF  2D17               	goto	l1752
  1506  0500                     l1744:	
  1507                           
  1508                           ;main.c: 71: {
  1509                           ;main.c: 72: LCD_SetPos(0+t,1);
  1510  0500  01A4               	clrf	LCD_SetPos@y
  1511  0501  0AA4               	incf	LCD_SetPos@y,f
  1512  0502  0863               	movf	_t,w
  1513  0503  158A  25FC  118A   	fcall	_LCD_SetPos
  1514                           
  1515                           ;main.c: 73: sendbytee(0b11111111,0);
  1516  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0508  01AB               	clrf	sendbytee@mode
  1519  0509  30FF               	movlw	255
  1520  050A  158A  25E1  118A   	fcall	_sendbytee
  1521  050D  3001               	movlw	1
  1522  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1523  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0510  00B1               	movwf	??_segchar
  1525  0511  0831               	movf	??_segchar,w
  1526  0512  07E3               	addwf	_t,f
  1527  0513  3002               	movlw	2
  1528  0514  0263               	subwf	_t,w
  1529  0515  1C03               	skipc
  1530  0516  2D00               	goto	l1744
  1531  0517                     l1752:	
  1532                           
  1533                           ;main.c: 74: }
  1534                           ;main.c: 75: for(y=0;y<15;y++)
  1535  0517  01E4               	clrf	_y
  1536  0518                     L3:	
  1537  0518  300F               	movlw	15
  1538  0519  0264               	subwf	_y,w
  1539  051A  1803               	btfsc	3,0
  1540  051B  0008               	return
  1541                           
  1542                           ;main.c: 76: {
  1543                           ;main.c: 77: LCD_SetPos(2+y,1);
  1544  051C  01A4               	clrf	LCD_SetPos@y
  1545  051D  0AA4               	incf	LCD_SetPos@y,f
  1546  051E  0864               	movf	_y,w
  1547  051F  3E02               	addlw	2
  1548  0520  158A  25FC  118A   	fcall	_LCD_SetPos
  1549                           
  1550                           ;main.c: 78: sendbytee(0b00100000,0);
  1551  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0524  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0525  01AB               	clrf	sendbytee@mode
  1554  0526  3020               	movlw	32
  1555  0527  158A  25E1  118A   	fcall	_sendbytee
  1556  052A  3001               	movlw	1
  1557  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1558  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1559  052D  00B1               	movwf	??_segchar
  1560  052E  0831               	movf	??_segchar,w
  1561  052F  07E4               	addwf	_y,f
  1562  0530  2D18               	goto	L3
  1563  0531                     l1768:	
  1564                           ;main.c: 85: cas6:
  1565                           
  1566                           ;main.c: 84: case 6:
  1567                           
  1568                           ;main.c: 83: break;
  1569                           
  1570                           ;main.c: 82: goto cas6;
  1571                           
  1572                           ;main.c: 81: case 5:
  1573                           
  1574                           ;main.c: 79: }
  1575                           ;main.c: 80: break;
  1576                           
  1577                           
  1578                           ;main.c: 86: for(t=0;t<3;t++)
  1579  0531  01E3               	clrf	_t
  1580  0532  3003               	movlw	3
  1581  0533  0263               	subwf	_t,w
  1582  0534  1803               	btfsc	3,0
  1583  0535  2D4D               	goto	l1782
  1584  0536                     l1774:	
  1585                           
  1586                           ;main.c: 87: {
  1587                           ;main.c: 88: LCD_SetPos(0+t,1);
  1588  0536  01A4               	clrf	LCD_SetPos@y
  1589  0537  0AA4               	incf	LCD_SetPos@y,f
  1590  0538  0863               	movf	_t,w
  1591  0539  158A  25FC  118A   	fcall	_LCD_SetPos
  1592                           
  1593                           ;main.c: 89: sendbytee(0b11111111,0);
  1594  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1595  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1596  053E  01AB               	clrf	sendbytee@mode
  1597  053F  30FF               	movlw	255
  1598  0540  158A  25E1  118A   	fcall	_sendbytee
  1599  0543  3001               	movlw	1
  1600  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0546  00B1               	movwf	??_segchar
  1603  0547  0831               	movf	??_segchar,w
  1604  0548  07E3               	addwf	_t,f
  1605  0549  3003               	movlw	3
  1606  054A  0263               	subwf	_t,w
  1607  054B  1C03               	skipc
  1608  054C  2D36               	goto	l1774
  1609  054D                     l1782:	
  1610                           
  1611                           ;main.c: 90: }
  1612                           ;main.c: 91: for(y=0;y<15;y++)
  1613  054D  01E4               	clrf	_y
  1614  054E                     L4:	
  1615  054E  300F               	movlw	15
  1616  054F  0264               	subwf	_y,w
  1617  0550  1803               	btfsc	3,0
  1618  0551  0008               	return
  1619                           
  1620                           ;main.c: 92: {
  1621                           ;main.c: 93: LCD_SetPos(3+y,1);
  1622  0552  01A4               	clrf	LCD_SetPos@y
  1623  0553  0AA4               	incf	LCD_SetPos@y,f
  1624  0554  0864               	movf	_y,w
  1625  0555  3E03               	addlw	3
  1626  0556  158A  25FC  118A   	fcall	_LCD_SetPos
  1627                           
  1628                           ;main.c: 94: sendbytee(0b00100000,0);
  1629  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1630  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1631  055B  01AB               	clrf	sendbytee@mode
  1632  055C  3020               	movlw	32
  1633  055D  158A  25E1  118A   	fcall	_sendbytee
  1634  0560  3001               	movlw	1
  1635  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0563  00B1               	movwf	??_segchar
  1638  0564  0831               	movf	??_segchar,w
  1639  0565  07E4               	addwf	_y,f
  1640  0566  2D4E               	goto	L4
  1641  0567                     l1798:	
  1642                           ;main.c: 101: cas8:
  1643                           
  1644                           ;main.c: 100: case 8:
  1645                           
  1646                           ;main.c: 99: break;
  1647                           
  1648                           ;main.c: 98: goto cas8;
  1649                           
  1650                           ;main.c: 97: case 7:
  1651                           
  1652                           ;main.c: 95: }
  1653                           ;main.c: 96: break;
  1654                           
  1655                           
  1656                           ;main.c: 102: for(t=0;t<4;t++)
  1657  0567  01E3               	clrf	_t
  1658  0568  3004               	movlw	4
  1659  0569  0263               	subwf	_t,w
  1660  056A  1803               	btfsc	3,0
  1661  056B  2D83               	goto	l1812
  1662  056C                     l1804:	
  1663                           
  1664                           ;main.c: 103: {
  1665                           ;main.c: 104: LCD_SetPos(0+t,1);
  1666  056C  01A4               	clrf	LCD_SetPos@y
  1667  056D  0AA4               	incf	LCD_SetPos@y,f
  1668  056E  0863               	movf	_t,w
  1669  056F  158A  25FC  118A   	fcall	_LCD_SetPos
  1670                           
  1671                           ;main.c: 105: sendbytee(0b11111111,0);
  1672  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0574  01AB               	clrf	sendbytee@mode
  1675  0575  30FF               	movlw	255
  1676  0576  158A  25E1  118A   	fcall	_sendbytee
  1677  0579  3001               	movlw	1
  1678  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1679  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1680  057C  00B1               	movwf	??_segchar
  1681  057D  0831               	movf	??_segchar,w
  1682  057E  07E3               	addwf	_t,f
  1683  057F  3004               	movlw	4
  1684  0580  0263               	subwf	_t,w
  1685  0581  1C03               	skipc
  1686  0582  2D6C               	goto	l1804
  1687  0583                     l1812:	
  1688                           
  1689                           ;main.c: 106: }
  1690                           ;main.c: 107: for(y=0;y<15;y++)
  1691  0583  01E4               	clrf	_y
  1692  0584                     L5:	
  1693  0584  300F               	movlw	15
  1694  0585  0264               	subwf	_y,w
  1695  0586  1803               	btfsc	3,0
  1696  0587  0008               	return
  1697                           
  1698                           ;main.c: 108: {
  1699                           ;main.c: 109: LCD_SetPos(4+y,1);
  1700  0588  01A4               	clrf	LCD_SetPos@y
  1701  0589  0AA4               	incf	LCD_SetPos@y,f
  1702  058A  0864               	movf	_y,w
  1703  058B  3E04               	addlw	4
  1704  058C  158A  25FC  118A   	fcall	_LCD_SetPos
  1705                           
  1706                           ;main.c: 110: sendbytee(0b00100000,0);
  1707  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0591  01AB               	clrf	sendbytee@mode
  1710  0592  3020               	movlw	32
  1711  0593  158A  25E1  118A   	fcall	_sendbytee
  1712  0596  3001               	movlw	1
  1713  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0599  00B1               	movwf	??_segchar
  1716  059A  0831               	movf	??_segchar,w
  1717  059B  07E4               	addwf	_y,f
  1718  059C  2D84               	goto	L5
  1719  059D                     l1828:	
  1720                           ;main.c: 117: cas10:
  1721                           
  1722                           ;main.c: 116: case 10:
  1723                           
  1724                           ;main.c: 115: break;
  1725                           
  1726                           ;main.c: 114: goto cas10;
  1727                           
  1728                           ;main.c: 113: case 9:
  1729                           
  1730                           ;main.c: 111: }
  1731                           ;main.c: 112: break;
  1732                           
  1733                           
  1734                           ;main.c: 118: for(t=0;t<5;t++)
  1735  059D  01E3               	clrf	_t
  1736  059E  3005               	movlw	5
  1737  059F  0263               	subwf	_t,w
  1738  05A0  1803               	btfsc	3,0
  1739  05A1  2DB9               	goto	l1842
  1740  05A2                     l1834:	
  1741                           
  1742                           ;main.c: 119: {
  1743                           ;main.c: 120: LCD_SetPos(0+t,1);
  1744  05A2  01A4               	clrf	LCD_SetPos@y
  1745  05A3  0AA4               	incf	LCD_SetPos@y,f
  1746  05A4  0863               	movf	_t,w
  1747  05A5  158A  25FC  118A   	fcall	_LCD_SetPos
  1748                           
  1749                           ;main.c: 121: sendbytee(0b11111111,0);
  1750  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1751  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1752  05AA  01AB               	clrf	sendbytee@mode
  1753  05AB  30FF               	movlw	255
  1754  05AC  158A  25E1  118A   	fcall	_sendbytee
  1755  05AF  3001               	movlw	1
  1756  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1757  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1758  05B2  00B1               	movwf	??_segchar
  1759  05B3  0831               	movf	??_segchar,w
  1760  05B4  07E3               	addwf	_t,f
  1761  05B5  3005               	movlw	5
  1762  05B6  0263               	subwf	_t,w
  1763  05B7  1C03               	skipc
  1764  05B8  2DA2               	goto	l1834
  1765  05B9                     l1842:	
  1766                           
  1767                           ;main.c: 122: }
  1768                           ;main.c: 123: for(y=0;y<15;y++)
  1769  05B9  01E4               	clrf	_y
  1770  05BA                     L6:	
  1771  05BA  300F               	movlw	15
  1772  05BB  0264               	subwf	_y,w
  1773  05BC  1803               	btfsc	3,0
  1774  05BD  0008               	return
  1775                           
  1776                           ;main.c: 124: {
  1777                           ;main.c: 125: LCD_SetPos(5+y,1);
  1778  05BE  01A4               	clrf	LCD_SetPos@y
  1779  05BF  0AA4               	incf	LCD_SetPos@y,f
  1780  05C0  0864               	movf	_y,w
  1781  05C1  3E05               	addlw	5
  1782  05C2  158A  25FC  118A   	fcall	_LCD_SetPos
  1783                           
  1784                           ;main.c: 126: sendbytee(0b00100000,0);
  1785  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1786  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1787  05C7  01AB               	clrf	sendbytee@mode
  1788  05C8  3020               	movlw	32
  1789  05C9  158A  25E1  118A   	fcall	_sendbytee
  1790  05CC  3001               	movlw	1
  1791  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1792  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1793  05CF  00B1               	movwf	??_segchar
  1794  05D0  0831               	movf	??_segchar,w
  1795  05D1  07E4               	addwf	_y,f
  1796  05D2  2DBA               	goto	L6
  1797  05D3                     l1858:	
  1798                           ;main.c: 133: cas12:
  1799                           
  1800                           ;main.c: 132: case 12:
  1801                           
  1802                           ;main.c: 131: break;
  1803                           
  1804                           ;main.c: 130: goto cas12;
  1805                           
  1806                           ;main.c: 129: case 11:
  1807                           
  1808                           ;main.c: 127: }
  1809                           ;main.c: 128: break;
  1810                           
  1811                           
  1812                           ;main.c: 134: for(t=0;t<6;t++)
  1813  05D3  01E3               	clrf	_t
  1814  05D4  3006               	movlw	6
  1815  05D5  0263               	subwf	_t,w
  1816  05D6  1803               	btfsc	3,0
  1817  05D7  2DEF               	goto	l1872
  1818  05D8                     l1864:	
  1819                           
  1820                           ;main.c: 135: {
  1821                           ;main.c: 136: LCD_SetPos(0+t,1);
  1822  05D8  01A4               	clrf	LCD_SetPos@y
  1823  05D9  0AA4               	incf	LCD_SetPos@y,f
  1824  05DA  0863               	movf	_t,w
  1825  05DB  158A  25FC  118A   	fcall	_LCD_SetPos
  1826                           
  1827                           ;main.c: 137: sendbytee(0b11111111,0);
  1828  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1829  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1830  05E0  01AB               	clrf	sendbytee@mode
  1831  05E1  30FF               	movlw	255
  1832  05E2  158A  25E1  118A   	fcall	_sendbytee
  1833  05E5  3001               	movlw	1
  1834  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1835  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1836  05E8  00B1               	movwf	??_segchar
  1837  05E9  0831               	movf	??_segchar,w
  1838  05EA  07E3               	addwf	_t,f
  1839  05EB  3006               	movlw	6
  1840  05EC  0263               	subwf	_t,w
  1841  05ED  1C03               	skipc
  1842  05EE  2DD8               	goto	l1864
  1843  05EF                     l1872:	
  1844                           
  1845                           ;main.c: 138: }
  1846                           ;main.c: 139: for(y=0;y<15;y++)
  1847  05EF  01E4               	clrf	_y
  1848  05F0                     L7:	
  1849  05F0  300F               	movlw	15
  1850  05F1  0264               	subwf	_y,w
  1851  05F2  1803               	btfsc	3,0
  1852  05F3  0008               	return
  1853                           
  1854                           ;main.c: 140: {
  1855                           ;main.c: 141: LCD_SetPos(6+y,1);
  1856  05F4  01A4               	clrf	LCD_SetPos@y
  1857  05F5  0AA4               	incf	LCD_SetPos@y,f
  1858  05F6  0864               	movf	_y,w
  1859  05F7  3E06               	addlw	6
  1860  05F8  158A  25FC  118A   	fcall	_LCD_SetPos
  1861                           
  1862                           ;main.c: 142: sendbytee(0b00100000,0);
  1863  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1864  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1865  05FD  01AB               	clrf	sendbytee@mode
  1866  05FE  3020               	movlw	32
  1867  05FF  158A  25E1  118A   	fcall	_sendbytee
  1868  0602  3001               	movlw	1
  1869  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0605  00B1               	movwf	??_segchar
  1872  0606  0831               	movf	??_segchar,w
  1873  0607  07E4               	addwf	_y,f
  1874  0608  2DF0               	goto	L7
  1875  0609                     l1888:	
  1876                           ;main.c: 149: cas14:
  1877                           
  1878                           ;main.c: 148: case 14:
  1879                           
  1880                           ;main.c: 147: break;
  1881                           
  1882                           ;main.c: 146: goto cas14;
  1883                           
  1884                           ;main.c: 145: case 13:
  1885                           
  1886                           ;main.c: 143: }
  1887                           ;main.c: 144: break;
  1888                           
  1889                           
  1890                           ;main.c: 150: for(t=0;t<7;t++)
  1891  0609  01E3               	clrf	_t
  1892  060A  3007               	movlw	7
  1893  060B  0263               	subwf	_t,w
  1894  060C  1803               	btfsc	3,0
  1895  060D  2E25               	goto	l1902
  1896  060E                     l1894:	
  1897                           
  1898                           ;main.c: 151: {
  1899                           ;main.c: 152: LCD_SetPos(0+t,1);
  1900  060E  01A4               	clrf	LCD_SetPos@y
  1901  060F  0AA4               	incf	LCD_SetPos@y,f
  1902  0610  0863               	movf	_t,w
  1903  0611  158A  25FC  118A   	fcall	_LCD_SetPos
  1904                           
  1905                           ;main.c: 153: sendbytee(0b11111111,0);
  1906  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0616  01AB               	clrf	sendbytee@mode
  1909  0617  30FF               	movlw	255
  1910  0618  158A  25E1  118A   	fcall	_sendbytee
  1911  061B  3001               	movlw	1
  1912  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1913  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1914  061E  00B1               	movwf	??_segchar
  1915  061F  0831               	movf	??_segchar,w
  1916  0620  07E3               	addwf	_t,f
  1917  0621  3007               	movlw	7
  1918  0622  0263               	subwf	_t,w
  1919  0623  1C03               	skipc
  1920  0624  2E0E               	goto	l1894
  1921  0625                     l1902:	
  1922                           
  1923                           ;main.c: 154: }
  1924                           ;main.c: 155: for(y=0;y<15;y++)
  1925  0625  01E4               	clrf	_y
  1926  0626                     L8:	
  1927  0626  300F               	movlw	15
  1928  0627  0264               	subwf	_y,w
  1929  0628  1803               	btfsc	3,0
  1930  0629  0008               	return
  1931                           
  1932                           ;main.c: 156: {
  1933                           ;main.c: 157: LCD_SetPos(7+y,1);
  1934  062A  01A4               	clrf	LCD_SetPos@y
  1935  062B  0AA4               	incf	LCD_SetPos@y,f
  1936  062C  0864               	movf	_y,w
  1937  062D  3E07               	addlw	7
  1938  062E  158A  25FC  118A   	fcall	_LCD_SetPos
  1939                           
  1940                           ;main.c: 158: sendbytee(0b00100000,0);
  1941  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0633  01AB               	clrf	sendbytee@mode
  1944  0634  3020               	movlw	32
  1945  0635  158A  25E1  118A   	fcall	_sendbytee
  1946  0638  3001               	movlw	1
  1947  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1948  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1949  063B  00B1               	movwf	??_segchar
  1950  063C  0831               	movf	??_segchar,w
  1951  063D  07E4               	addwf	_y,f
  1952  063E  2E26               	goto	L8
  1953  063F                     l1918:	
  1954                           ;main.c: 165: cas16:
  1955                           
  1956                           ;main.c: 164: case 16:
  1957                           
  1958                           ;main.c: 163: break;
  1959                           
  1960                           ;main.c: 162: goto cas16;
  1961                           
  1962                           ;main.c: 161: case 15:
  1963                           
  1964                           ;main.c: 159: }
  1965                           ;main.c: 160: break;
  1966                           
  1967                           
  1968                           ;main.c: 166: for(t=0;t<8;t++)
  1969  063F  01E3               	clrf	_t
  1970  0640  3008               	movlw	8
  1971  0641  0263               	subwf	_t,w
  1972  0642  1803               	btfsc	3,0
  1973  0643  2E5B               	goto	l1932
  1974  0644                     l1924:	
  1975                           
  1976                           ;main.c: 167: {
  1977                           ;main.c: 168: LCD_SetPos(0+t,1);
  1978  0644  01A4               	clrf	LCD_SetPos@y
  1979  0645  0AA4               	incf	LCD_SetPos@y,f
  1980  0646  0863               	movf	_t,w
  1981  0647  158A  25FC  118A   	fcall	_LCD_SetPos
  1982                           
  1983                           ;main.c: 169: sendbytee(0b11111111,0);
  1984  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1985  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1986  064C  01AB               	clrf	sendbytee@mode
  1987  064D  30FF               	movlw	255
  1988  064E  158A  25E1  118A   	fcall	_sendbytee
  1989  0651  3001               	movlw	1
  1990  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0654  00B1               	movwf	??_segchar
  1993  0655  0831               	movf	??_segchar,w
  1994  0656  07E3               	addwf	_t,f
  1995  0657  3008               	movlw	8
  1996  0658  0263               	subwf	_t,w
  1997  0659  1C03               	skipc
  1998  065A  2E44               	goto	l1924
  1999  065B                     l1932:	
  2000                           
  2001                           ;main.c: 170: }
  2002                           ;main.c: 171: for(y=0;y<15;y++)
  2003  065B  01E4               	clrf	_y
  2004  065C                     L9:	
  2005  065C  300F               	movlw	15
  2006  065D  0264               	subwf	_y,w
  2007  065E  1803               	btfsc	3,0
  2008  065F  0008               	return
  2009                           
  2010                           ;main.c: 172: {
  2011                           ;main.c: 173: LCD_SetPos(8+y,1);
  2012  0660  01A4               	clrf	LCD_SetPos@y
  2013  0661  0AA4               	incf	LCD_SetPos@y,f
  2014  0662  0864               	movf	_y,w
  2015  0663  3E08               	addlw	8
  2016  0664  158A  25FC  118A   	fcall	_LCD_SetPos
  2017                           
  2018                           ;main.c: 174: sendbytee(0b00100000,0);
  2019  0667  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0668  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0669  01AB               	clrf	sendbytee@mode
  2022  066A  3020               	movlw	32
  2023  066B  158A  25E1  118A   	fcall	_sendbytee
  2024  066E  3001               	movlw	1
  2025  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0671  00B1               	movwf	??_segchar
  2028  0672  0831               	movf	??_segchar,w
  2029  0673  07E4               	addwf	_y,f
  2030  0674  2E5C               	goto	L9
  2031  0675                     l1948:	
  2032                           ;main.c: 181: cas18:
  2033                           
  2034                           ;main.c: 180: case 18:
  2035                           
  2036                           ;main.c: 179: break;
  2037                           
  2038                           ;main.c: 178: goto cas18;
  2039                           
  2040                           ;main.c: 177: case 17:
  2041                           
  2042                           ;main.c: 175: }
  2043                           ;main.c: 176: break;
  2044                           
  2045                           
  2046                           ;main.c: 182: for(t=0;t<9;t++)
  2047  0675  01E3               	clrf	_t
  2048  0676  3009               	movlw	9
  2049  0677  0263               	subwf	_t,w
  2050  0678  1803               	btfsc	3,0
  2051  0679  2E91               	goto	l1962
  2052  067A                     l1954:	
  2053                           
  2054                           ;main.c: 183: {
  2055                           ;main.c: 184: LCD_SetPos(0+t,1);
  2056  067A  01A4               	clrf	LCD_SetPos@y
  2057  067B  0AA4               	incf	LCD_SetPos@y,f
  2058  067C  0863               	movf	_t,w
  2059  067D  158A  25FC  118A   	fcall	_LCD_SetPos
  2060                           
  2061                           ;main.c: 185: sendbytee(0b11111111,0);
  2062  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0682  01AB               	clrf	sendbytee@mode
  2065  0683  30FF               	movlw	255
  2066  0684  158A  25E1  118A   	fcall	_sendbytee
  2067  0687  3001               	movlw	1
  2068  0688  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0689  1303               	bcf	3,6	;RP1=0, select bank0
  2070  068A  00B1               	movwf	??_segchar
  2071  068B  0831               	movf	??_segchar,w
  2072  068C  07E3               	addwf	_t,f
  2073  068D  3009               	movlw	9
  2074  068E  0263               	subwf	_t,w
  2075  068F  1C03               	skipc
  2076  0690  2E7A               	goto	l1954
  2077  0691                     l1962:	
  2078                           
  2079                           ;main.c: 186: }
  2080                           ;main.c: 187: for(y=0;y<15;y++)
  2081  0691  01E4               	clrf	_y
  2082  0692                     L10:	
  2083  0692  300F               	movlw	15
  2084  0693  0264               	subwf	_y,w
  2085  0694  1803               	btfsc	3,0
  2086  0695  0008               	return
  2087                           
  2088                           ;main.c: 188: {
  2089                           ;main.c: 189: LCD_SetPos(9+y,1);
  2090  0696  01A4               	clrf	LCD_SetPos@y
  2091  0697  0AA4               	incf	LCD_SetPos@y,f
  2092  0698  0864               	movf	_y,w
  2093  0699  3E09               	addlw	9
  2094  069A  158A  25FC  118A   	fcall	_LCD_SetPos
  2095                           
  2096                           ;main.c: 190: sendbytee(0b00100000,0);
  2097  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2098  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2099  069F  01AB               	clrf	sendbytee@mode
  2100  06A0  3020               	movlw	32
  2101  06A1  158A  25E1  118A   	fcall	_sendbytee
  2102  06A4  3001               	movlw	1
  2103  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2104  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2105  06A7  00B1               	movwf	??_segchar
  2106  06A8  0831               	movf	??_segchar,w
  2107  06A9  07E4               	addwf	_y,f
  2108  06AA  2E92               	goto	L10
  2109  06AB                     l1978:	
  2110                           ;main.c: 197: cas20:
  2111                           
  2112                           ;main.c: 196: case 20:
  2113                           
  2114                           ;main.c: 195: break;
  2115                           
  2116                           ;main.c: 194: goto cas20;
  2117                           
  2118                           ;main.c: 193: case 19:
  2119                           
  2120                           ;main.c: 191: }
  2121                           ;main.c: 192: break;
  2122                           
  2123                           
  2124                           ;main.c: 198: for(t=0;t<10;t++)
  2125  06AB  01E3               	clrf	_t
  2126  06AC  300A               	movlw	10
  2127  06AD  0263               	subwf	_t,w
  2128  06AE  1803               	btfsc	3,0
  2129  06AF  2EC7               	goto	l1992
  2130  06B0                     l1984:	
  2131                           
  2132                           ;main.c: 199: {
  2133                           ;main.c: 200: LCD_SetPos(0+t,1);
  2134  06B0  01A4               	clrf	LCD_SetPos@y
  2135  06B1  0AA4               	incf	LCD_SetPos@y,f
  2136  06B2  0863               	movf	_t,w
  2137  06B3  158A  25FC  118A   	fcall	_LCD_SetPos
  2138                           
  2139                           ;main.c: 201: sendbytee(0b11111111,0);
  2140  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2141  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2142  06B8  01AB               	clrf	sendbytee@mode
  2143  06B9  30FF               	movlw	255
  2144  06BA  158A  25E1  118A   	fcall	_sendbytee
  2145  06BD  3001               	movlw	1
  2146  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2147  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2148  06C0  00B1               	movwf	??_segchar
  2149  06C1  0831               	movf	??_segchar,w
  2150  06C2  07E3               	addwf	_t,f
  2151  06C3  300A               	movlw	10
  2152  06C4  0263               	subwf	_t,w
  2153  06C5  1C03               	skipc
  2154  06C6  2EB0               	goto	l1984
  2155  06C7                     l1992:	
  2156                           
  2157                           ;main.c: 202: }
  2158                           ;main.c: 203: for(y=0;y<15;y++)
  2159  06C7  01E4               	clrf	_y
  2160  06C8                     L11:	
  2161  06C8  300F               	movlw	15
  2162  06C9  0264               	subwf	_y,w
  2163  06CA  1803               	btfsc	3,0
  2164  06CB  0008               	return
  2165                           
  2166                           ;main.c: 204: {
  2167                           ;main.c: 205: LCD_SetPos(10+y,1);
  2168  06CC  01A4               	clrf	LCD_SetPos@y
  2169  06CD  0AA4               	incf	LCD_SetPos@y,f
  2170  06CE  0864               	movf	_y,w
  2171  06CF  3E0A               	addlw	10
  2172  06D0  158A  25FC  118A   	fcall	_LCD_SetPos
  2173                           
  2174                           ;main.c: 206: sendbytee(0b00100000,0);
  2175  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2176  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2177  06D5  01AB               	clrf	sendbytee@mode
  2178  06D6  3020               	movlw	32
  2179  06D7  158A  25E1  118A   	fcall	_sendbytee
  2180  06DA  3001               	movlw	1
  2181  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  2182  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  2183  06DD  00B1               	movwf	??_segchar
  2184  06DE  0831               	movf	??_segchar,w
  2185  06DF  07E4               	addwf	_y,f
  2186  06E0  2EC8               	goto	L11
  2187  06E1                     l2008:	
  2188                           ;main.c: 213: cas22:
  2189                           
  2190                           ;main.c: 212: case 22:
  2191                           
  2192                           ;main.c: 211: break;
  2193                           
  2194                           ;main.c: 210: goto cas22;
  2195                           
  2196                           ;main.c: 209: case 21:
  2197                           
  2198                           ;main.c: 207: }
  2199                           ;main.c: 208: break;
  2200                           
  2201                           
  2202                           ;main.c: 214: for(t=0;t<11;t++)
  2203  06E1  01E3               	clrf	_t
  2204  06E2  300B               	movlw	11
  2205  06E3  0263               	subwf	_t,w
  2206  06E4  1803               	btfsc	3,0
  2207  06E5  2EFD               	goto	l2022
  2208  06E6                     l2014:	
  2209                           
  2210                           ;main.c: 215: {
  2211                           ;main.c: 216: LCD_SetPos(0+t,1);
  2212  06E6  01A4               	clrf	LCD_SetPos@y
  2213  06E7  0AA4               	incf	LCD_SetPos@y,f
  2214  06E8  0863               	movf	_t,w
  2215  06E9  158A  25FC  118A   	fcall	_LCD_SetPos
  2216                           
  2217                           ;main.c: 217: sendbytee(0b11111111,0);
  2218  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2219  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2220  06EE  01AB               	clrf	sendbytee@mode
  2221  06EF  30FF               	movlw	255
  2222  06F0  158A  25E1  118A   	fcall	_sendbytee
  2223  06F3  3001               	movlw	1
  2224  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2225  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2226  06F6  00B1               	movwf	??_segchar
  2227  06F7  0831               	movf	??_segchar,w
  2228  06F8  07E3               	addwf	_t,f
  2229  06F9  300B               	movlw	11
  2230  06FA  0263               	subwf	_t,w
  2231  06FB  1C03               	skipc
  2232  06FC  2EE6               	goto	l2014
  2233  06FD                     l2022:	
  2234                           
  2235                           ;main.c: 218: }
  2236                           ;main.c: 219: for(y=0;y<15;y++)
  2237  06FD  01E4               	clrf	_y
  2238  06FE                     L12:	
  2239  06FE  300F               	movlw	15
  2240  06FF  0264               	subwf	_y,w
  2241  0700  1803               	btfsc	3,0
  2242  0701  0008               	return
  2243                           
  2244                           ;main.c: 220: {
  2245                           ;main.c: 221: LCD_SetPos(11+y,1);
  2246  0702  01A4               	clrf	LCD_SetPos@y
  2247  0703  0AA4               	incf	LCD_SetPos@y,f
  2248  0704  0864               	movf	_y,w
  2249  0705  3E0B               	addlw	11
  2250  0706  158A  25FC  118A   	fcall	_LCD_SetPos
  2251                           
  2252                           ;main.c: 222: sendbytee(0b00100000,0);
  2253  0709  1283               	bcf	3,5	;RP0=0, select bank0
  2254  070A  1303               	bcf	3,6	;RP1=0, select bank0
  2255  070B  01AB               	clrf	sendbytee@mode
  2256  070C  3020               	movlw	32
  2257  070D  158A  25E1  118A   	fcall	_sendbytee
  2258  0710  3001               	movlw	1
  2259  0711  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0712  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0713  00B1               	movwf	??_segchar
  2262  0714  0831               	movf	??_segchar,w
  2263  0715  07E4               	addwf	_y,f
  2264  0716  2EFE               	goto	L12
  2265  0717                     l2038:	
  2266                           ;main.c: 229: cas24:
  2267                           
  2268                           ;main.c: 228: case 24:
  2269                           
  2270                           ;main.c: 227: break;
  2271                           
  2272                           ;main.c: 226: goto cas24;
  2273                           
  2274                           ;main.c: 225: case 23:
  2275                           
  2276                           ;main.c: 223: }
  2277                           ;main.c: 224: break;
  2278                           
  2279                           
  2280                           ;main.c: 230: for(t=0;t<12;t++)
  2281  0717  01E3               	clrf	_t
  2282  0718  300C               	movlw	12
  2283  0719  0263               	subwf	_t,w
  2284  071A  1803               	btfsc	3,0
  2285  071B  2F33               	goto	l2052
  2286  071C                     l2044:	
  2287                           
  2288                           ;main.c: 231: {
  2289                           ;main.c: 232: LCD_SetPos(0+t,1);
  2290  071C  01A4               	clrf	LCD_SetPos@y
  2291  071D  0AA4               	incf	LCD_SetPos@y,f
  2292  071E  0863               	movf	_t,w
  2293  071F  158A  25FC  118A   	fcall	_LCD_SetPos
  2294                           
  2295                           ;main.c: 233: sendbytee(0b11111111,0);
  2296  0722  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0723  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0724  01AB               	clrf	sendbytee@mode
  2299  0725  30FF               	movlw	255
  2300  0726  158A  25E1  118A   	fcall	_sendbytee
  2301  0729  3001               	movlw	1
  2302  072A  1283               	bcf	3,5	;RP0=0, select bank0
  2303  072B  1303               	bcf	3,6	;RP1=0, select bank0
  2304  072C  00B1               	movwf	??_segchar
  2305  072D  0831               	movf	??_segchar,w
  2306  072E  07E3               	addwf	_t,f
  2307  072F  300C               	movlw	12
  2308  0730  0263               	subwf	_t,w
  2309  0731  1C03               	skipc
  2310  0732  2F1C               	goto	l2044
  2311  0733                     l2052:	
  2312                           
  2313                           ;main.c: 234: }
  2314                           ;main.c: 235: for(y=0;y<15;y++)
  2315  0733  01E4               	clrf	_y
  2316  0734                     L13:	
  2317  0734  300F               	movlw	15
  2318  0735  0264               	subwf	_y,w
  2319  0736  1803               	btfsc	3,0
  2320  0737  0008               	return
  2321                           
  2322                           ;main.c: 236: {
  2323                           ;main.c: 237: LCD_SetPos(12+y,1);
  2324  0738  01A4               	clrf	LCD_SetPos@y
  2325  0739  0AA4               	incf	LCD_SetPos@y,f
  2326  073A  0864               	movf	_y,w
  2327  073B  3E0C               	addlw	12
  2328  073C  158A  25FC  118A   	fcall	_LCD_SetPos
  2329                           
  2330                           ;main.c: 238: sendbytee(0b00100000,0);
  2331  073F  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0740  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0741  01AB               	clrf	sendbytee@mode
  2334  0742  3020               	movlw	32
  2335  0743  158A  25E1  118A   	fcall	_sendbytee
  2336  0746  3001               	movlw	1
  2337  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0749  00B1               	movwf	??_segchar
  2340  074A  0831               	movf	??_segchar,w
  2341  074B  07E4               	addwf	_y,f
  2342  074C  2F34               	goto	L13
  2343  074D                     l2068:	
  2344                           ;main.c: 245: cas26:
  2345                           
  2346                           ;main.c: 244: case 26:
  2347                           
  2348                           ;main.c: 243: break;
  2349                           
  2350                           ;main.c: 242: goto cas26;
  2351                           
  2352                           ;main.c: 241: case 25:
  2353                           
  2354                           ;main.c: 239: }
  2355                           ;main.c: 240: break;
  2356                           
  2357                           
  2358                           ;main.c: 246: for(t=0;t<13;t++)
  2359  074D  01E3               	clrf	_t
  2360  074E  300D               	movlw	13
  2361  074F  0263               	subwf	_t,w
  2362  0750  1803               	btfsc	3,0
  2363  0751  2F69               	goto	l2082
  2364  0752                     l2074:	
  2365                           
  2366                           ;main.c: 247: {
  2367                           ;main.c: 248: LCD_SetPos(0+t,1);
  2368  0752  01A4               	clrf	LCD_SetPos@y
  2369  0753  0AA4               	incf	LCD_SetPos@y,f
  2370  0754  0863               	movf	_t,w
  2371  0755  158A  25FC  118A   	fcall	_LCD_SetPos
  2372                           
  2373                           ;main.c: 249: sendbytee(0b11111111,0);
  2374  0758  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0759  1303               	bcf	3,6	;RP1=0, select bank0
  2376  075A  01AB               	clrf	sendbytee@mode
  2377  075B  30FF               	movlw	255
  2378  075C  158A  25E1  118A   	fcall	_sendbytee
  2379  075F  3001               	movlw	1
  2380  0760  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0761  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0762  00B1               	movwf	??_segchar
  2383  0763  0831               	movf	??_segchar,w
  2384  0764  07E3               	addwf	_t,f
  2385  0765  300D               	movlw	13
  2386  0766  0263               	subwf	_t,w
  2387  0767  1C03               	skipc
  2388  0768  2F52               	goto	l2074
  2389  0769                     l2082:	
  2390                           
  2391                           ;main.c: 250: }
  2392                           ;main.c: 251: for(y=0;y<15;y++)
  2393  0769  01E4               	clrf	_y
  2394  076A                     L14:	
  2395  076A  300F               	movlw	15
  2396  076B  0264               	subwf	_y,w
  2397  076C  1803               	btfsc	3,0
  2398  076D  0008               	return
  2399                           
  2400                           ;main.c: 252: {
  2401                           ;main.c: 253: LCD_SetPos(13+y,1);
  2402  076E  01A4               	clrf	LCD_SetPos@y
  2403  076F  0AA4               	incf	LCD_SetPos@y,f
  2404  0770  0864               	movf	_y,w
  2405  0771  3E0D               	addlw	13
  2406  0772  158A  25FC  118A   	fcall	_LCD_SetPos
  2407                           
  2408                           ;main.c: 254: sendbytee(0b00100000,0);
  2409  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0776  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0777  01AB               	clrf	sendbytee@mode
  2412  0778  3020               	movlw	32
  2413  0779  158A  25E1  118A   	fcall	_sendbytee
  2414  077C  3001               	movlw	1
  2415  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2416  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2417  077F  00B1               	movwf	??_segchar
  2418  0780  0831               	movf	??_segchar,w
  2419  0781  07E4               	addwf	_y,f
  2420  0782  2F6A               	goto	L14
  2421  0783                     l2098:	
  2422                           ;main.c: 261: cas28:
  2423                           
  2424                           ;main.c: 260: case 28:
  2425                           
  2426                           ;main.c: 259: break;
  2427                           
  2428                           ;main.c: 258: goto cas28;
  2429                           
  2430                           ;main.c: 257: case 27:
  2431                           
  2432                           ;main.c: 255: }
  2433                           ;main.c: 256: break;
  2434                           
  2435                           
  2436                           ;main.c: 262: for(t=0;t<14;t++)
  2437  0783  01E3               	clrf	_t
  2438  0784  300E               	movlw	14
  2439  0785  0263               	subwf	_t,w
  2440  0786  1803               	btfsc	3,0
  2441  0787  2F9F               	goto	l2112
  2442  0788                     l2104:	
  2443                           
  2444                           ;main.c: 263: {
  2445                           ;main.c: 264: LCD_SetPos(0+t,1);
  2446  0788  01A4               	clrf	LCD_SetPos@y
  2447  0789  0AA4               	incf	LCD_SetPos@y,f
  2448  078A  0863               	movf	_t,w
  2449  078B  158A  25FC  118A   	fcall	_LCD_SetPos
  2450                           
  2451                           ;main.c: 265: sendbytee(0b11111111,0);
  2452  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2453  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0790  01AB               	clrf	sendbytee@mode
  2455  0791  30FF               	movlw	255
  2456  0792  158A  25E1  118A   	fcall	_sendbytee
  2457  0795  3001               	movlw	1
  2458  0796  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0797  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0798  00B1               	movwf	??_segchar
  2461  0799  0831               	movf	??_segchar,w
  2462  079A  07E3               	addwf	_t,f
  2463  079B  300E               	movlw	14
  2464  079C  0263               	subwf	_t,w
  2465  079D  1C03               	skipc
  2466  079E  2F88               	goto	l2104
  2467  079F                     l2112:	
  2468                           
  2469                           ;main.c: 266: }
  2470                           ;main.c: 267: for(y=0;y<15;y++)
  2471  079F  01E4               	clrf	_y
  2472  07A0                     L15:	
  2473  07A0  300F               	movlw	15
  2474  07A1  0264               	subwf	_y,w
  2475  07A2  1803               	btfsc	3,0
  2476  07A3  0008               	return
  2477                           
  2478                           ;main.c: 268: {
  2479                           ;main.c: 269: LCD_SetPos(14+y,1);
  2480  07A4  01A4               	clrf	LCD_SetPos@y
  2481  07A5  0AA4               	incf	LCD_SetPos@y,f
  2482  07A6  0864               	movf	_y,w
  2483  07A7  3E0E               	addlw	14
  2484  07A8  158A  25FC  118A   	fcall	_LCD_SetPos
  2485                           
  2486                           ;main.c: 270: sendbytee(0b00100000,0);
  2487  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  2488  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  2489  07AD  01AB               	clrf	sendbytee@mode
  2490  07AE  3020               	movlw	32
  2491  07AF  158A  25E1  118A   	fcall	_sendbytee
  2492  07B2  3001               	movlw	1
  2493  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2494  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  2495  07B5  00B1               	movwf	??_segchar
  2496  07B6  0831               	movf	??_segchar,w
  2497  07B7  07E4               	addwf	_y,f
  2498  07B8  2FA0               	goto	L15
  2499  07B9                     l2128:	
  2500                           ;main.c: 277: cas30:
  2501                           
  2502                           ;main.c: 276: case 30:
  2503                           
  2504                           ;main.c: 275: break;
  2505                           
  2506                           ;main.c: 274: goto cas30;
  2507                           
  2508                           ;main.c: 273: case 29:
  2509                           
  2510                           ;main.c: 271: }
  2511                           ;main.c: 272: break;
  2512                           
  2513                           
  2514                           ;main.c: 278: for(t=0;t<16;t++)
  2515  07B9  01E3               	clrf	_t
  2516  07BA                     L16:	
  2517  07BA  3010               	movlw	16
  2518  07BB  0263               	subwf	_t,w
  2519  07BC  1803               	btfsc	3,0
  2520  07BD  0008               	return
  2521                           
  2522                           ;main.c: 279: {
  2523                           ;main.c: 280: LCD_SetPos(0+t,1);
  2524  07BE  01A4               	clrf	LCD_SetPos@y
  2525  07BF  0AA4               	incf	LCD_SetPos@y,f
  2526  07C0  0863               	movf	_t,w
  2527  07C1  158A  25FC  118A   	fcall	_LCD_SetPos
  2528                           
  2529                           ;main.c: 281: sendbytee(0b11111111,0);
  2530  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  2531  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  2532  07C6  01AB               	clrf	sendbytee@mode
  2533  07C7  30FF               	movlw	255
  2534  07C8  158A  25E1  118A   	fcall	_sendbytee
  2535  07CB  3001               	movlw	1
  2536  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2537  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2538  07CE  00B1               	movwf	??_segchar
  2539  07CF  0831               	movf	??_segchar,w
  2540  07D0  07E3               	addwf	_t,f
  2541  07D1  2FBA               	goto	L16
  2542  07D2                     l2144:	
  2543                           ;main.c: 284: }
  2544                           
  2545                           ;main.c: 282: }
  2546                           ;main.c: 283: break;
  2547                           
  2548                           
  2549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2550                           ; Switch size 1, requested type "space"
  2551                           ; Number of cases is 1, Range of values is 0 to 0
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte            4     3 (average)
  2555                           ; direct_byte            9     7 (fixed)
  2556                           ; jumptable            260     6 (fixed)
  2557                           ;	Chosen strategy is simple_byte
  2558  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2559  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  2560  07D4  0830               	movf	segchar@adc_data+1,w
  2561  07D5  3A00               	xorlw	0	; case 0
  2562  07D6  1903               	skipnz
  2563  07D7  2FD9               	goto	l2556
  2564  07D8  2FE5               	goto	l207
  2565  07D9                     l2556:	
  2566                           
  2567                           ; Switch size 1, requested type "space"
  2568                           ; Number of cases is 31, Range of values is 0 to 30
  2569                           ; switch strategies available:
  2570                           ; Name         Instructions Cycles
  2571                           ; direct_byte           69     7 (fixed)
  2572                           ; simple_byte           94    48 (average)
  2573                           ; jumptable            260     6 (fixed)
  2574                           ;	Chosen strategy is direct_byte
  2575  07D9  082F               	movf	segchar@adc_data,w
  2576  07DA  0084               	movwf	4
  2577  07DB  301F               	movlw	31
  2578  07DC  0204               	subwf	4,w
  2579  07DD  1803               	skipnc
  2580  07DE  0008               	return
  2581  07DF  3008               	movlw	high S2558
  2582  07E0  008A               	movwf	10
  2583  07E1  1003               	clrc
  2584  07E2  0D04               	rlf	4,w
  2585  07E3  3E00               	addlw	low S2558
  2586  07E4  0082               	movwf	2
  2587  07E5                     l207:	
  2588  07E5  0008               	return
  2589  07E6                     __end_of_segchar:	
  2590                           
  2591                           	psect	swtext1
  2592  0800                     __pswtext1:	
  2593  0800                     S2558:	
  2594  0800  118A  2CB7         	ljmp	l1702
  2595  0802  118A  2CD2         	ljmp	l1718
  2596  0804  118A  2CD2         	ljmp	l1718
  2597  0806  118A  2CFB         	ljmp	l1738
  2598  0808  118A  2CFB         	ljmp	l1738
  2599  080A  118A  2D31         	ljmp	l1768
  2600  080C  118A  2D31         	ljmp	l1768
  2601  080E  118A  2D67         	ljmp	l1798
  2602  0810  118A  2D67         	ljmp	l1798
  2603  0812  118A  2D9D         	ljmp	l1828
  2604  0814  118A  2D9D         	ljmp	l1828
  2605  0816  118A  2DD3         	ljmp	l1858
  2606  0818  118A  2DD3         	ljmp	l1858
  2607  081A  118A  2E09         	ljmp	l1888
  2608  081C  118A  2E09         	ljmp	l1888
  2609  081E  118A  2E3F         	ljmp	l1918
  2610  0820  118A  2E3F         	ljmp	l1918
  2611  0822  118A  2E75         	ljmp	l1948
  2612  0824  118A  2E75         	ljmp	l1948
  2613  0826  118A  2EAB         	ljmp	l1978
  2614  0828  118A  2EAB         	ljmp	l1978
  2615  082A  118A  2EE1         	ljmp	l2008
  2616  082C  118A  2EE1         	ljmp	l2008
  2617  082E  118A  2F17         	ljmp	l2038
  2618  0830  118A  2F17         	ljmp	l2038
  2619  0832  118A  2F4D         	ljmp	l2068
  2620  0834  118A  2F4D         	ljmp	l2068
  2621  0836  118A  2F83         	ljmp	l2098
  2622  0838  118A  2F83         	ljmp	l2098
  2623  083A  118A  2FB9         	ljmp	l2128
  2624  083C  118A  2FB9         	ljmp	l2128
  2625                           
  2626                           	psect	text2
  2627  0DE1                     __ptext2:	
  2628 ;; *************** function _sendbytee *****************
  2629 ;; Defined at:
  2630 ;;		line 30 in file "main.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  c               1    wreg     unsigned char 
  2633 ;;  mode            1   11[BANK0 ] unsigned char 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  c               1   14[BANK0 ] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1
  2645 ;;      Params:         0       1       0
  2646 ;;      Locals:         0       1       0
  2647 ;;      Temps:          0       2       0
  2648 ;;      Totals:         0       4       0
  2649 ;;Total ram usage:        4 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_segchar
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _sendbytee
  2661  0DE1                     _sendbytee:	
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in _sendbytee: [wreg+status,2+status,0]
  2665                           ;sendbytee@c stored from wreg
  2666  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0DE3  00AE               	movwf	sendbytee@c
  2669                           
  2670                           ;main.c: 32: PORTB=c;
  2671  0DE4  082E               	movf	sendbytee@c,w
  2672  0DE5  0086               	movwf	6	;volatile
  2673                           
  2674                           ;main.c: 33: if(mode==0) RC6=1;
  2675  0DE6  082B               	movf	sendbytee@mode,w
  2676  0DE7  1D03               	btfss	3,2
  2677  0DE8  2DEB               	goto	l96
  2678  0DE9  1707               	bsf	7,6	;volatile
  2679  0DEA  2DEC               	goto	l97
  2680  0DEB                     l96:	
  2681                           
  2682                           ;main.c: 34: else RC6=0;
  2683  0DEB  1307               	bcf	7,6	;volatile
  2684  0DEC                     l97:	
  2685                           
  2686                           ;main.c: 35: RC7=0;
  2687  0DEC  1387               	bcf	7,7	;volatile
  2688                           
  2689                           ;main.c: 36: _delay((unsigned long)((5)*(4000000/4000.0)));;
  2690  0DED  3007               	movlw	7
  2691  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0DF0  00AD               	movwf	??_sendbytee+1
  2694  0DF1  307C               	movlw	124
  2695  0DF2  00AC               	movwf	??_sendbytee
  2696  0DF3                     u2807:	
  2697  0DF3  0BAC               	decfsz	??_sendbytee,f
  2698  0DF4  2DF3               	goto	u2807
  2699  0DF5  0BAD               	decfsz	??_sendbytee+1,f
  2700  0DF6  2DF3               	goto	u2807
  2701  0DF7  2DF8               	nop2
  2702                           
  2703                           ;main.c: 37: RC7=1;
  2704  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0DFA  1787               	bsf	7,7	;volatile
  2707  0DFB  0008               	return
  2708  0DFC                     __end_of_sendbytee:	
  2709                           
  2710                           	psect	text3
  2711  0DFC                     __ptext3:	
  2712 ;; *************** function _LCD_SetPos *****************
  2713 ;; Defined at:
  2714 ;;		line 73 in file "lcd.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  x               1    wreg     unsigned char 
  2717 ;;  y               1    4[BANK0 ] unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  x               1    5[BANK0 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  1    wreg      void 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1
  2729 ;;      Params:         0       1       0
  2730 ;;      Locals:         0       1       0
  2731 ;;      Temps:          0       0       0
  2732 ;;      Totals:         0       2       0
  2733 ;;Total ram usage:        2 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    2
  2736 ;; This function calls:
  2737 ;;		_sendbyte
  2738 ;; This function is called by:
  2739 ;;		_segchar
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _LCD_SetPos
  2746  0DFC                     _LCD_SetPos:	
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in _LCD_SetPos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2750                           ;LCD_SetPos@x stored from wreg
  2751  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0DFE  00A5               	movwf	LCD_SetPos@x
  2754                           
  2755                           ;lcd.c: 75: switch(y)
  2756  0DFF  2E0F               	goto	l1608
  2757  0E00                     l1602:	
  2758                           ;lcd.c: 76: {
  2759                           ;lcd.c: 77: case 0:
  2760                           
  2761                           
  2762                           ;lcd.c: 78: sendbyte((unsigned char)(x|0x80),0);
  2763  0E00  01A2               	clrf	sendbyte@mode
  2764  0E01  0825               	movf	LCD_SetPos@x,w
  2765  0E02  3880               	iorlw	128
  2766  0E03  158A  258D         	fcall	_sendbyte
  2767                           
  2768                           ;lcd.c: 79: break;
  2769  0E05  0008               	return
  2770  0E06                     l1604:	
  2771                           ;lcd.c: 80: case 1:
  2772                           
  2773                           
  2774                           ;lcd.c: 81: sendbyte((unsigned char)((0x40+x)|0x80),0);
  2775  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0E08  01A2               	clrf	sendbyte@mode
  2778  0E09  0825               	movf	LCD_SetPos@x,w
  2779  0E0A  3E40               	addlw	64
  2780  0E0B  3880               	iorlw	128
  2781  0E0C  158A  258D         	fcall	_sendbyte
  2782                           
  2783                           ;lcd.c: 83: }
  2784                           
  2785                           ;lcd.c: 82: break;
  2786  0E0E  0008               	return
  2787  0E0F                     l1608:	
  2788  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0E11  0824               	movf	LCD_SetPos@y,w
  2791                           
  2792                           ; Switch size 1, requested type "space"
  2793                           ; Number of cases is 2, Range of values is 0 to 1
  2794                           ; switch strategies available:
  2795                           ; Name         Instructions Cycles
  2796                           ; simple_byte            7     4 (average)
  2797                           ; direct_byte           11     7 (fixed)
  2798                           ; jumptable            260     6 (fixed)
  2799                           ;	Chosen strategy is simple_byte
  2800  0E12  3A00               	xorlw	0	; case 0
  2801  0E13  1903               	skipnz
  2802  0E14  2E00               	goto	l1602
  2803  0E15  3A01               	xorlw	1	; case 1
  2804  0E16  1903               	skipnz
  2805  0E17  2E06               	goto	l1604
  2806  0E18  2E19               	goto	l28
  2807  0E19                     l28:	
  2808  0E19  0008               	return
  2809  0E1A                     __end_of_LCD_SetPos:	
  2810                           
  2811                           	psect	text4
  2812  0004                     __ptext4:	
  2813 ;; *************** function _delay *****************
  2814 ;; Defined at:
  2815 ;;		line 23 in file "main.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  i               2    0[BANK0 ] int 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, btemp+1
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1
  2829 ;;      Params:         0       0       0
  2830 ;;      Locals:         0       2       0
  2831 ;;      Temps:          0       0       0
  2832 ;;      Totals:         0       2       0
  2833 ;;Total ram usage:        2 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _delay
  2844  0004                     _delay:	
  2845                           
  2846                           ;main.c: 25: int i;
  2847                           ;main.c: 26: for(i=0;i<19;i++);
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  2851  0004  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0005  1303               	bcf	3,6	;RP1=0, select bank0
  2853  0006  01A0               	clrf	delay@i
  2854  0007  01A1               	clrf	delay@i+1
  2855  0008                     L17:	
  2856  0008  0821               	movf	delay@i+1,w
  2857  0009  3A80               	xorlw	128
  2858  000A  00FF               	movwf	127
  2859  000B  3080               	movlw	128
  2860  000C  027F               	subwf	127,w
  2861  000D  1D03               	skipz
  2862  000E  2811               	goto	u1545
  2863  000F  3013               	movlw	19
  2864  0010  0220               	subwf	delay@i,w
  2865  0011                     u1545:	
  2866  0011  1803               	btfsc	3,0
  2867  0012  0008               	return
  2868  0013  3001               	movlw	1
  2869  0014  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0015  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0016  07A0               	addwf	delay@i,f
  2872  0017  1803               	skipnc
  2873  0018  0AA1               	incf	delay@i+1,f
  2874  0019  3000               	movlw	0
  2875  001A  07A1               	addwf	delay@i+1,f
  2876  001B  2808               	goto	L17
  2877  001C                     __end_of_delay:	
  2878                           
  2879                           	psect	text5
  2880  0DB2                     __ptext5:	
  2881 ;; *************** function ___lwtoft *****************
  2882 ;; Defined at:
  2883 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  c               2    8[BANK0 ] unsigned int 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  3    8[BANK0 ] float 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1
  2897 ;;      Params:         0       3       0
  2898 ;;      Locals:         0       0       0
  2899 ;;      Temps:          0       1       0
  2900 ;;      Totals:         0       4       0
  2901 ;;Total ram usage:        4 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    1
  2904 ;; This function calls:
  2905 ;;		___ftpack
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function ___lwtoft
  2913  0DB2                     ___lwtoft:	
  2914                           
  2915                           ;incstack = 0
  2916                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2917  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  2918  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  2919  0DB4  0828               	movf	___lwtoft@c,w
  2920  0DB5  00A0               	movwf	___ftpack@arg
  2921  0DB6  0829               	movf	___lwtoft@c+1,w
  2922  0DB7  00A1               	movwf	___ftpack@arg+1
  2923  0DB8  01A2               	clrf	___ftpack@arg+2
  2924  0DB9  308E               	movlw	142
  2925  0DBA  00AB               	movwf	??___lwtoft
  2926  0DBB  082B               	movf	??___lwtoft,w
  2927  0DBC  00A3               	movwf	___ftpack@exp
  2928  0DBD  01A4               	clrf	___ftpack@sign
  2929  0DBE  158A  2704         	fcall	___ftpack
  2930  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0DC2  0820               	movf	?___ftpack,w
  2933  0DC3  00A8               	movwf	?___lwtoft
  2934  0DC4  0821               	movf	?___ftpack+1,w
  2935  0DC5  00A9               	movwf	?___lwtoft+1
  2936  0DC6  0822               	movf	?___ftpack+2,w
  2937  0DC7  00AA               	movwf	?___lwtoft+2
  2938  0DC8  0008               	return
  2939  0DC9                     __end_of___lwtoft:	
  2940                           
  2941                           	psect	text6
  2942  0F72                     __ptext6:	
  2943 ;; *************** function ___fttol *****************
  2944 ;; Defined at:
  2945 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  f1              3   40[BANK0 ] float 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  lval            4   49[BANK0 ] unsigned long 
  2950 ;;  exp1            1   53[BANK0 ] unsigned char 
  2951 ;;  sign1           1   48[BANK0 ] unsigned char 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  4   40[BANK0 ] long 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1
  2961 ;;      Params:         0       4       0
  2962 ;;      Locals:         0       6       0
  2963 ;;      Temps:          0       4       0
  2964 ;;      Totals:         0      14       0
  2965 ;;Total ram usage:       14 bytes
  2966 ;; Hardware stack levels used:    1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function ___fttol
  2976  0F72                     ___fttol:	
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2980  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0F74  0848               	movf	___fttol@f1,w
  2983  0F75  00CC               	movwf	??___fttol
  2984  0F76  0849               	movf	___fttol@f1+1,w
  2985  0F77  00CD               	movwf	??___fttol+1
  2986  0F78  084A               	movf	___fttol@f1+2,w
  2987  0F79  00CE               	movwf	??___fttol+2
  2988  0F7A  1003               	clrc
  2989  0F7B  0D4D               	rlf	??___fttol+1,w
  2990  0F7C  0D4E               	rlf	??___fttol+2,w
  2991  0F7D  00CF               	movwf	??___fttol+3
  2992  0F7E  084F               	movf	??___fttol+3,w
  2993  0F7F  00D5               	movwf	___fttol@exp1
  2994  0F80  0855               	movf	___fttol@exp1,w
  2995  0F81  1D03               	btfss	3,2
  2996  0F82  2F8C               	goto	l2348
  2997  0F83  3000               	movlw	0
  2998  0F84  00CB               	movwf	?___fttol+3
  2999  0F85  3000               	movlw	0
  3000  0F86  00CA               	movwf	?___fttol+2
  3001  0F87  3000               	movlw	0
  3002  0F88  00C9               	movwf	?___fttol+1
  3003  0F89  3000               	movlw	0
  3004  0F8A  00C8               	movwf	?___fttol
  3005  0F8B  0008               	return
  3006  0F8C                     l2348:	
  3007  0F8C  0848               	movf	___fttol@f1,w
  3008  0F8D  00CC               	movwf	??___fttol
  3009  0F8E  0849               	movf	___fttol@f1+1,w
  3010  0F8F  00CD               	movwf	??___fttol+1
  3011  0F90  084A               	movf	___fttol@f1+2,w
  3012  0F91  00CE               	movwf	??___fttol+2
  3013  0F92  3017               	movlw	23
  3014  0F93                     u2585:	
  3015  0F93  1003               	clrc
  3016  0F94  0CCE               	rrf	??___fttol+2,f
  3017  0F95  0CCD               	rrf	??___fttol+1,f
  3018  0F96  0CCC               	rrf	??___fttol,f
  3019  0F97  3EFF               	addlw	-1
  3020  0F98  1D03               	skipz
  3021  0F99  2F93               	goto	u2585
  3022  0F9A  084C               	movf	??___fttol,w
  3023  0F9B  00CF               	movwf	??___fttol+3
  3024  0F9C  084F               	movf	??___fttol+3,w
  3025  0F9D  00D0               	movwf	___fttol@sign1
  3026  0F9E  17C9               	bsf	___fttol@f1+1,7
  3027  0F9F  30FF               	movlw	255
  3028  0FA0  05C8               	andwf	___fttol@f1,f
  3029  0FA1  30FF               	movlw	255
  3030  0FA2  05C9               	andwf	___fttol@f1+1,f
  3031  0FA3  3000               	movlw	0
  3032  0FA4  05CA               	andwf	___fttol@f1+2,f
  3033  0FA5  0848               	movf	___fttol@f1,w
  3034  0FA6  00D1               	movwf	___fttol@lval
  3035  0FA7  0849               	movf	___fttol@f1+1,w
  3036  0FA8  00D2               	movwf	___fttol@lval+1
  3037  0FA9  084A               	movf	___fttol@f1+2,w
  3038  0FAA  00D3               	movwf	___fttol@lval+2
  3039  0FAB  01D4               	clrf	___fttol@lval+3
  3040  0FAC  308E               	movlw	142
  3041  0FAD  02D5               	subwf	___fttol@exp1,f
  3042  0FAE  1FD5               	btfss	___fttol@exp1,7
  3043  0FAF  2FCE               	goto	l2368
  3044  0FB0  0855               	movf	___fttol@exp1,w
  3045  0FB1  3A80               	xorlw	128
  3046  0FB2  3E8F               	addlw	143
  3047  0FB3  1803               	skipnc
  3048  0FB4  2FBE               	goto	l2366
  3049  0FB5  3000               	movlw	0
  3050  0FB6  00CB               	movwf	?___fttol+3
  3051  0FB7  3000               	movlw	0
  3052  0FB8  00CA               	movwf	?___fttol+2
  3053  0FB9  3000               	movlw	0
  3054  0FBA  00C9               	movwf	?___fttol+1
  3055  0FBB  3000               	movlw	0
  3056  0FBC  00C8               	movwf	?___fttol
  3057  0FBD  0008               	return
  3058  0FBE                     l2366:	
  3059  0FBE  3001               	movlw	1
  3060  0FBF                     u2615:	
  3061  0FBF  1003               	clrc
  3062  0FC0  0CD4               	rrf	___fttol@lval+3,f
  3063  0FC1  0CD3               	rrf	___fttol@lval+2,f
  3064  0FC2  0CD2               	rrf	___fttol@lval+1,f
  3065  0FC3  0CD1               	rrf	___fttol@lval,f
  3066  0FC4  3EFF               	addlw	-1
  3067  0FC5  1D03               	skipz
  3068  0FC6  2FBF               	goto	u2615
  3069  0FC7  3001               	movlw	1
  3070  0FC8  00CC               	movwf	??___fttol
  3071  0FC9  084C               	movf	??___fttol,w
  3072  0FCA  07D5               	addwf	___fttol@exp1,f
  3073  0FCB  1903               	btfsc	3,2
  3074  0FCC  2FE9               	goto	l2376
  3075  0FCD  2FBE               	goto	l2366
  3076  0FCE                     l2368:	
  3077  0FCE  3018               	movlw	24
  3078  0FCF  0255               	subwf	___fttol@exp1,w
  3079  0FD0  1C03               	skipc
  3080  0FD1  2FE6               	goto	l480
  3081  0FD2  3000               	movlw	0
  3082  0FD3  00CB               	movwf	?___fttol+3
  3083  0FD4  3000               	movlw	0
  3084  0FD5  00CA               	movwf	?___fttol+2
  3085  0FD6  3000               	movlw	0
  3086  0FD7  00C9               	movwf	?___fttol+1
  3087  0FD8  3000               	movlw	0
  3088  0FD9  00C8               	movwf	?___fttol
  3089  0FDA  0008               	return
  3090  0FDB                     l2374:	
  3091  0FDB  3001               	movlw	1
  3092  0FDC  00CC               	movwf	??___fttol
  3093  0FDD                     u2645:	
  3094  0FDD  1003               	clrc
  3095  0FDE  0DD1               	rlf	___fttol@lval,f
  3096  0FDF  0DD2               	rlf	___fttol@lval+1,f
  3097  0FE0  0DD3               	rlf	___fttol@lval+2,f
  3098  0FE1  0DD4               	rlf	___fttol@lval+3,f
  3099  0FE2  0BCC               	decfsz	??___fttol,f
  3100  0FE3  2FDD               	goto	u2645
  3101  0FE4  3001               	movlw	1
  3102  0FE5  02D5               	subwf	___fttol@exp1,f
  3103  0FE6                     l480:	
  3104  0FE6  0855               	movf	___fttol@exp1,w
  3105  0FE7  1D03               	btfss	3,2
  3106  0FE8  2FDB               	goto	l2374
  3107  0FE9                     l2376:	
  3108  0FE9  0850               	movf	___fttol@sign1,w
  3109  0FEA  1903               	btfsc	3,2
  3110  0FEB  2FF7               	goto	l2380
  3111  0FEC  09D1               	comf	___fttol@lval,f
  3112  0FED  09D2               	comf	___fttol@lval+1,f
  3113  0FEE  09D3               	comf	___fttol@lval+2,f
  3114  0FEF  09D4               	comf	___fttol@lval+3,f
  3115  0FF0  0AD1               	incf	___fttol@lval,f
  3116  0FF1  1903               	skipnz
  3117  0FF2  0AD2               	incf	___fttol@lval+1,f
  3118  0FF3  1903               	skipnz
  3119  0FF4  0AD3               	incf	___fttol@lval+2,f
  3120  0FF5  1903               	skipnz
  3121  0FF6  0AD4               	incf	___fttol@lval+3,f
  3122  0FF7                     l2380:	
  3123  0FF7  0854               	movf	___fttol@lval+3,w
  3124  0FF8  00CB               	movwf	?___fttol+3
  3125  0FF9  0853               	movf	___fttol@lval+2,w
  3126  0FFA  00CA               	movwf	?___fttol+2
  3127  0FFB  0852               	movf	___fttol@lval+1,w
  3128  0FFC  00C9               	movwf	?___fttol+1
  3129  0FFD  0851               	movf	___fttol@lval,w
  3130  0FFE  00C8               	movwf	?___fttol
  3131  0FFF  0008               	return
  3132  1000                     __end_of___fttol:	
  3133                           
  3134                           	psect	text7
  3135  017E                     __ptext7:	
  3136 ;; *************** function ___ftmul *****************
  3137 ;; Defined at:
  3138 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  f1              3    8[BANK0 ] float 
  3141 ;;  f2              3   11[BANK0 ] float 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  3144 ;;  sign            1   23[BANK0 ] unsigned char 
  3145 ;;  cntr            1   22[BANK0 ] unsigned char 
  3146 ;;  exp             1   18[BANK0 ] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  3    8[BANK0 ] float 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1
  3156 ;;      Params:         0       6       0
  3157 ;;      Locals:         0       6       0
  3158 ;;      Temps:          0       4       0
  3159 ;;      Totals:         0      16       0
  3160 ;;Total ram usage:       16 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    1
  3163 ;; This function calls:
  3164 ;;		___ftpack
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function ___ftmul
  3172  017E                     ___ftmul:	
  3173                           
  3174                           ;incstack = 0
  3175                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3176  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3177  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0180  0828               	movf	___ftmul@f1,w
  3179  0181  00AE               	movwf	??___ftmul
  3180  0182  0829               	movf	___ftmul@f1+1,w
  3181  0183  00AF               	movwf	??___ftmul+1
  3182  0184  082A               	movf	___ftmul@f1+2,w
  3183  0185  00B0               	movwf	??___ftmul+2
  3184  0186  1003               	clrc
  3185  0187  0D2F               	rlf	??___ftmul+1,w
  3186  0188  0D30               	rlf	??___ftmul+2,w
  3187  0189  00B1               	movwf	??___ftmul+3
  3188  018A  0831               	movf	??___ftmul+3,w
  3189  018B  00B2               	movwf	___ftmul@exp
  3190  018C  0832               	movf	___ftmul@exp,w
  3191  018D  1D03               	btfss	3,2
  3192  018E  2996               	goto	l2298
  3193  018F  3000               	movlw	0
  3194  0190  00A8               	movwf	?___ftmul
  3195  0191  3000               	movlw	0
  3196  0192  00A9               	movwf	?___ftmul+1
  3197  0193  3000               	movlw	0
  3198  0194  00AA               	movwf	?___ftmul+2
  3199  0195  0008               	return
  3200  0196                     l2298:	
  3201  0196  082B               	movf	___ftmul@f2,w
  3202  0197  00AE               	movwf	??___ftmul
  3203  0198  082C               	movf	___ftmul@f2+1,w
  3204  0199  00AF               	movwf	??___ftmul+1
  3205  019A  082D               	movf	___ftmul@f2+2,w
  3206  019B  00B0               	movwf	??___ftmul+2
  3207  019C  1003               	clrc
  3208  019D  0D2F               	rlf	??___ftmul+1,w
  3209  019E  0D30               	rlf	??___ftmul+2,w
  3210  019F  00B1               	movwf	??___ftmul+3
  3211  01A0  0831               	movf	??___ftmul+3,w
  3212  01A1  00B7               	movwf	___ftmul@sign
  3213  01A2  0837               	movf	___ftmul@sign,w
  3214  01A3  1D03               	btfss	3,2
  3215  01A4  29AC               	goto	l2304
  3216  01A5  3000               	movlw	0
  3217  01A6  00A8               	movwf	?___ftmul
  3218  01A7  3000               	movlw	0
  3219  01A8  00A9               	movwf	?___ftmul+1
  3220  01A9  3000               	movlw	0
  3221  01AA  00AA               	movwf	?___ftmul+2
  3222  01AB  0008               	return
  3223  01AC                     l2304:	
  3224  01AC  0837               	movf	___ftmul@sign,w
  3225  01AD  3E7B               	addlw	123
  3226  01AE  00AE               	movwf	??___ftmul
  3227  01AF  082E               	movf	??___ftmul,w
  3228  01B0  07B2               	addwf	___ftmul@exp,f
  3229  01B1  0828               	movf	___ftmul@f1,w
  3230  01B2  00AE               	movwf	??___ftmul
  3231  01B3  0829               	movf	___ftmul@f1+1,w
  3232  01B4  00AF               	movwf	??___ftmul+1
  3233  01B5  082A               	movf	___ftmul@f1+2,w
  3234  01B6  00B0               	movwf	??___ftmul+2
  3235  01B7  3010               	movlw	16
  3236  01B8                     u2455:	
  3237  01B8  1003               	clrc
  3238  01B9  0CB0               	rrf	??___ftmul+2,f
  3239  01BA  0CAF               	rrf	??___ftmul+1,f
  3240  01BB  0CAE               	rrf	??___ftmul,f
  3241  01BC  3EFF               	addlw	-1
  3242  01BD  1D03               	skipz
  3243  01BE  29B8               	goto	u2455
  3244  01BF  082E               	movf	??___ftmul,w
  3245  01C0  00B1               	movwf	??___ftmul+3
  3246  01C1  0831               	movf	??___ftmul+3,w
  3247  01C2  00B7               	movwf	___ftmul@sign
  3248  01C3  082B               	movf	___ftmul@f2,w
  3249  01C4  00AE               	movwf	??___ftmul
  3250  01C5  082C               	movf	___ftmul@f2+1,w
  3251  01C6  00AF               	movwf	??___ftmul+1
  3252  01C7  082D               	movf	___ftmul@f2+2,w
  3253  01C8  00B0               	movwf	??___ftmul+2
  3254  01C9  3010               	movlw	16
  3255  01CA                     u2465:	
  3256  01CA  1003               	clrc
  3257  01CB  0CB0               	rrf	??___ftmul+2,f
  3258  01CC  0CAF               	rrf	??___ftmul+1,f
  3259  01CD  0CAE               	rrf	??___ftmul,f
  3260  01CE  3EFF               	addlw	-1
  3261  01CF  1D03               	skipz
  3262  01D0  29CA               	goto	u2465
  3263  01D1  082E               	movf	??___ftmul,w
  3264  01D2  00B1               	movwf	??___ftmul+3
  3265  01D3  0831               	movf	??___ftmul+3,w
  3266  01D4  06B7               	xorwf	___ftmul@sign,f
  3267  01D5  3080               	movlw	128
  3268  01D6  00AE               	movwf	??___ftmul
  3269  01D7  082E               	movf	??___ftmul,w
  3270  01D8  05B7               	andwf	___ftmul@sign,f
  3271  01D9  17A9               	bsf	___ftmul@f1+1,7
  3272  01DA  17AC               	bsf	___ftmul@f2+1,7
  3273  01DB  30FF               	movlw	255
  3274  01DC  05AB               	andwf	___ftmul@f2,f
  3275  01DD  30FF               	movlw	255
  3276  01DE  05AC               	andwf	___ftmul@f2+1,f
  3277  01DF  3000               	movlw	0
  3278  01E0  05AD               	andwf	___ftmul@f2+2,f
  3279  01E1  3000               	movlw	0
  3280  01E2  00B3               	movwf	___ftmul@f3_as_product
  3281  01E3  3000               	movlw	0
  3282  01E4  00B4               	movwf	___ftmul@f3_as_product+1
  3283  01E5  3000               	movlw	0
  3284  01E6  00B5               	movwf	___ftmul@f3_as_product+2
  3285  01E7  3007               	movlw	7
  3286  01E8  00AE               	movwf	??___ftmul
  3287  01E9  082E               	movf	??___ftmul,w
  3288  01EA  00B6               	movwf	___ftmul@cntr
  3289  01EB                     l2316:	
  3290  01EB  1C28               	btfss	___ftmul@f1,0
  3291  01EC  29FB               	goto	l2320
  3292  01ED  082B               	movf	___ftmul@f2,w
  3293  01EE  07B3               	addwf	___ftmul@f3_as_product,f
  3294  01EF  082C               	movf	___ftmul@f2+1,w
  3295  01F0  1103               	clrz
  3296  01F1  1803               	skipnc
  3297  01F2  0A2C               	incf	___ftmul@f2+1,w
  3298  01F3  1D03               	btfss	3,2
  3299  01F4  07B4               	addwf	___ftmul@f3_as_product+1,f
  3300  01F5  082D               	movf	___ftmul@f2+2,w
  3301  01F6  1103               	clrz
  3302  01F7  1803               	skipnc
  3303  01F8  0A2D               	incf	___ftmul@f2+2,w
  3304  01F9  1D03               	btfss	3,2
  3305  01FA  07B5               	addwf	___ftmul@f3_as_product+2,f
  3306  01FB                     l2320:	
  3307  01FB  3001               	movlw	1
  3308  01FC                     u2495:	
  3309  01FC  1003               	clrc
  3310  01FD  0CAA               	rrf	___ftmul@f1+2,f
  3311  01FE  0CA9               	rrf	___ftmul@f1+1,f
  3312  01FF  0CA8               	rrf	___ftmul@f1,f
  3313  0200  3EFF               	addlw	-1
  3314  0201  1D03               	skipz
  3315  0202  29FC               	goto	u2495
  3316  0203  3001               	movlw	1
  3317  0204                     u2505:	
  3318  0204  1003               	clrc
  3319  0205  0DAB               	rlf	___ftmul@f2,f
  3320  0206  0DAC               	rlf	___ftmul@f2+1,f
  3321  0207  0DAD               	rlf	___ftmul@f2+2,f
  3322  0208  3EFF               	addlw	-1
  3323  0209  1D03               	skipz
  3324  020A  2A04               	goto	u2505
  3325  020B  3001               	movlw	1
  3326  020C  02B6               	subwf	___ftmul@cntr,f
  3327  020D  1D03               	btfss	3,2
  3328  020E  29EB               	goto	l2316
  3329  020F  3009               	movlw	9
  3330  0210  00AE               	movwf	??___ftmul
  3331  0211  082E               	movf	??___ftmul,w
  3332  0212  00B6               	movwf	___ftmul@cntr
  3333  0213                     l2328:	
  3334  0213  1C28               	btfss	___ftmul@f1,0
  3335  0214  2A23               	goto	l2332
  3336  0215  082B               	movf	___ftmul@f2,w
  3337  0216  07B3               	addwf	___ftmul@f3_as_product,f
  3338  0217  082C               	movf	___ftmul@f2+1,w
  3339  0218  1103               	clrz
  3340  0219  1803               	skipnc
  3341  021A  0A2C               	incf	___ftmul@f2+1,w
  3342  021B  1D03               	btfss	3,2
  3343  021C  07B4               	addwf	___ftmul@f3_as_product+1,f
  3344  021D  082D               	movf	___ftmul@f2+2,w
  3345  021E  1103               	clrz
  3346  021F  1803               	skipnc
  3347  0220  0A2D               	incf	___ftmul@f2+2,w
  3348  0221  1D03               	btfss	3,2
  3349  0222  07B5               	addwf	___ftmul@f3_as_product+2,f
  3350  0223                     l2332:	
  3351  0223  3001               	movlw	1
  3352  0224                     u2545:	
  3353  0224  1003               	clrc
  3354  0225  0CAA               	rrf	___ftmul@f1+2,f
  3355  0226  0CA9               	rrf	___ftmul@f1+1,f
  3356  0227  0CA8               	rrf	___ftmul@f1,f
  3357  0228  3EFF               	addlw	-1
  3358  0229  1D03               	skipz
  3359  022A  2A24               	goto	u2545
  3360  022B  3001               	movlw	1
  3361  022C                     u2555:	
  3362  022C  1003               	clrc
  3363  022D  0CB5               	rrf	___ftmul@f3_as_product+2,f
  3364  022E  0CB4               	rrf	___ftmul@f3_as_product+1,f
  3365  022F  0CB3               	rrf	___ftmul@f3_as_product,f
  3366  0230  3EFF               	addlw	-1
  3367  0231  1D03               	skipz
  3368  0232  2A2C               	goto	u2555
  3369  0233  3001               	movlw	1
  3370  0234  02B6               	subwf	___ftmul@cntr,f
  3371  0235  1D03               	btfss	3,2
  3372  0236  2A13               	goto	l2328
  3373  0237  0833               	movf	___ftmul@f3_as_product,w
  3374  0238  00A0               	movwf	___ftpack@arg
  3375  0239  0834               	movf	___ftmul@f3_as_product+1,w
  3376  023A  00A1               	movwf	___ftpack@arg+1
  3377  023B  0835               	movf	___ftmul@f3_as_product+2,w
  3378  023C  00A2               	movwf	___ftpack@arg+2
  3379  023D  0832               	movf	___ftmul@exp,w
  3380  023E  00AE               	movwf	??___ftmul
  3381  023F  082E               	movf	??___ftmul,w
  3382  0240  00A3               	movwf	___ftpack@exp
  3383  0241  0837               	movf	___ftmul@sign,w
  3384  0242  00AF               	movwf	??___ftmul+1
  3385  0243  082F               	movf	??___ftmul+1,w
  3386  0244  00A4               	movwf	___ftpack@sign
  3387  0245  158A  2704         	fcall	___ftpack
  3388  0247  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0248  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0249  0820               	movf	?___ftpack,w
  3391  024A  00A8               	movwf	?___ftmul
  3392  024B  0821               	movf	?___ftpack+1,w
  3393  024C  00A9               	movwf	?___ftmul+1
  3394  024D  0822               	movf	?___ftpack+2,w
  3395  024E  00AA               	movwf	?___ftmul+2
  3396  024F  0008               	return
  3397  0250                     __end_of___ftmul:	
  3398                           
  3399                           	psect	text8
  3400  00C7                     __ptext8:	
  3401 ;; *************** function ___ftdiv *****************
  3402 ;; Defined at:
  3403 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  f2              3   24[BANK0 ] float 
  3406 ;;  f1              3   27[BANK0 ] float 
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  f3              3   35[BANK0 ] float 
  3409 ;;  sign            1   39[BANK0 ] unsigned char 
  3410 ;;  exp             1   38[BANK0 ] unsigned char 
  3411 ;;  cntr            1   34[BANK0 ] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  3   24[BANK0 ] float 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0, pclath, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1
  3421 ;;      Params:         0       6       0
  3422 ;;      Locals:         0       6       0
  3423 ;;      Temps:          0       4       0
  3424 ;;      Totals:         0      16       0
  3425 ;;Total ram usage:       16 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    1
  3428 ;; This function calls:
  3429 ;;		___ftpack
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function ___ftdiv
  3437  00C7                     ___ftdiv:	
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3441  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3442  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3443  00C9  083B               	movf	___ftdiv@f1,w
  3444  00CA  00BE               	movwf	??___ftdiv
  3445  00CB  083C               	movf	___ftdiv@f1+1,w
  3446  00CC  00BF               	movwf	??___ftdiv+1
  3447  00CD  083D               	movf	___ftdiv@f1+2,w
  3448  00CE  00C0               	movwf	??___ftdiv+2
  3449  00CF  1003               	clrc
  3450  00D0  0D3F               	rlf	??___ftdiv+1,w
  3451  00D1  0D40               	rlf	??___ftdiv+2,w
  3452  00D2  00C1               	movwf	??___ftdiv+3
  3453  00D3  0841               	movf	??___ftdiv+3,w
  3454  00D4  00C6               	movwf	___ftdiv@exp
  3455  00D5  0846               	movf	___ftdiv@exp,w
  3456  00D6  1D03               	btfss	3,2
  3457  00D7  28DF               	goto	l2256
  3458  00D8  3000               	movlw	0
  3459  00D9  00B8               	movwf	?___ftdiv
  3460  00DA  3000               	movlw	0
  3461  00DB  00B9               	movwf	?___ftdiv+1
  3462  00DC  3000               	movlw	0
  3463  00DD  00BA               	movwf	?___ftdiv+2
  3464  00DE  0008               	return
  3465  00DF                     l2256:	
  3466  00DF  0838               	movf	___ftdiv@f2,w
  3467  00E0  00BE               	movwf	??___ftdiv
  3468  00E1  0839               	movf	___ftdiv@f2+1,w
  3469  00E2  00BF               	movwf	??___ftdiv+1
  3470  00E3  083A               	movf	___ftdiv@f2+2,w
  3471  00E4  00C0               	movwf	??___ftdiv+2
  3472  00E5  1003               	clrc
  3473  00E6  0D3F               	rlf	??___ftdiv+1,w
  3474  00E7  0D40               	rlf	??___ftdiv+2,w
  3475  00E8  00C1               	movwf	??___ftdiv+3
  3476  00E9  0841               	movf	??___ftdiv+3,w
  3477  00EA  00C7               	movwf	___ftdiv@sign
  3478  00EB  0847               	movf	___ftdiv@sign,w
  3479  00EC  1D03               	btfss	3,2
  3480  00ED  28F5               	goto	l2262
  3481  00EE  3000               	movlw	0
  3482  00EF  00B8               	movwf	?___ftdiv
  3483  00F0  3000               	movlw	0
  3484  00F1  00B9               	movwf	?___ftdiv+1
  3485  00F2  3000               	movlw	0
  3486  00F3  00BA               	movwf	?___ftdiv+2
  3487  00F4  0008               	return
  3488  00F5                     l2262:	
  3489  00F5  3000               	movlw	0
  3490  00F6  00C3               	movwf	___ftdiv@f3
  3491  00F7  3000               	movlw	0
  3492  00F8  00C4               	movwf	___ftdiv@f3+1
  3493  00F9  3000               	movlw	0
  3494  00FA  00C5               	movwf	___ftdiv@f3+2
  3495  00FB  3089               	movlw	137
  3496  00FC  0747               	addwf	___ftdiv@sign,w
  3497  00FD  00BE               	movwf	??___ftdiv
  3498  00FE  083E               	movf	??___ftdiv,w
  3499  00FF  02C6               	subwf	___ftdiv@exp,f
  3500  0100  083B               	movf	___ftdiv@f1,w
  3501  0101  00BE               	movwf	??___ftdiv
  3502  0102  083C               	movf	___ftdiv@f1+1,w
  3503  0103  00BF               	movwf	??___ftdiv+1
  3504  0104  083D               	movf	___ftdiv@f1+2,w
  3505  0105  00C0               	movwf	??___ftdiv+2
  3506  0106  3010               	movlw	16
  3507  0107                     u2375:	
  3508  0107  1003               	clrc
  3509  0108  0CC0               	rrf	??___ftdiv+2,f
  3510  0109  0CBF               	rrf	??___ftdiv+1,f
  3511  010A  0CBE               	rrf	??___ftdiv,f
  3512  010B  3EFF               	addlw	-1
  3513  010C  1D03               	skipz
  3514  010D  2907               	goto	u2375
  3515  010E  083E               	movf	??___ftdiv,w
  3516  010F  00C1               	movwf	??___ftdiv+3
  3517  0110  0841               	movf	??___ftdiv+3,w
  3518  0111  00C7               	movwf	___ftdiv@sign
  3519  0112  0838               	movf	___ftdiv@f2,w
  3520  0113  00BE               	movwf	??___ftdiv
  3521  0114  0839               	movf	___ftdiv@f2+1,w
  3522  0115  00BF               	movwf	??___ftdiv+1
  3523  0116  083A               	movf	___ftdiv@f2+2,w
  3524  0117  00C0               	movwf	??___ftdiv+2
  3525  0118  3010               	movlw	16
  3526  0119                     u2385:	
  3527  0119  1003               	clrc
  3528  011A  0CC0               	rrf	??___ftdiv+2,f
  3529  011B  0CBF               	rrf	??___ftdiv+1,f
  3530  011C  0CBE               	rrf	??___ftdiv,f
  3531  011D  3EFF               	addlw	-1
  3532  011E  1D03               	skipz
  3533  011F  2919               	goto	u2385
  3534  0120  083E               	movf	??___ftdiv,w
  3535  0121  00C1               	movwf	??___ftdiv+3
  3536  0122  0841               	movf	??___ftdiv+3,w
  3537  0123  06C7               	xorwf	___ftdiv@sign,f
  3538  0124  3080               	movlw	128
  3539  0125  00BE               	movwf	??___ftdiv
  3540  0126  083E               	movf	??___ftdiv,w
  3541  0127  05C7               	andwf	___ftdiv@sign,f
  3542  0128  17BC               	bsf	___ftdiv@f1+1,7
  3543  0129  30FF               	movlw	255
  3544  012A  05BB               	andwf	___ftdiv@f1,f
  3545  012B  30FF               	movlw	255
  3546  012C  05BC               	andwf	___ftdiv@f1+1,f
  3547  012D  3000               	movlw	0
  3548  012E  05BD               	andwf	___ftdiv@f1+2,f
  3549  012F  17B9               	bsf	___ftdiv@f2+1,7
  3550  0130  30FF               	movlw	255
  3551  0131  05B8               	andwf	___ftdiv@f2,f
  3552  0132  30FF               	movlw	255
  3553  0133  05B9               	andwf	___ftdiv@f2+1,f
  3554  0134  3000               	movlw	0
  3555  0135  05BA               	andwf	___ftdiv@f2+2,f
  3556  0136  3018               	movlw	24
  3557  0137  00BE               	movwf	??___ftdiv
  3558  0138  083E               	movf	??___ftdiv,w
  3559  0139  00C2               	movwf	___ftdiv@cntr
  3560  013A                     l2276:	
  3561  013A  3001               	movlw	1
  3562  013B                     u2395:	
  3563  013B  1003               	clrc
  3564  013C  0DC3               	rlf	___ftdiv@f3,f
  3565  013D  0DC4               	rlf	___ftdiv@f3+1,f
  3566  013E  0DC5               	rlf	___ftdiv@f3+2,f
  3567  013F  3EFF               	addlw	-1
  3568  0140  1D03               	skipz
  3569  0141  293B               	goto	u2395
  3570  0142  083A               	movf	___ftdiv@f2+2,w
  3571  0143  023D               	subwf	___ftdiv@f1+2,w
  3572  0144  1D03               	skipz
  3573  0145  294C               	goto	u2405
  3574  0146  0839               	movf	___ftdiv@f2+1,w
  3575  0147  023C               	subwf	___ftdiv@f1+1,w
  3576  0148  1D03               	skipz
  3577  0149  294C               	goto	u2405
  3578  014A  0838               	movf	___ftdiv@f2,w
  3579  014B  023B               	subwf	___ftdiv@f1,w
  3580  014C                     u2405:	
  3581  014C  1C03               	skipc
  3582  014D  2959               	goto	l2284
  3583  014E  0838               	movf	___ftdiv@f2,w
  3584  014F  02BB               	subwf	___ftdiv@f1,f
  3585  0150  0839               	movf	___ftdiv@f2+1,w
  3586  0151  1C03               	skipc
  3587  0152  0F39               	incfsz	___ftdiv@f2+1,w
  3588  0153  02BC               	subwf	___ftdiv@f1+1,f
  3589  0154  083A               	movf	___ftdiv@f2+2,w
  3590  0155  1C03               	skipc
  3591  0156  0A3A               	incf	___ftdiv@f2+2,w
  3592  0157  02BD               	subwf	___ftdiv@f1+2,f
  3593  0158  1443               	bsf	___ftdiv@f3,0
  3594  0159                     l2284:	
  3595  0159  3001               	movlw	1
  3596  015A                     u2415:	
  3597  015A  1003               	clrc
  3598  015B  0DBB               	rlf	___ftdiv@f1,f
  3599  015C  0DBC               	rlf	___ftdiv@f1+1,f
  3600  015D  0DBD               	rlf	___ftdiv@f1+2,f
  3601  015E  3EFF               	addlw	-1
  3602  015F  1D03               	skipz
  3603  0160  295A               	goto	u2415
  3604  0161  3001               	movlw	1
  3605  0162  02C2               	subwf	___ftdiv@cntr,f
  3606  0163  1D03               	btfss	3,2
  3607  0164  293A               	goto	l2276
  3608  0165  0843               	movf	___ftdiv@f3,w
  3609  0166  00A0               	movwf	___ftpack@arg
  3610  0167  0844               	movf	___ftdiv@f3+1,w
  3611  0168  00A1               	movwf	___ftpack@arg+1
  3612  0169  0845               	movf	___ftdiv@f3+2,w
  3613  016A  00A2               	movwf	___ftpack@arg+2
  3614  016B  0846               	movf	___ftdiv@exp,w
  3615  016C  00BE               	movwf	??___ftdiv
  3616  016D  083E               	movf	??___ftdiv,w
  3617  016E  00A3               	movwf	___ftpack@exp
  3618  016F  0847               	movf	___ftdiv@sign,w
  3619  0170  00BF               	movwf	??___ftdiv+1
  3620  0171  083F               	movf	??___ftdiv+1,w
  3621  0172  00A4               	movwf	___ftpack@sign
  3622  0173  158A  2704         	fcall	___ftpack
  3623  0175  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0176  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0177  0820               	movf	?___ftpack,w
  3626  0178  00B8               	movwf	?___ftdiv
  3627  0179  0821               	movf	?___ftpack+1,w
  3628  017A  00B9               	movwf	?___ftdiv+1
  3629  017B  0822               	movf	?___ftpack+2,w
  3630  017C  00BA               	movwf	?___ftdiv+2
  3631  017D  0008               	return
  3632  017E                     __end_of___ftdiv:	
  3633                           
  3634                           	psect	text9
  3635  0F04                     __ptext9:	
  3636 ;; *************** function ___ftpack *****************
  3637 ;; Defined at:
  3638 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  arg             3    0[BANK0 ] unsigned um
  3641 ;;  exp             1    3[BANK0 ] unsigned char 
  3642 ;;  sign            1    4[BANK0 ] unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  3    0[BANK0 ] float 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1
  3654 ;;      Params:         0       5       0
  3655 ;;      Locals:         0       0       0
  3656 ;;      Temps:          0       3       0
  3657 ;;      Totals:         0       8       0
  3658 ;;Total ram usage:        8 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		___ftdiv
  3664 ;;		___ftmul
  3665 ;;		___lwtoft
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function ___ftpack
  3671  0F04                     ___ftpack:	
  3672                           
  3673                           ;incstack = 0
  3674                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3675  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0F06  0823               	movf	___ftpack@exp,w
  3678  0F07  1903               	btfsc	3,2
  3679  0F08  2F0E               	goto	l1624
  3680  0F09  0822               	movf	___ftpack@arg+2,w
  3681  0F0A  0421               	iorwf	___ftpack@arg+1,w
  3682  0F0B  0420               	iorwf	___ftpack@arg,w
  3683  0F0C  1D03               	skipz
  3684  0F0D  2F21               	goto	l1630
  3685  0F0E                     l1624:	
  3686  0F0E  3000               	movlw	0
  3687  0F0F  00A0               	movwf	?___ftpack
  3688  0F10  3000               	movlw	0
  3689  0F11  00A1               	movwf	?___ftpack+1
  3690  0F12  3000               	movlw	0
  3691  0F13  00A2               	movwf	?___ftpack+2
  3692  0F14  0008               	return
  3693  0F15                     l1628:	
  3694  0F15  3001               	movlw	1
  3695  0F16  00A5               	movwf	??___ftpack
  3696  0F17  0825               	movf	??___ftpack,w
  3697  0F18  07A3               	addwf	___ftpack@exp,f
  3698  0F19  3001               	movlw	1
  3699  0F1A                     u1435:	
  3700  0F1A  1003               	clrc
  3701  0F1B  0CA2               	rrf	___ftpack@arg+2,f
  3702  0F1C  0CA1               	rrf	___ftpack@arg+1,f
  3703  0F1D  0CA0               	rrf	___ftpack@arg,f
  3704  0F1E  3EFF               	addlw	-1
  3705  0F1F  1D03               	skipz
  3706  0F20  2F1A               	goto	u1435
  3707  0F21                     l1630:	
  3708  0F21  30FE               	movlw	254
  3709  0F22  0522               	andwf	___ftpack@arg+2,w
  3710  0F23  1903               	btfsc	3,2
  3711  0F24  2F3C               	goto	l389
  3712  0F25  2F15               	goto	l1628
  3713  0F26                     l1632:	
  3714  0F26  3001               	movlw	1
  3715  0F27  00A5               	movwf	??___ftpack
  3716  0F28  0825               	movf	??___ftpack,w
  3717  0F29  07A3               	addwf	___ftpack@exp,f
  3718  0F2A  3001               	movlw	1
  3719  0F2B  07A0               	addwf	___ftpack@arg,f
  3720  0F2C  3000               	movlw	0
  3721  0F2D  1803               	skipnc
  3722  0F2E  3001               	movlw	1
  3723  0F2F  07A1               	addwf	___ftpack@arg+1,f
  3724  0F30  3000               	movlw	0
  3725  0F31  1803               	skipnc
  3726  0F32  3001               	movlw	1
  3727  0F33  07A2               	addwf	___ftpack@arg+2,f
  3728  0F34  3001               	movlw	1
  3729  0F35                     u1455:	
  3730  0F35  1003               	clrc
  3731  0F36  0CA2               	rrf	___ftpack@arg+2,f
  3732  0F37  0CA1               	rrf	___ftpack@arg+1,f
  3733  0F38  0CA0               	rrf	___ftpack@arg,f
  3734  0F39  3EFF               	addlw	-1
  3735  0F3A  1D03               	skipz
  3736  0F3B  2F35               	goto	u1455
  3737  0F3C                     l389:	
  3738  0F3C  30FF               	movlw	255
  3739  0F3D  0522               	andwf	___ftpack@arg+2,w
  3740  0F3E  1903               	btfsc	3,2
  3741  0F3F  2F4B               	goto	l1640
  3742  0F40  2F26               	goto	l1632
  3743  0F41                     l1638:	
  3744  0F41  3001               	movlw	1
  3745  0F42  02A3               	subwf	___ftpack@exp,f
  3746  0F43  3001               	movlw	1
  3747  0F44                     u1475:	
  3748  0F44  1003               	clrc
  3749  0F45  0DA0               	rlf	___ftpack@arg,f
  3750  0F46  0DA1               	rlf	___ftpack@arg+1,f
  3751  0F47  0DA2               	rlf	___ftpack@arg+2,f
  3752  0F48  3EFF               	addlw	-1
  3753  0F49  1D03               	skipz
  3754  0F4A  2F44               	goto	u1475
  3755  0F4B                     l1640:	
  3756  0F4B  1BA1               	btfsc	___ftpack@arg+1,7
  3757  0F4C  2F51               	goto	l396
  3758  0F4D  3002               	movlw	2
  3759  0F4E  0223               	subwf	___ftpack@exp,w
  3760  0F4F  1803               	skipnc
  3761  0F50  2F41               	goto	l1638
  3762  0F51                     l396:	
  3763  0F51  1823               	btfsc	___ftpack@exp,0
  3764  0F52  2F59               	goto	l397
  3765  0F53  30FF               	movlw	255
  3766  0F54  05A0               	andwf	___ftpack@arg,f
  3767  0F55  307F               	movlw	127
  3768  0F56  05A1               	andwf	___ftpack@arg+1,f
  3769  0F57  30FF               	movlw	255
  3770  0F58  05A2               	andwf	___ftpack@arg+2,f
  3771  0F59                     l397:	
  3772  0F59  1003               	clrc
  3773  0F5A  0CA3               	rrf	___ftpack@exp,f
  3774  0F5B  0823               	movf	___ftpack@exp,w
  3775  0F5C  00A5               	movwf	??___ftpack
  3776  0F5D  01A6               	clrf	??___ftpack+1
  3777  0F5E  01A7               	clrf	??___ftpack+2
  3778  0F5F  3010               	movlw	16
  3779  0F60                     u1515:	
  3780  0F60  1003               	clrc
  3781  0F61  0DA5               	rlf	??___ftpack,f
  3782  0F62  0DA6               	rlf	??___ftpack+1,f
  3783  0F63  0DA7               	rlf	??___ftpack+2,f
  3784  0F64  3EFF               	addlw	-1
  3785  0F65  1D03               	skipz
  3786  0F66  2F60               	goto	u1515
  3787  0F67  0825               	movf	??___ftpack,w
  3788  0F68  04A0               	iorwf	___ftpack@arg,f
  3789  0F69  0826               	movf	??___ftpack+1,w
  3790  0F6A  04A1               	iorwf	___ftpack@arg+1,f
  3791  0F6B  0827               	movf	??___ftpack+2,w
  3792  0F6C  04A2               	iorwf	___ftpack@arg+2,f
  3793  0F6D  0824               	movf	___ftpack@sign,w
  3794  0F6E  1903               	btfsc	3,2
  3795  0F6F  0008               	return
  3796  0F70  17A2               	bsf	___ftpack@arg+2,7
  3797  0F71  0008               	return
  3798  0F72                     __end_of___ftpack:	
  3799                           
  3800                           	psect	text10
  3801  0D9F                     __ptext10:	
  3802 ;; *************** function ___bmul *****************
  3803 ;; Defined at:
  3804 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  multiplier      1    wreg     unsigned char 
  3807 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3810 ;;  product         1    2[BANK0 ] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      unsigned char 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1
  3820 ;;      Params:         0       1       0
  3821 ;;      Locals:         0       2       0
  3822 ;;      Temps:          0       1       0
  3823 ;;      Totals:         0       4       0
  3824 ;;Total ram usage:        4 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_main
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           
  3834                           ;psect for function ___bmul
  3835  0D9F                     ___bmul:	
  3836                           
  3837                           ;incstack = 0
  3838                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3839                           ;___bmul@multiplier stored from wreg
  3840  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  3842  0DA1  00A3               	movwf	___bmul@multiplier
  3843  0DA2  01A2               	clrf	___bmul@product
  3844  0DA3                     l2156:	
  3845  0DA3  1C23               	btfss	___bmul@multiplier,0
  3846  0DA4  2DA9               	goto	l2160
  3847  0DA5  0820               	movf	___bmul@multiplicand,w
  3848  0DA6  00A1               	movwf	??___bmul
  3849  0DA7  0821               	movf	??___bmul,w
  3850  0DA8  07A2               	addwf	___bmul@product,f
  3851  0DA9                     l2160:	
  3852  0DA9  1003               	clrc
  3853  0DAA  0DA0               	rlf	___bmul@multiplicand,f
  3854  0DAB  1003               	clrc
  3855  0DAC  0CA3               	rrf	___bmul@multiplier,f
  3856  0DAD  0823               	movf	___bmul@multiplier,w
  3857  0DAE  1D03               	btfss	3,2
  3858  0DAF  2DA3               	goto	l2156
  3859  0DB0  0822               	movf	___bmul@product,w
  3860  0DB1  0008               	return
  3861  0DB2                     __end_of___bmul:	
  3862                           
  3863                           	psect	text11
  3864  0E5C                     __ptext11:	
  3865 ;; *************** function ___awmod *****************
  3866 ;; Defined at:
  3867 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  divisor         2    4[BANK0 ] int 
  3870 ;;  dividend        2    6[BANK0 ] int 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  sign            1   10[BANK0 ] unsigned char 
  3873 ;;  counter         1    9[BANK0 ] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    4[BANK0 ] int 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1
  3883 ;;      Params:         0       4       0
  3884 ;;      Locals:         0       2       0
  3885 ;;      Temps:          0       1       0
  3886 ;;      Totals:         0       7       0
  3887 ;;Total ram usage:        7 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_main
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function ___awmod
  3898  0E5C                     ___awmod:	
  3899                           
  3900                           ;incstack = 0
  3901                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3902  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  3903  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  3904  0E5E  01AA               	clrf	___awmod@sign
  3905  0E5F  1FA7               	btfss	___awmod@dividend+1,7
  3906  0E60  2E68               	goto	l2220
  3907  0E61  09A6               	comf	___awmod@dividend,f
  3908  0E62  09A7               	comf	___awmod@dividend+1,f
  3909  0E63  0AA6               	incf	___awmod@dividend,f
  3910  0E64  1903               	skipnz
  3911  0E65  0AA7               	incf	___awmod@dividend+1,f
  3912  0E66  01AA               	clrf	___awmod@sign
  3913  0E67  0AAA               	incf	___awmod@sign,f
  3914  0E68                     l2220:	
  3915  0E68  1FA5               	btfss	___awmod@divisor+1,7
  3916  0E69  2E6F               	goto	l2224
  3917  0E6A  09A4               	comf	___awmod@divisor,f
  3918  0E6B  09A5               	comf	___awmod@divisor+1,f
  3919  0E6C  0AA4               	incf	___awmod@divisor,f
  3920  0E6D  1903               	skipnz
  3921  0E6E  0AA5               	incf	___awmod@divisor+1,f
  3922  0E6F                     l2224:	
  3923  0E6F  0824               	movf	___awmod@divisor,w
  3924  0E70  0425               	iorwf	___awmod@divisor+1,w
  3925  0E71  1903               	btfsc	3,2
  3926  0E72  2E9C               	goto	l2242
  3927  0E73  01A9               	clrf	___awmod@counter
  3928  0E74  0AA9               	incf	___awmod@counter,f
  3929  0E75                     l2232:	
  3930  0E75  1BA5               	btfsc	___awmod@divisor+1,7
  3931  0E76  2E83               	goto	l2234
  3932  0E77  3001               	movlw	1
  3933  0E78                     u2295:	
  3934  0E78  1003               	clrc
  3935  0E79  0DA4               	rlf	___awmod@divisor,f
  3936  0E7A  0DA5               	rlf	___awmod@divisor+1,f
  3937  0E7B  3EFF               	addlw	-1
  3938  0E7C  1D03               	skipz
  3939  0E7D  2E78               	goto	u2295
  3940  0E7E  3001               	movlw	1
  3941  0E7F  00A8               	movwf	??___awmod
  3942  0E80  0828               	movf	??___awmod,w
  3943  0E81  07A9               	addwf	___awmod@counter,f
  3944  0E82  2E75               	goto	l2232
  3945  0E83                     l2234:	
  3946  0E83  0825               	movf	___awmod@divisor+1,w
  3947  0E84  0227               	subwf	___awmod@dividend+1,w
  3948  0E85  1D03               	skipz
  3949  0E86  2E89               	goto	u2315
  3950  0E87  0824               	movf	___awmod@divisor,w
  3951  0E88  0226               	subwf	___awmod@dividend,w
  3952  0E89                     u2315:	
  3953  0E89  1C03               	skipc
  3954  0E8A  2E91               	goto	l2238
  3955  0E8B  0824               	movf	___awmod@divisor,w
  3956  0E8C  02A6               	subwf	___awmod@dividend,f
  3957  0E8D  0825               	movf	___awmod@divisor+1,w
  3958  0E8E  1C03               	skipc
  3959  0E8F  03A7               	decf	___awmod@dividend+1,f
  3960  0E90  02A7               	subwf	___awmod@dividend+1,f
  3961  0E91                     l2238:	
  3962  0E91  3001               	movlw	1
  3963  0E92                     u2325:	
  3964  0E92  1003               	clrc
  3965  0E93  0CA5               	rrf	___awmod@divisor+1,f
  3966  0E94  0CA4               	rrf	___awmod@divisor,f
  3967  0E95  3EFF               	addlw	-1
  3968  0E96  1D03               	skipz
  3969  0E97  2E92               	goto	u2325
  3970  0E98  3001               	movlw	1
  3971  0E99  02A9               	subwf	___awmod@counter,f
  3972  0E9A  1D03               	btfss	3,2
  3973  0E9B  2E83               	goto	l2234
  3974  0E9C                     l2242:	
  3975  0E9C  082A               	movf	___awmod@sign,w
  3976  0E9D  1903               	btfsc	3,2
  3977  0E9E  2EA4               	goto	l2246
  3978  0E9F  09A6               	comf	___awmod@dividend,f
  3979  0EA0  09A7               	comf	___awmod@dividend+1,f
  3980  0EA1  0AA6               	incf	___awmod@dividend,f
  3981  0EA2  1903               	skipnz
  3982  0EA3  0AA7               	incf	___awmod@dividend+1,f
  3983  0EA4                     l2246:	
  3984  0EA4  0827               	movf	___awmod@dividend+1,w
  3985  0EA5  00A5               	movwf	?___awmod+1
  3986  0EA6  0826               	movf	___awmod@dividend,w
  3987  0EA7  00A4               	movwf	?___awmod
  3988  0EA8  0008               	return
  3989  0EA9                     __end_of___awmod:	
  3990                           
  3991                           	psect	text12
  3992  0EA9                     __ptext12:	
  3993 ;; *************** function ___awdiv *****************
  3994 ;; Defined at:
  3995 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  divisor         2    0[BANK0 ] int 
  3998 ;;  dividend        2    2[BANK0 ] int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  quotient        2    7[BANK0 ] int 
  4001 ;;  sign            1    6[BANK0 ] unsigned char 
  4002 ;;  counter         1    5[BANK0 ] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  2    0[BANK0 ] int 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1
  4012 ;;      Params:         0       4       0
  4013 ;;      Locals:         0       4       0
  4014 ;;      Temps:          0       1       0
  4015 ;;      Totals:         0       9       0
  4016 ;;Total ram usage:        9 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_main
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function ___awdiv
  4027  0EA9                     ___awdiv:	
  4028                           
  4029                           ;incstack = 0
  4030                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4031  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0EAB  01A6               	clrf	___awdiv@sign
  4034  0EAC  1FA1               	btfss	___awdiv@divisor+1,7
  4035  0EAD  2EB5               	goto	l2176
  4036  0EAE  09A0               	comf	___awdiv@divisor,f
  4037  0EAF  09A1               	comf	___awdiv@divisor+1,f
  4038  0EB0  0AA0               	incf	___awdiv@divisor,f
  4039  0EB1  1903               	skipnz
  4040  0EB2  0AA1               	incf	___awdiv@divisor+1,f
  4041  0EB3  01A6               	clrf	___awdiv@sign
  4042  0EB4  0AA6               	incf	___awdiv@sign,f
  4043  0EB5                     l2176:	
  4044  0EB5  1FA3               	btfss	___awdiv@dividend+1,7
  4045  0EB6  2EC0               	goto	l2182
  4046  0EB7  09A2               	comf	___awdiv@dividend,f
  4047  0EB8  09A3               	comf	___awdiv@dividend+1,f
  4048  0EB9  0AA2               	incf	___awdiv@dividend,f
  4049  0EBA  1903               	skipnz
  4050  0EBB  0AA3               	incf	___awdiv@dividend+1,f
  4051  0EBC  3001               	movlw	1
  4052  0EBD  00A4               	movwf	??___awdiv
  4053  0EBE  0824               	movf	??___awdiv,w
  4054  0EBF  06A6               	xorwf	___awdiv@sign,f
  4055  0EC0                     l2182:	
  4056  0EC0  01A7               	clrf	___awdiv@quotient
  4057  0EC1  01A8               	clrf	___awdiv@quotient+1
  4058  0EC2  0820               	movf	___awdiv@divisor,w
  4059  0EC3  0421               	iorwf	___awdiv@divisor+1,w
  4060  0EC4  1903               	btfsc	3,2
  4061  0EC5  2EF7               	goto	l2204
  4062  0EC6  01A5               	clrf	___awdiv@counter
  4063  0EC7  0AA5               	incf	___awdiv@counter,f
  4064  0EC8                     l2192:	
  4065  0EC8  1BA1               	btfsc	___awdiv@divisor+1,7
  4066  0EC9  2ED6               	goto	l2194
  4067  0ECA  3001               	movlw	1
  4068  0ECB                     u2195:	
  4069  0ECB  1003               	clrc
  4070  0ECC  0DA0               	rlf	___awdiv@divisor,f
  4071  0ECD  0DA1               	rlf	___awdiv@divisor+1,f
  4072  0ECE  3EFF               	addlw	-1
  4073  0ECF  1D03               	skipz
  4074  0ED0  2ECB               	goto	u2195
  4075  0ED1  3001               	movlw	1
  4076  0ED2  00A4               	movwf	??___awdiv
  4077  0ED3  0824               	movf	??___awdiv,w
  4078  0ED4  07A5               	addwf	___awdiv@counter,f
  4079  0ED5  2EC8               	goto	l2192
  4080  0ED6                     l2194:	
  4081  0ED6  3001               	movlw	1
  4082  0ED7                     u2215:	
  4083  0ED7  1003               	clrc
  4084  0ED8  0DA7               	rlf	___awdiv@quotient,f
  4085  0ED9  0DA8               	rlf	___awdiv@quotient+1,f
  4086  0EDA  3EFF               	addlw	-1
  4087  0EDB  1D03               	skipz
  4088  0EDC  2ED7               	goto	u2215
  4089  0EDD  0821               	movf	___awdiv@divisor+1,w
  4090  0EDE  0223               	subwf	___awdiv@dividend+1,w
  4091  0EDF  1D03               	skipz
  4092  0EE0  2EE3               	goto	u2225
  4093  0EE1  0820               	movf	___awdiv@divisor,w
  4094  0EE2  0222               	subwf	___awdiv@dividend,w
  4095  0EE3                     u2225:	
  4096  0EE3  1C03               	skipc
  4097  0EE4  2EEC               	goto	l2200
  4098  0EE5  0820               	movf	___awdiv@divisor,w
  4099  0EE6  02A2               	subwf	___awdiv@dividend,f
  4100  0EE7  0821               	movf	___awdiv@divisor+1,w
  4101  0EE8  1C03               	skipc
  4102  0EE9  03A3               	decf	___awdiv@dividend+1,f
  4103  0EEA  02A3               	subwf	___awdiv@dividend+1,f
  4104  0EEB  1427               	bsf	___awdiv@quotient,0
  4105  0EEC                     l2200:	
  4106  0EEC  3001               	movlw	1
  4107  0EED                     u2235:	
  4108  0EED  1003               	clrc
  4109  0EEE  0CA1               	rrf	___awdiv@divisor+1,f
  4110  0EEF  0CA0               	rrf	___awdiv@divisor,f
  4111  0EF0  3EFF               	addlw	-1
  4112  0EF1  1D03               	skipz
  4113  0EF2  2EED               	goto	u2235
  4114  0EF3  3001               	movlw	1
  4115  0EF4  02A5               	subwf	___awdiv@counter,f
  4116  0EF5  1D03               	btfss	3,2
  4117  0EF6  2ED6               	goto	l2194
  4118  0EF7                     l2204:	
  4119  0EF7  0826               	movf	___awdiv@sign,w
  4120  0EF8  1903               	btfsc	3,2
  4121  0EF9  2EFF               	goto	l2208
  4122  0EFA  09A7               	comf	___awdiv@quotient,f
  4123  0EFB  09A8               	comf	___awdiv@quotient+1,f
  4124  0EFC  0AA7               	incf	___awdiv@quotient,f
  4125  0EFD  1903               	skipnz
  4126  0EFE  0AA8               	incf	___awdiv@quotient+1,f
  4127  0EFF                     l2208:	
  4128  0EFF  0828               	movf	___awdiv@quotient+1,w
  4129  0F00  00A1               	movwf	?___awdiv+1
  4130  0F01  0827               	movf	___awdiv@quotient,w
  4131  0F02  00A0               	movwf	?___awdiv
  4132  0F03  0008               	return
  4133  0F04                     __end_of___awdiv:	
  4134                           
  4135                           	psect	text13
  4136  0E1A                     __ptext13:	
  4137 ;; *************** function _LCD_String *****************
  4138 ;; Defined at:
  4139 ;;		line 86 in file "lcd.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  st              1    wreg     PTR unsigned char 
  4142 ;;		 -> str01(10), 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  st              1    5[BANK0 ] PTR unsigned char 
  4145 ;;		 -> str01(10), 
  4146 ;;  i               1    6[BANK0 ] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1
  4156 ;;      Params:         0       0       0
  4157 ;;      Locals:         0       2       0
  4158 ;;      Temps:          0       1       0
  4159 ;;      Totals:         0       3       0
  4160 ;;Total ram usage:        3 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; Hardware stack levels required when called:    2
  4163 ;; This function calls:
  4164 ;;		_sendbyte
  4165 ;; This function is called by:
  4166 ;;		_main
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           
  4171                           ;psect for function _LCD_String
  4172  0E1A                     _LCD_String:	
  4173                           
  4174                           ;incstack = 0
  4175                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4176                           ;LCD_String@st stored from wreg
  4177  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0E1C  00A5               	movwf	LCD_String@st
  4180                           
  4181                           ;lcd.c: 88: unsigned char i=0;
  4182  0E1D  01A6               	clrf	LCD_String@i
  4183  0E1E                     l1688:	
  4184                           ;lcd.c: 89: while(st[i]!=0)
  4185                           
  4186  0E1E  0826               	movf	LCD_String@i,w
  4187  0E1F  0725               	addwf	LCD_String@st,w
  4188  0E20  00A4               	movwf	??_LCD_String
  4189  0E21  0824               	movf	??_LCD_String,w
  4190  0E22  0084               	movwf	4
  4191  0E23  1383               	bcf	3,7	;select IRP bank0
  4192  0E24  0800               	movf	0,w
  4193  0E25  1903               	btfsc	3,2
  4194  0E26  0008               	return
  4195                           
  4196                           ;lcd.c: 90: {
  4197                           ;lcd.c: 91: sendbyte(st[i],1);
  4198  0E27  01A2               	clrf	sendbyte@mode
  4199  0E28  0AA2               	incf	sendbyte@mode,f
  4200  0E29  0826               	movf	LCD_String@i,w
  4201  0E2A  0725               	addwf	LCD_String@st,w
  4202  0E2B  00A4               	movwf	??_LCD_String
  4203  0E2C  0824               	movf	??_LCD_String,w
  4204  0E2D  0084               	movwf	4
  4205  0E2E  1383               	bcf	3,7	;select IRP bank0
  4206  0E2F  0800               	movf	0,w
  4207  0E30  158A  258D  158A   	fcall	_sendbyte
  4208                           
  4209                           ;lcd.c: 92: i++;
  4210  0E33  3001               	movlw	1
  4211  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0E36  00A4               	movwf	??_LCD_String
  4214  0E37  0824               	movf	??_LCD_String,w
  4215  0E38  07A6               	addwf	LCD_String@i,f
  4216  0E39  2E1E               	goto	l1688
  4217  0E3A                     __end_of_LCD_String:	
  4218                           
  4219                           	psect	text14
  4220  001C                     __ptext14:	
  4221 ;; *************** function _LCD_Init *****************
  4222 ;; Defined at:
  4223 ;;		line 22 in file "lcd.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1
  4237 ;;      Params:         0       0       0
  4238 ;;      Locals:         0       0       0
  4239 ;;      Temps:          0       2       0
  4240 ;;      Totals:         0       2       0
  4241 ;;Total ram usage:        2 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    2
  4244 ;; This function calls:
  4245 ;;		_sendbyte
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _LCD_Init
  4253  001C                     _LCD_Init:	
  4254                           
  4255                           ;lcd.c: 24: _delay((unsigned long)((50)*(4000000/4000.0)));
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4259  001C  3041               	movlw	65
  4260  001D  1283               	bcf	3,5	;RP0=0, select bank0
  4261  001E  1303               	bcf	3,6	;RP1=0, select bank0
  4262  001F  00A5               	movwf	??_LCD_Init+1
  4263  0020  30EE               	movlw	238
  4264  0021  00A4               	movwf	??_LCD_Init
  4265  0022                     u2817:	
  4266  0022  0BA4               	decfsz	??_LCD_Init,f
  4267  0023  2822               	goto	u2817
  4268  0024  0BA5               	decfsz	??_LCD_Init+1,f
  4269  0025  2822               	goto	u2817
  4270                           
  4271                           ;lcd.c: 25: sendbyte(0b00110000,0);
  4272  0026  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0027  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0028  01A2               	clrf	sendbyte@mode
  4275  0029  3030               	movlw	48
  4276  002A  158A  258D  118A   	fcall	_sendbyte
  4277                           
  4278                           ;lcd.c: 26: _delay((unsigned long)((50)*(4000000/4000.0)));
  4279  002D  3041               	movlw	65
  4280  002E  1283               	bcf	3,5	;RP0=0, select bank0
  4281  002F  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0030  00A5               	movwf	??_LCD_Init+1
  4283  0031  30EE               	movlw	238
  4284  0032  00A4               	movwf	??_LCD_Init
  4285  0033                     u2827:	
  4286  0033  0BA4               	decfsz	??_LCD_Init,f
  4287  0034  2833               	goto	u2827
  4288  0035  0BA5               	decfsz	??_LCD_Init+1,f
  4289  0036  2833               	goto	u2827
  4290                           
  4291                           ;lcd.c: 28: sendbyte(0b00110000,0);
  4292  0037  1283               	bcf	3,5	;RP0=0, select bank0
  4293  0038  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0039  01A2               	clrf	sendbyte@mode
  4295  003A  3030               	movlw	48
  4296  003B  158A  258D  118A   	fcall	_sendbyte
  4297                           
  4298                           ;lcd.c: 29: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4299  003E  300C               	movlw	12
  4300  003F  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0040  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0041  00A4               	movwf	??_LCD_Init
  4303  0042                     u2837:	
  4304  0042  0BA4               	decfsz	??_LCD_Init,f
  4305  0043  2842               	goto	u2837
  4306  0044  2845               	nop2
  4307                           
  4308                           ;lcd.c: 31: sendbyte(0b00110000,0);
  4309  0045  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0046  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0047  01A2               	clrf	sendbyte@mode
  4312  0048  3030               	movlw	48
  4313  0049  158A  258D  118A   	fcall	_sendbyte
  4314                           
  4315                           ;lcd.c: 32: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4316  004C  300C               	movlw	12
  4317  004D  1283               	bcf	3,5	;RP0=0, select bank0
  4318  004E  1303               	bcf	3,6	;RP1=0, select bank0
  4319  004F  00A4               	movwf	??_LCD_Init
  4320  0050                     u2847:	
  4321  0050  0BA4               	decfsz	??_LCD_Init,f
  4322  0051  2850               	goto	u2847
  4323  0052  2853               	nop2
  4324                           
  4325                           ;lcd.c: 35: sendbyte(0b00111000,0);
  4326  0053  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0054  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0055  01A2               	clrf	sendbyte@mode
  4329  0056  3038               	movlw	56
  4330  0057  158A  258D  118A   	fcall	_sendbyte
  4331                           
  4332                           ;lcd.c: 37: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4333  005A  300C               	movlw	12
  4334  005B  1283               	bcf	3,5	;RP0=0, select bank0
  4335  005C  1303               	bcf	3,6	;RP1=0, select bank0
  4336  005D  00A4               	movwf	??_LCD_Init
  4337  005E                     u2857:	
  4338  005E  0BA4               	decfsz	??_LCD_Init,f
  4339  005F  285E               	goto	u2857
  4340  0060  2861               	nop2
  4341                           
  4342                           ;lcd.c: 40: sendbyte(0b00001100,0);
  4343  0061  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0062  1303               	bcf	3,6	;RP1=0, select bank0
  4345  0063  01A2               	clrf	sendbyte@mode
  4346  0064  300C               	movlw	12
  4347  0065  158A  258D  118A   	fcall	_sendbyte
  4348                           
  4349                           ;lcd.c: 41: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4350  0068  300C               	movlw	12
  4351  0069  1283               	bcf	3,5	;RP0=0, select bank0
  4352  006A  1303               	bcf	3,6	;RP1=0, select bank0
  4353  006B  00A4               	movwf	??_LCD_Init
  4354  006C                     u2867:	
  4355  006C  0BA4               	decfsz	??_LCD_Init,f
  4356  006D  286C               	goto	u2867
  4357  006E  286F               	nop2
  4358                           
  4359                           ;lcd.c: 44: sendbyte(0b00000001,0);
  4360  006F  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0070  1303               	bcf	3,6	;RP1=0, select bank0
  4362  0071  01A2               	clrf	sendbyte@mode
  4363  0072  3001               	movlw	1
  4364  0073  158A  258D  118A   	fcall	_sendbyte
  4365                           
  4366                           ;lcd.c: 45: _delay((unsigned long)((2)*(4000000/4000.0)));
  4367  0076  3003               	movlw	3
  4368  0077  1283               	bcf	3,5	;RP0=0, select bank0
  4369  0078  1303               	bcf	3,6	;RP1=0, select bank0
  4370  0079  00A5               	movwf	??_LCD_Init+1
  4371  007A  3097               	movlw	151
  4372  007B  00A4               	movwf	??_LCD_Init
  4373  007C                     u2877:	
  4374  007C  0BA4               	decfsz	??_LCD_Init,f
  4375  007D  287C               	goto	u2877
  4376  007E  0BA5               	decfsz	??_LCD_Init+1,f
  4377  007F  287C               	goto	u2877
  4378  0080  0000               	nop
  4379                           
  4380                           ;lcd.c: 49: sendbyte(0b00000111,0);
  4381  0081  1283               	bcf	3,5	;RP0=0, select bank0
  4382  0082  1303               	bcf	3,6	;RP1=0, select bank0
  4383  0083  01A2               	clrf	sendbyte@mode
  4384  0084  3007               	movlw	7
  4385  0085  158A  258D  118A   	fcall	_sendbyte
  4386                           
  4387                           ;lcd.c: 50: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4388  0088  300C               	movlw	12
  4389  0089  1283               	bcf	3,5	;RP0=0, select bank0
  4390  008A  1303               	bcf	3,6	;RP1=0, select bank0
  4391  008B  00A4               	movwf	??_LCD_Init
  4392  008C                     u2887:	
  4393  008C  0BA4               	decfsz	??_LCD_Init,f
  4394  008D  288C               	goto	u2887
  4395  008E  288F               	nop2
  4396                           
  4397                           ;lcd.c: 52: sendbyte(0b00010100,0);
  4398  008F  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0090  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0091  01A2               	clrf	sendbyte@mode
  4401  0092  3014               	movlw	20
  4402  0093  158A  258D  118A   	fcall	_sendbyte
  4403                           
  4404                           ;lcd.c: 53: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4405  0096  300C               	movlw	12
  4406  0097  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0098  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0099  00A4               	movwf	??_LCD_Init
  4409  009A                     u2897:	
  4410  009A  0BA4               	decfsz	??_LCD_Init,f
  4411  009B  289A               	goto	u2897
  4412  009C  289D               	nop2
  4413                           
  4414                           ;lcd.c: 55: sendbyte(0b00000010,0);
  4415  009D  1283               	bcf	3,5	;RP0=0, select bank0
  4416  009E  1303               	bcf	3,6	;RP1=0, select bank0
  4417  009F  01A2               	clrf	sendbyte@mode
  4418  00A0  3002               	movlw	2
  4419  00A1  158A  258D  118A   	fcall	_sendbyte
  4420                           
  4421                           ;lcd.c: 56: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4422  00A4  300C               	movlw	12
  4423  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  4424  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  4425  00A7  00A4               	movwf	??_LCD_Init
  4426  00A8                     u2907:	
  4427  00A8  0BA4               	decfsz	??_LCD_Init,f
  4428  00A9  28A8               	goto	u2907
  4429  00AA  28AB               	nop2
  4430                           
  4431                           ;lcd.c: 59: sendbyte(0b01000000,0);
  4432  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  4433  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  4434  00AD  01A2               	clrf	sendbyte@mode
  4435  00AE  3040               	movlw	64
  4436  00AF  158A  258D  118A   	fcall	_sendbyte
  4437                           
  4438                           ;lcd.c: 60: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4439  00B2  300C               	movlw	12
  4440  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  4441  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  4442  00B5  00A4               	movwf	??_LCD_Init
  4443  00B6                     u2917:	
  4444  00B6  0BA4               	decfsz	??_LCD_Init,f
  4445  00B7  28B6               	goto	u2917
  4446  00B8  28B9               	nop2
  4447                           
  4448                           ;lcd.c: 62: sendbyte(0X06,0);
  4449  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  4450  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  4451  00BB  01A2               	clrf	sendbyte@mode
  4452  00BC  3006               	movlw	6
  4453  00BD  158A  258D  118A   	fcall	_sendbyte
  4454                           
  4455                           ;lcd.c: 64: sendbyte(0b10000000,0);
  4456  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  4457  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  4458  00C2  01A2               	clrf	sendbyte@mode
  4459  00C3  3080               	movlw	128
  4460  00C4  158A  258D         	fcall	_sendbyte
  4461  00C6  0008               	return
  4462  00C7                     __end_of_LCD_Init:	
  4463                           
  4464                           	psect	text15
  4465  0D8D                     __ptext15:	
  4466 ;; *************** function _sendbyte *****************
  4467 ;; Defined at:
  4468 ;;		line 12 in file "lcd.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  c               1    wreg     unsigned char 
  4471 ;;  mode            1    2[BANK0 ] unsigned char 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  c               1    3[BANK0 ] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1
  4483 ;;      Params:         0       1       0
  4484 ;;      Locals:         0       1       0
  4485 ;;      Temps:          0       0       0
  4486 ;;      Totals:         0       2       0
  4487 ;;Total ram usage:        2 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    1
  4490 ;; This function calls:
  4491 ;;		_LCD_delay
  4492 ;; This function is called by:
  4493 ;;		_LCD_Init
  4494 ;;		_LCD_SetPos
  4495 ;;		_LCD_String
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _sendbyte
  4501  0D8D                     _sendbyte:	
  4502                           
  4503                           ;incstack = 0
  4504                           ; Regs used in _sendbyte: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4505                           ;sendbyte@c stored from wreg
  4506  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0D8F  00A3               	movwf	sendbyte@c
  4509                           
  4510                           ;lcd.c: 14: PORTB=c;
  4511  0D90  0823               	movf	sendbyte@c,w
  4512  0D91  0086               	movwf	6	;volatile
  4513                           
  4514                           ;lcd.c: 15: if(mode==0) RC6=0;
  4515  0D92  0822               	movf	sendbyte@mode,w
  4516  0D93  1D03               	btfss	3,2
  4517  0D94  2D97               	goto	l16
  4518  0D95  1307               	bcf	7,6	;volatile
  4519  0D96  2D98               	goto	l17
  4520  0D97                     l16:	
  4521                           
  4522                           ;lcd.c: 16: else RC6=1;
  4523  0D97  1707               	bsf	7,6	;volatile
  4524  0D98                     l17:	
  4525                           
  4526                           ;lcd.c: 17: RC7=0;
  4527  0D98  1387               	bcf	7,7	;volatile
  4528                           
  4529                           ;lcd.c: 18: LCD_delay();
  4530  0D99  158A  25C9         	fcall	_LCD_delay
  4531                           
  4532                           ;lcd.c: 19: RC7=1;
  4533  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0D9D  1787               	bsf	7,7	;volatile
  4536  0D9E  0008               	return
  4537  0D9F                     __end_of_sendbyte:	
  4538                           
  4539                           	psect	text16
  4540  0DC9                     __ptext16:	
  4541 ;; *************** function _LCD_delay *****************
  4542 ;; Defined at:
  4543 ;;		line 7 in file "lcd.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  i               2    0[BANK0 ] int 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, btemp+1
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1
  4557 ;;      Params:         0       0       0
  4558 ;;      Locals:         0       2       0
  4559 ;;      Temps:          0       0       0
  4560 ;;      Totals:         0       2       0
  4561 ;;Total ram usage:        2 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_sendbyte
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _LCD_delay
  4572  0DC9                     _LCD_delay:	
  4573                           
  4574                           ;lcd.c: 9: int i;
  4575                           ;lcd.c: 10: for(i=0;i<19;i++);
  4576                           
  4577                           ;incstack = 0
  4578                           ; Regs used in _LCD_delay: [wreg+status,2+btemp+1]
  4579  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  4580  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  4581  0DCB  01A0               	clrf	LCD_delay@i
  4582  0DCC  01A1               	clrf	LCD_delay@i+1
  4583  0DCD                     L18:	
  4584  0DCD  0821               	movf	LCD_delay@i+1,w
  4585  0DCE  3A80               	xorlw	128
  4586  0DCF  00FF               	movwf	127
  4587  0DD0  3080               	movlw	128
  4588  0DD1  027F               	subwf	127,w
  4589  0DD2  1D03               	skipz
  4590  0DD3  2DD6               	goto	u1375
  4591  0DD4  3013               	movlw	19
  4592  0DD5  0220               	subwf	LCD_delay@i,w
  4593  0DD6                     u1375:	
  4594  0DD6  1803               	btfsc	3,0
  4595  0DD7  0008               	return
  4596  0DD8  3001               	movlw	1
  4597  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0DDB  07A0               	addwf	LCD_delay@i,f
  4600  0DDC  1803               	skipnc
  4601  0DDD  0AA1               	incf	LCD_delay@i+1,f
  4602  0DDE  3000               	movlw	0
  4603  0DDF  07A1               	addwf	LCD_delay@i+1,f
  4604  0DE0  2DCD               	goto	L18
  4605  0DE1                     __end_of_LCD_delay:	
  4606  007E                     btemp	set	126	;btemp
  4607  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     67      79
    BANK1            94      0      34

Pointer List with Targets:

    LCD_String@st	PTR unsigned char  size(1) Largest target is 10
		 -> str01(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    _segchar->_sendbytee
    _sendbytee->___awmod
    _LCD_SetPos->_sendbyte
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___awmod->___bmul
    _LCD_String->_sendbyte
    _LCD_Init->_sendbyte
    _sendbyte->_LCD_delay

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   20253
                                             54 BANK0     13    13      0
                           _LCD_Init
                         _LCD_SetPos
                         _LCD_String
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                              _delay
                            _segchar
                          _sendbytee
 ---------------------------------------------------------------------------------
 (1) _segchar                                              3     1      2    4886
                                             15 BANK0      3     1      2
                         _LCD_SetPos
                          _sendbytee
 ---------------------------------------------------------------------------------
 (1) _sendbytee                                            4     3      1    2111
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_SetPos                                           2     1      1    2700
                                              4 BANK0      2     1      1
                           _sendbyte
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1743
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                             40 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2206
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2160
                                             24 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     304
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     932
                                              4 BANK0      7     3      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     512
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           3     3      0    1002
                                              4 BANK0      3     3      0
                           _sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     885
                                              4 BANK0      2     2      0
                           _sendbyte
 ---------------------------------------------------------------------------------
 (3) _sendbyte                                             2     1      1     885
                                              2 BANK0      2     1      1
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (4) _LCD_delay                                            2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _sendbyte
       _LCD_delay
   _LCD_SetPos
     _sendbyte
       _LCD_delay
   _LCD_String
     _sendbyte
       _LCD_delay
   ___awdiv
   ___awmod
     ___bmul (ARG)
   ___bmul
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _delay
   _segchar
     _LCD_SetPos
       _sendbyte
         _LCD_delay
     _sendbytee
       ___awdiv (ARG)
       ___awmod (ARG)
         ___bmul (ARG)
       ___bmul (ARG)
   _sendbytee
     ___awdiv (ARG)
     ___awmod (ARG)
       ___bmul (ARG)
     ___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0      22       7       36.2%
BITBANK1            5E      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     43      4F       5       84.0%
BITBANK0            5E      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      71       8        0.0%
ABS                  0      0      71       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Oct 03 23:35:19 2020

                      _t 0063                        _y 0064                        pc 0002  
         ___bmul@product 0022              __CFG_CP$OFF 0000              ?_LCD_SetPos 0024  
                     l16 0D97                       l17 0D98                       l28 0E19  
                     l96 0DEB                       l97 0DEC                       _GO 00FA  
           ___awdiv@sign 0026                       fsr 0004              ?_LCD_String 0020  
                    l207 07E5                      l217 02DE                      l480 0FE6  
                    l396 0F51                      l397 0F59                      l389 0F3C  
                    _RC6 003E                      _RC7 003F                      fsr0 0004  
                    indf 0000             ___awmod@sign 002A             __CFG_FOSC$HS 0000  
                   S2558 0800             ___ftdiv@cntr 0042             ___ftdiv@sign 0047  
                   l2022 06FD                     l2014 06E6                     l2200 0EEC  
                   l2112 079F                     l2104 0788                     l2008 06E1  
                   l2204 0EF7                     l2220 0E68                     l2052 0733  
                   l2044 071C                     l2038 0717                     l2208 0EFF  
                   l2232 0E75                     l2224 0E6F                     l2160 0DA9  
                   l2320 01FB                     l2304 01AC                     l2128 07B9  
                   l2144 07D2                     l2234 0E83                     l2242 0E9C  
                   l1602 0E00                     l2082 0769                     l2074 0752  
                   l2156 0DA3                     l2332 0223                     l2316 01EB  
                   l1604 0E06                     l2068 074D                     l2420 027E  
                   l2182 0EC0                     l2246 0EA4                     l2238 0E91  
                   l1630 0F21                     l2262 00F5                     l1702 04B7  
                   l2192 0EC8                     l2176 0EB5                     l1640 0F4B  
                   l1632 0F26                     l1624 0F0E                     l2256 00DF  
                   l2328 0213                     l1608 0E0F                     l2440 02D5  
                   l2432 02AC                     l2194 0ED6                     l2098 0783  
                   l2442 02DB                     l1628 0F15                     l2284 0159  
                   l2276 013A                     l2380 0FF7                     l2348 0F8C  
                   l1812 0583                     l1804 056C                     l2428 02A1  
                   l1638 0F41                     l2374 0FDB                     l2366 0FBE  
                   l1902 0625                     l1718 04D2                     l2376 0FE9  
                   l2368 0FCE                     l1752 0517                     l1744 0500  
                   l2298 0196                     l1842 05B9                     l1834 05A2  
                   l1738 04FB                     l2490 0417                     l2556 07D9  
                   l1932 065B                     l1924 0644                     l1828 059D  
                   l1918 063F                     l1782 054D                     l1774 0536  
                   l1688 0E1E                     l1872 05EF                     l1864 05D8  
                   l1768 0531                     l1962 0691                     l1954 067A  
                   l1858 05D3                     l1948 0675                     l1894 060E  
                   l1798 0567                     l1992 06C7                     l1984 06B0  
                   l1888 0609                     l1978 06AB                     _ADON 00F8  
                   _CHS0 00FB                     _CHS1 00FC                     _CHS2 00FD  
                   u2215 0ED7                     u2225 0EE3                     u2235 0EED  
                   u2315 0E89                     u1515 0F60                     u1435 0F1A  
                   u2325 0E92                     u2405 014C                     u1375 0DD6  
                   u1455 0F35                     u2415 015A                     u2505 0204  
                   u1545 0011                     u2195 0ECB                     u1475 0F44  
                   u2295 0E78                     u2375 0107                     u2455 01B8  
                   u2615 0FBF                     u2385 0119                     u2545 0224  
                   u2465 01CA                     u2395 013B                     u2555 022C  
                   u2645 0FDD                     u2495 01FC                     u2807 0DF3  
                   u2817 0022                     u2585 0F93                     u2737 028D  
                   u2907 00A8                     u2827 0033                     u2747 02BF  
                   u2917 00B6                     u2837 0042                     u2757 02E4  
                   u2847 0050                     u2767 02F1                     u2857 005E  
                   u2777 0300                     u2867 006C                     u2787 0411  
                   u2877 007C                     u2797 04B0                     u2887 008C  
                   u2897 009A                     _main 0250             ___ftpack@arg 0020  
           ___ftpack@exp 0023                     btemp 007E             main@adc_data 0060  
                   start 0000       __size_of_LCD_delay 0018        ___bmul@multiplier 0023  
           ___ftmul@cntr 0036             ___ftmul@sign 0037             ___fttol@exp1 0055  
           ___fttol@lval 0051              LCD_SetPos@x 0025              LCD_SetPos@y 0024  
       __end_of_LCD_Init 00C7                    _ADCS0 00FE                    _ADCS1 00FF  
                  ?_main 0020          __end_of___awdiv 0F04                    _ADRES 001E  
          __CFG_WDTE$OFF 0000          __end_of___awmod 0EA9          __end_of___ftdiv 017E  
        __end_of___ftmul 0250          ___awdiv@divisor 0020          __end_of___fttol 1000  
                  _PCFG0 04F8                    _PCFG1 04F9                    _PCFG2 04FA  
        ___awdiv@counter 0025                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
          __CFG_PWRTE$ON 0000              LCD_String@i 0026                    _delay 0004  
                  _str01 0065                    _str02 00A0            ___ftpack@sign 0024  
                  main@l 0061          __end_of_segchar 07E6           __CFG_BOREN$OFF 0000  
                  pclath 000A          segchar@adc_data 002F      __size_of_LCD_SetPos 001E  
          main@adc_data2 005F                    status 0003                    wtemp0 007E  
    __size_of_LCD_String 0020          __initialization 07E6             __end_of_main 04B6  
                 ??_main 0056            ___fttol@sign1 0050        __end_of_LCD_delay 0DE1  
                 ?_delay 0020         ___awdiv@dividend 0022         __end_of___ftpack 0F72  
       __end_of___lwtoft 0DC9             LCD_String@st 0025                   ___bmul 0D9F  
              ??___awdiv 0024                ??___awmod 0028                ??___ftdiv 003E  
              ??___ftmul 002E                ??___fttol 004C                   delay@i 0020  
       ___awdiv@quotient 0027          ___awmod@divisor 0024          ___awmod@counter 0029  
                 main@ch 005A    ___ftmul@f3_as_product 0033         __end_of_sendbyte 0D9F  
              ??_segchar 0031  __end_of__initialization 07FD                ?_LCD_Init 0020  
             ___ftdiv@f1 003B               ___ftdiv@f2 0038               ___ftdiv@f3 0043  
    ___bmul@multiplicand 0020               ___ftmul@f1 0028               ___ftmul@f2 002B  
             ___fttol@f1 0048           __pcstackCOMMON 0000             __pidataBANK1 0E3A  
          __end_of_delay 001C             ??_LCD_SetPos 0000             ??_LCD_String 0024  
             ___lwtoft@c 0028                  ??_delay 0000               __pbssBANK0 0063  
             ??_LCD_Init 0024       __end_of_LCD_SetPos 0E1A       __end_of_LCD_String 0E3A  
             __pmaintext 0250                  ?___bmul 0020       __size_of_sendbytee 001B  
              ?___ftpack 0020                ?___lwtoft 0028                ?_sendbyte 0022  
        __size_of___bmul 0013                  ___awdiv 0EA9                  ___awmod 0E5C  
                ___ftdiv 00C7                  ___ftmul 017E                  ___fttol 0F72  
             ??___ftpack 0025                  __ptext1 04B6                  __ptext2 0DE1  
                __ptext3 0DFC                  __ptext4 0004                  __ptext5 0DB2  
                __ptext6 0F72                  __ptext7 017E                  __ptext8 00C7  
                __ptext9 0F04               ??___lwtoft 002B         ___awmod@dividend 0026  
                _segchar 04B6                _LCD_delay 0DC9     end_of_initialization 07FD  
      __end_of_sendbytee 0DFC               ??_sendbyte 0000                _PORTCbits 0007  
             ?_LCD_delay 0020              ___ftdiv@exp 0046        __size_of_LCD_Init 00AB  
            ___ftmul@exp 0032           __end_of___bmul 0DB2               LCD_delay@i 0020  
    start_initialization 07E6                 ??___bmul 0021               init_fetch0 0D7D  
            __pdataBANK1 00A0            sendbytee@mode 002B        __size_of___ftpack 006E  
              ___latbits 0001        __size_of___lwtoft 0017            __pcstackBANK0 0020  
            ??_LCD_delay 0000                 ?___awdiv 0020                 ?___awmod 0024  
      __size_of_sendbyte 0012                 ?___ftdiv 0038                 ?___ftmul 0028  
               ?___fttol 0048                __pswtext1 0800                 ?_segchar 002F  
             sendbytee@c 002E           __size_of_delay 0018                 _LCD_Init 001C  
              _sendbytee 0DE1               ?_sendbytee 002B             sendbyte@mode 0022  
       __size_of___awdiv 005B         __size_of___awmod 004D         __size_of___ftdiv 00B7  
       __size_of___ftmul 00D2         __size_of___fttol 008E                 ___ftpack 0F04  
               ___lwtoft 0DB2         __size_of_segchar 0330                 __ptext10 0D9F  
               __ptext11 0E5C                 __ptext12 0EA9                 __ptext13 0E1A  
               __ptext14 001C                 __ptext15 0D8D                 __ptext16 0DC9  
              sendbyte@c 0023            __size_of_main 0266                 _sendbyte 0D8D  
             _LCD_SetPos 0DFC               _LCD_String 0E1A                 init_ram0 0D81  
            ??_sendbytee 002C         main@adc_data_raw 005C  
